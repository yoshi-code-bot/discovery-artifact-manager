{
  "revision": "20221020",
  "documentationLink": "https://developers.google.com/display-video/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/display-video-user-management": {
          "description": "Private Service: https://www.googleapis.com/auth/display-video-user-management"
        },
        "https://www.googleapis.com/auth/display-video": {
          "description": "Create, see, edit, and permanently delete your Display & Video 360 entities and reports"
        },
        "https://www.googleapis.com/auth/display-video-mediaplanning": {
          "description": "Create, see, and edit Display & Video 360 Campaign entities and see billing invoices"
        },
        "https://www.googleapis.com/auth/doubleclickbidmanager": {
          "description": "View and manage your reports in DoubleClick Bid Manager"
        }
      }
    }
  },
  "basePath": "",
  "version_module": true,
  "title": "Display & Video 360 API",
  "parameters": {
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "default": "json",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    }
  },
  "rootUrl": "https://displayvideo.googleapis.com/",
  "ownerDomain": "google.com",
  "servicePath": "",
  "schemas": {
    "BulkEditAssignedLocationsResponse": {
      "type": "object",
      "properties": {
        "assignedLocations": {
          "items": {
            "$ref": "AssignedLocation"
          },
          "type": "array",
          "description": "The list of assigned locations that have been successfully created. This list will be absent if empty."
        }
      },
      "id": "BulkEditAssignedLocationsResponse",
      "description": "Response message for AssignedLocationService.BulkEditAssignedLocations."
    },
    "UserRewardedContentTargetingOptionDetails": {
      "description": "Represents a targetable user rewarded content status for video ads only. This will be populated in the user_rewarded_content_details field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.",
      "id": "UserRewardedContentTargetingOptionDetails",
      "properties": {
        "userRewardedContent": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "User rewarded content is not specified or is unknown in this version.",
            "Represents ads where the user will see a reward after viewing.",
            "Represents all other ads besides user-rewarded."
          ],
          "enum": [
            "USER_REWARDED_CONTENT_UNSPECIFIED",
            "USER_REWARDED_CONTENT_USER_REWARDED",
            "USER_REWARDED_CONTENT_NOT_USER_REWARDED"
          ],
          "description": "Output only. User rewarded content status for video ads."
        }
      },
      "type": "object"
    },
    "BulkEditAssignedInventorySourcesResponse": {
      "properties": {
        "assignedInventorySources": {
          "description": "The list of assigned inventory sources that have been successfully created. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "AssignedInventorySource"
          }
        }
      },
      "id": "BulkEditAssignedInventorySourcesResponse",
      "type": "object",
      "description": "Response message for AssignedInventorySourceService.BulkEdit."
    },
    "BiddingStrategy": {
      "type": "object",
      "properties": {
        "maximizeSpendAutoBid": {
          "description": "A strategy that automatically adjusts the bid to optimize to your performance goal while spending the full budget. At insertion order level, the markup_type of line items cannot be set to `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`. In addition, when performance_goal_type is one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED` , the line_item_type of the insertion order line items must be either: * `LINE_ITEM_TYPE_DISPLAY_DEFAULT` * `LINE_ITEM_TYPE_VIDEO_DEFAULT` , and when performance_goal_type is either: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN` the line_item_type of the insertion order line items must be `LINE_ITEM_TYPE_VIDEO_DEFAULT`.",
          "$ref": "MaximizeSpendBidStrategy"
        },
        "performanceGoalAutoBid": {
          "$ref": "PerformanceGoalBidStrategy",
          "description": "A strategy that automatically adjusts the bid to meet or beat a specified performance goal. It is to be used only for a line item entity."
        },
        "fixedBid": {
          "$ref": "FixedBidStrategy",
          "description": "A strategy that uses a fixed bid price."
        }
      },
      "description": "Settings that control the bid strategy. Bid strategy determines the bid price.",
      "id": "BiddingStrategy"
    },
    "NegativeKeywordListAssignedTargetingOptionDetails": {
      "id": "NegativeKeywordListAssignedTargetingOptionDetails",
      "type": "object",
      "description": "Targeting details for negative keyword list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`.",
      "properties": {
        "negativeKeywordListId": {
          "description": "Required. ID of the negative keyword list. Should refer to the negative_keyword_list_id field of a NegativeKeywordList resource.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "IdFilter": {
      "id": "IdFilter",
      "description": "A filtering option that filters entities by their entity IDs.",
      "type": "object",
      "properties": {
        "adGroupIds": {
          "description": "YouTube Ad Groups to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "adGroupAdIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "YouTube Ads to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest."
        },
        "lineItemIds": {
          "description": "Line Items to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "insertionOrderIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "Insertion Orders to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest."
        },
        "mediaProductIds": {
          "description": "Media Products to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "campaignIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Campaigns to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest."
        }
      }
    },
    "MobileDeviceIdList": {
      "id": "MobileDeviceIdList",
      "properties": {
        "mobileDeviceIds": {
          "type": "array",
          "description": "A list of mobile device IDs defining Customer Match audience members. The size of mobile_device_ids mustn't be greater than 500,000.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Wrapper message for a list of mobile device IDs defining Customer Match audience members."
    },
    "ListUsersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListUsers` method to retrieve the next page of results. This token will be absent if there are no more results to return."
        },
        "users": {
          "type": "array",
          "description": "The list of users. This list will be absent if empty.",
          "items": {
            "$ref": "User"
          }
        }
      },
      "id": "ListUsersResponse"
    },
    "LocationList": {
      "description": "A list of locations used for targeting.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the location list.",
          "readOnly": true,
          "type": "string"
        },
        "locationListId": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique ID of the location list. Assigned by the system."
        },
        "advertiserId": {
          "format": "int64",
          "description": "Required. Immutable. The unique ID of the advertiser the location list belongs to.",
          "type": "string"
        },
        "locationType": {
          "type": "string",
          "description": "Required. Immutable. The type of location. All locations in the list will share this type.",
          "enum": [
            "TARGETING_LOCATION_TYPE_UNSPECIFIED",
            "TARGETING_LOCATION_TYPE_PROXIMITY",
            "TARGETING_LOCATION_TYPE_REGIONAL"
          ],
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "The type for proximity geo location.",
            "The type for regional geo location."
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the location list. Must be UTF-8 encoded with a maximum size of 240 bytes."
        }
      },
      "id": "LocationList"
    },
    "ReviewStatusInfo": {
      "type": "object",
      "properties": {
        "publisherReviewStatuses": {
          "type": "array",
          "description": "Publisher review statuses for the creative.",
          "items": {
            "$ref": "PublisherReviewStatus"
          }
        },
        "exchangeReviewStatuses": {
          "items": {
            "$ref": "ExchangeReviewStatus"
          },
          "type": "array",
          "description": "Exchange review statuses for the creative."
        },
        "creativeAndLandingPageReviewStatus": {
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ],
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ],
          "description": "Creative and landing page review status for the creative."
        },
        "approvalStatus": {
          "description": "Represents the basic approval needed for a creative to begin serving. Summary of creative_and_landing_page_review_status and content_and_policy_review_status.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is still under review and not servable.",
            "The creative has passed creative & landing page review and is servable, but is awaiting additional content & policy review.",
            "Both creative & landing page review and content & policy review are approved. The creative is servable.",
            "There is an issue with the creative that must be fixed before it can serve."
          ],
          "enum": [
            "APPROVAL_STATUS_UNSPECIFIED",
            "APPROVAL_STATUS_PENDING_NOT_SERVABLE",
            "APPROVAL_STATUS_PENDING_SERVABLE",
            "APPROVAL_STATUS_APPROVED_SERVABLE",
            "APPROVAL_STATUS_REJECTED_NOT_SERVABLE"
          ],
          "type": "string"
        },
        "contentAndPolicyReviewStatus": {
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ],
          "type": "string",
          "description": "Content and policy review status for the creative.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ]
        }
      },
      "id": "ReviewStatusInfo",
      "description": "Review statuses for the creative."
    },
    "ListAdvertiserAssignedTargetingOptionsResponse": {
      "description": "Response message for ListAdvertiserAssignedTargetingOptions.",
      "type": "object",
      "properties": {
        "assignedTargetingOptions": {
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return."
        }
      },
      "id": "ListAdvertiserAssignedTargetingOptionsResponse"
    },
    "ListPartnerAssignedTargetingOptionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListPartnerAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        },
        "assignedTargetingOptions": {
          "type": "array",
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        }
      },
      "type": "object",
      "id": "ListPartnerAssignedTargetingOptionsResponse"
    },
    "CustomBiddingScript": {
      "id": "CustomBiddingScript",
      "type": "object",
      "properties": {
        "active": {
          "description": "Output only. Whether the script is currently being used for scoring by the parent algorithm.",
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the custom bidding script."
        },
        "customBiddingAlgorithmId": {
          "description": "Output only. The unique ID of the custom bidding algorithm the script belongs to.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "state": {
          "description": "Output only. The state of the custom bidding script.",
          "enumDescriptions": [
            "The script state is not specified or is unknown in this version.",
            "The script has been accepted for scoring impressions.",
            "The script has been rejected by backend pipelines. It may have errors.",
            "The script is being processed for backend pipelines."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "REJECTED",
            "PENDING"
          ],
          "readOnly": true,
          "type": "string"
        },
        "errors": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "ScriptError"
          },
          "description": "Output only. Error details of a rejected custom bidding script. This field will only be populated when Script.state is REJECTED."
        },
        "createTime": {
          "description": "Output only. The time when the script was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "customBiddingScriptId": {
          "type": "string",
          "description": "Output only. The unique ID of the custom bidding script.",
          "format": "int64",
          "readOnly": true
        },
        "script": {
          "$ref": "CustomBiddingScriptRef",
          "description": "The reference to the uploaded script file."
        }
      },
      "description": "A single custom bidding script."
    },
    "DigitalContentLabelAssignedTargetingOptionDetails": {
      "id": "DigitalContentLabelAssignedTargetingOptionDetails",
      "description": "Targeting details for digital content label. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.",
      "properties": {
        "excludedContentRatingTier": {
          "description": "Required. The display name of the digital content label rating tier to be EXCLUDED.",
          "enumDescriptions": [
            "Content label is not specified in this version. This enum is a place holder for a default value and does not represent a real content rating.",
            "Content that has not been labeled.",
            "Content suitable for general audiences.",
            "Content suitable for most audiences with parental guidance.",
            "Content suitable for teen and older audiences.",
            "Content suitable only for mature audiences.",
            "Content suitable for family audiences. It is a subset of CONTENT_RATING_TIER_GENERAL. Only applicable to YouTube and Partners line items."
          ],
          "enum": [
            "CONTENT_RATING_TIER_UNSPECIFIED",
            "CONTENT_RATING_TIER_UNRATED",
            "CONTENT_RATING_TIER_GENERAL",
            "CONTENT_RATING_TIER_PARENTAL_GUIDANCE",
            "CONTENT_RATING_TIER_TEENS",
            "CONTENT_RATING_TIER_MATURE",
            "CONTENT_RATING_TIER_FAMILIES"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Operation": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "UserRewardedContentAssignedTargetingOptionDetails": {
      "description": "User rewarded content targeting option details. This will be populated in the user_rewarded_content_details field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.",
      "type": "object",
      "id": "UserRewardedContentAssignedTargetingOptionDetails",
      "properties": {
        "userRewardedContent": {
          "type": "string",
          "description": "Output only. User rewarded content status for video ads.",
          "readOnly": true,
          "enum": [
            "USER_REWARDED_CONTENT_UNSPECIFIED",
            "USER_REWARDED_CONTENT_USER_REWARDED",
            "USER_REWARDED_CONTENT_NOT_USER_REWARDED"
          ],
          "enumDescriptions": [
            "User rewarded content is not specified or is unknown in this version.",
            "Represents ads where the user will see a reward after viewing.",
            "Represents all other ads besides user-rewarded."
          ]
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`."
        }
      }
    },
    "AssignedUserRole": {
      "type": "object",
      "properties": {
        "partnerId": {
          "format": "int64",
          "type": "string",
          "description": "The ID of the partner that the assigned user role applies to."
        },
        "userRole": {
          "type": "string",
          "enumDescriptions": [
            "Default value when the user role is not specified or is unknown in this version.",
            "The user can manage campaigns, creatives, insertion orders, line items, and reports for the entity. They can view and edit billing information, create or modify users, and enable or disable exchanges. This role can only be assigned for a partner entity.",
            "The user can manage campaigns, creatives, insertion orders, line items, and reports for the entity. They can create and modify other `ADMIN_PARTNER_CLIENT` users and view billing information. They cannot view revenue models, markups, or any other reseller-sensitive fields. This role can only be assigned for a partner entity.",
            "The user can manage campaigns, creatives, insertion orders, line items, and reports for the entity. They cannot create and modify users or view billing information.",
            "The user can view all campaigns, creatives, insertion orders, line items, and reports for the entity, including all cost data. They can create and modify planning-related features, including plans and inventory.",
            "The user can view all campaigns, creatives, insertion orders, line items, and reports for the entity. They can create or modify planning-related features, including plans and inventory. They have no access to cost data and cannot start, accept, or negotiate deals.",
            "The user can manage campaigns, creatives, insertion orders, line items, and reports for the entity. They cannot create or modify other users or view billing information. They cannot view revenue models, markups, or any other reseller-sensitive fields. This role can only be assigned for an advertiser entity.",
            "The user can only build reports and view data for the entity.",
            "The user can only create and manage reports.",
            "The user can only create and manage the following client-safe reports: General, Audience Performance, Cross-Partner, Keyword, Order ID, Category, and Third-Party Data Provider.",
            "The user can view media plan information they need to collaborate, but can't view cost-related data or Marketplace.",
            "The user can view media plan information they need to collaborate, but can't view cost-related data or Marketplace. In addition, they can add other creative admins or creative users to the entity."
          ],
          "enum": [
            "USER_ROLE_UNSPECIFIED",
            "ADMIN",
            "ADMIN_PARTNER_CLIENT",
            "STANDARD",
            "STANDARD_PLANNER",
            "STANDARD_PLANNER_LIMITED",
            "STANDARD_PARTNER_CLIENT",
            "READ_ONLY",
            "REPORTING_ONLY",
            "LIMITED_REPORTING_ONLY",
            "CREATIVE",
            "CREATIVE_ADMIN"
          ],
          "description": "Required. The user role to assign to a user for the entity."
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the advertiser that the assigend user role applies to."
        },
        "assignedUserRoleId": {
          "type": "string",
          "description": "Output only. The ID of the assigned user role.",
          "readOnly": true
        }
      },
      "id": "AssignedUserRole",
      "description": "A single assigned user role, which defines a user's authorized interaction with a specified partner or advertiser."
    },
    "SdfDownloadTaskMetadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "enum": [
            "SDF_VERSION_UNSPECIFIED",
            "SDF_VERSION_3_1",
            "SDF_VERSION_4",
            "SDF_VERSION_4_1",
            "SDF_VERSION_4_2",
            "SDF_VERSION_5",
            "SDF_VERSION_5_1",
            "SDF_VERSION_5_2",
            "SDF_VERSION_5_3",
            "SDF_VERSION_5_4",
            "SDF_VERSION_5_5"
          ],
          "enumDescriptions": [
            "SDF version value is not specified or is unknown in this version.",
            "SDF version 3.1",
            "SDF version 4",
            "SDF version 4.1",
            "SDF version 4.2",
            "SDF version 5.",
            "SDF version 5.1",
            "SDF version 5.2",
            "SDF version 5.3",
            "SDF version 5.4",
            "SDF version 5.5"
          ],
          "description": "The SDF version used to execute this download task."
        },
        "endTime": {
          "type": "string",
          "description": "The time when execution was completed.",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "The time when the operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "SdfDownloadTaskMetadata",
      "description": "Type for the metadata returned by [SdfDownloadTaskService.CreateSdfDownloadTask]."
    },
    "BulkEditNegativeKeywordsResponse": {
      "properties": {
        "negativeKeywords": {
          "type": "array",
          "items": {
            "$ref": "NegativeKeyword"
          },
          "description": "The list of negative keywords that have been successfully created. This list will be absent if empty."
        }
      },
      "description": "Response message for NegativeKeywordService.BulkEditNegativeKeywords.",
      "type": "object",
      "id": "BulkEditNegativeKeywordsResponse"
    },
    "GenderAssignedTargetingOptionDetails": {
      "id": "GenderAssignedTargetingOptionDetails",
      "properties": {
        "gender": {
          "enum": [
            "GENDER_UNSPECIFIED",
            "GENDER_MALE",
            "GENDER_FEMALE",
            "GENDER_UNKNOWN"
          ],
          "description": "The gender of the audience. Output only in v1. Required in v2.",
          "enumDescriptions": [
            "Default value when gender is not specified in this version. This enum is a place holder for default value and does not represent a real gender option.",
            "The audience gender is male.",
            "The audience gender is female.",
            "The audience gender is unknown."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Details for assigned gender targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_GENDER`."
    },
    "CounterEvent": {
      "properties": {
        "reportingName": {
          "type": "string",
          "description": "Required. The name used to identify this counter event in reports."
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the counter event."
        }
      },
      "type": "object",
      "description": "Counter event of the creative.",
      "id": "CounterEvent"
    },
    "PartnerDataAccessConfig": {
      "description": "Settings that control how partner related data may be accessed.",
      "type": "object",
      "properties": {
        "sdfConfig": {
          "description": "Structured Data Files (SDF) settings for the partner. The SDF configuration for the partner.",
          "$ref": "SdfConfig"
        }
      },
      "id": "PartnerDataAccessConfig"
    },
    "InventorySourceStatus": {
      "type": "object",
      "properties": {
        "entityPauseReason": {
          "description": "The user-provided reason for pausing this inventory source. Must not exceed 100 characters. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.",
          "type": "string"
        },
        "sellerPauseReason": {
          "description": "Output only. The seller-provided reason for pausing this inventory source. Only applicable for inventory sources synced directly from the publishers and when seller_status is set to `ENTITY_STATUS_PAUSED`.",
          "readOnly": true,
          "type": "string"
        },
        "entityStatus": {
          "type": "string",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "description": "Whether or not the inventory source is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`."
        },
        "sellerStatus": {
          "type": "string",
          "description": "Output only. The status set by the seller for the inventory source. Only applicable for inventory sources synced directly from the publishers. Acceptable values are `ENTITY_STATUS_ACTIVE` and `ENTITY_STATUS_PAUSED`.",
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ]
        },
        "configStatus": {
          "readOnly": true,
          "enumDescriptions": [
            "The approval status is not specified or is unknown in this version.",
            "The beginning state of a guaranteed inventory source. The inventory source in this state needs to be configured.",
            "The state after the buyer configures a guaranteed inventory source."
          ],
          "type": "string",
          "description": "Output only. The configuration status of the inventory source. Only applicable for guaranteed inventory sources. Acceptable values are `INVENTORY_SOURCE_CONFIG_STATUS_PENDING` and `INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED`. An inventory source must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve.",
          "enum": [
            "INVENTORY_SOURCE_CONFIG_STATUS_UNSPECIFIED",
            "INVENTORY_SOURCE_CONFIG_STATUS_PENDING",
            "INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED"
          ]
        }
      },
      "description": "The status related settings of the inventory source.",
      "id": "InventorySourceStatus"
    },
    "VideoPlayerSizeTargetingOptionDetails": {
      "properties": {
        "videoPlayerSize": {
          "enumDescriptions": [
            "Video player size is not specified in this version. This enum is a place holder for a default value and does not represent a real video player size.",
            "The dimensions of the video player are less than 400×300 (desktop), or up to 20% of screen covered (mobile).",
            "The dimensions of the video player are between 400x300 and 1280x720 pixels (desktop), or 20% to 90% of the screen covered (mobile).",
            "The dimensions of the video player are 1280×720 or greater (desktop), or over 90% of the screen covered (mobile).",
            "The dimensions of the video player are unknown."
          ],
          "description": "Output only. The video player size.",
          "enum": [
            "VIDEO_PLAYER_SIZE_UNSPECIFIED",
            "VIDEO_PLAYER_SIZE_SMALL",
            "VIDEO_PLAYER_SIZE_LARGE",
            "VIDEO_PLAYER_SIZE_HD",
            "VIDEO_PLAYER_SIZE_UNKNOWN"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "VideoPlayerSizeTargetingOptionDetails",
      "description": "Represents a targetable video player size. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`."
    },
    "ListCreativesResponse": {
      "type": "object",
      "properties": {
        "creatives": {
          "description": "The list of creatives. This list will be absent if empty.",
          "items": {
            "$ref": "Creative"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCreativesRequest` method to retrieve the next page of results. If this field is null, it means this is the last page.",
          "type": "string"
        }
      },
      "id": "ListCreativesResponse"
    },
    "ExchangeConfigEnabledExchange": {
      "id": "ExchangeConfigEnabledExchange",
      "properties": {
        "googleAdManagerAgencyId": {
          "readOnly": true,
          "description": "Output only. Agency ID of Google Ad Manager. The field is only relevant when Google Ad Manager is the enabled exchange.",
          "type": "string"
        },
        "exchange": {
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX.",
            "Open8.",
            "Triton.",
            "TripleLift.",
            "Taboola.",
            "InMobi.",
            "Smaato.",
            "Aja.",
            "Supership.",
            "Nexstar Digital.",
            "Waze.",
            "SoundCast.",
            "Sharethrough.",
            "Fyber.",
            "Red For Publishers.",
            "Media.net.",
            "Tapjoy.",
            "Vistar.",
            "DAX."
          ],
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_SUPERSHIP",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE",
            "EXCHANGE_SOUNDCAST",
            "EXCHANGE_SHARETHROUGH",
            "EXCHANGE_FYBER",
            "EXCHANGE_RED_FOR_PUBLISHERS",
            "EXCHANGE_MEDIANET",
            "EXCHANGE_TAPJOY",
            "EXCHANGE_VISTAR",
            "EXCHANGE_DAX"
          ],
          "type": "string",
          "description": "The enabled exchange."
        },
        "googleAdManagerBuyerNetworkId": {
          "description": "Output only. Network ID of Google Ad Manager. The field is only relevant when Google Ad Manager is the enabled exchange.",
          "type": "string",
          "readOnly": true
        },
        "seatId": {
          "description": "Output only. Seat ID of the enabled exchange.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "An enabled exchange in the partner."
    },
    "ContentInstreamPositionAssignedTargetingOptionDetails": {
      "type": "object",
      "description": "Assigned content instream position targeting option details. This will be populated in the content_instream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.",
      "properties": {
        "adType": {
          "type": "string",
          "description": "Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`. * `AD_TYPE_AUDIO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_AUDIO_DEFAULT`.",
          "readOnly": true,
          "enumDescriptions": [
            "Ad type is not specified or is unknown in this version.",
            "Display creatives, e.g. image and HTML5.",
            "Video creatives, e.g. video ads that play during streaming content in video players.",
            "Audio creatives, e.g. audio ads that play during audio content."
          ],
          "enum": [
            "AD_TYPE_UNSPECIFIED",
            "AD_TYPE_DISPLAY",
            "AD_TYPE_VIDEO",
            "AD_TYPE_AUDIO"
          ]
        },
        "contentInstreamPosition": {
          "type": "string",
          "enum": [
            "CONTENT_INSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_INSTREAM_POSITION_PRE_ROLL",
            "CONTENT_INSTREAM_POSITION_MID_ROLL",
            "CONTENT_INSTREAM_POSITION_POST_ROLL",
            "CONTENT_INSTREAM_POSITION_UNKNOWN"
          ],
          "enumDescriptions": [
            "Content instream position is not specified in this version. This enum is a place holder for a default value and does not represent a real in stream ad position.",
            "Ads that play before streaming content.",
            "Ads that play between the beginning and end of streaming content.",
            "Ads that play at the end of streaming content.",
            "Ads instream position is unknown."
          ],
          "description": "The content instream position for video or audio ads. Output only in v1. Required in v2."
        }
      },
      "id": "ContentInstreamPositionAssignedTargetingOptionDetails"
    },
    "Dimensions": {
      "type": "object",
      "description": "Dimensions.",
      "id": "Dimensions",
      "properties": {
        "widthPixels": {
          "format": "int32",
          "description": "The width in pixels.",
          "type": "integer"
        },
        "heightPixels": {
          "type": "integer",
          "format": "int32",
          "description": "The height in pixels."
        }
      }
    },
    "ListAssignedLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAssignedLocations` method to retrieve the next page of results.",
          "type": "string"
        },
        "assignedLocations": {
          "description": "The list of assigned locations. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "AssignedLocation"
          }
        }
      },
      "id": "ListAssignedLocationsResponse",
      "description": "Response message for AssignedLocationService.ListAssignedLocations.",
      "type": "object"
    },
    "YoutubeAndPartnersSettings": {
      "description": "Settings for YouTube and Partners line items.",
      "type": "object",
      "id": "YoutubeAndPartnersSettings",
      "properties": {
        "viewFrequencyCap": {
          "$ref": "FrequencyCap",
          "description": "The view frequency cap settings of the line item. The max_views field in this settings object must be used if assigning a limited cap."
        },
        "inventorySourceSettings": {
          "description": "Settings that control what YouTube and Partners inventories the line item will target.",
          "$ref": "YoutubeAndPartnersInventorySourceConfig"
        },
        "biddingStrategy": {
          "description": "The bidding strategy of the YouTube and Partners line item.",
          "$ref": "YoutubeAndPartnersBiddingStrategy"
        },
        "contentCategory": {
          "description": "The kind of content on which the YouTube and Partners ads will be shown.",
          "type": "string",
          "enumDescriptions": [
            "Content category is not specified or is unknown in this version.",
            "A category consisting of a wide range of content appropriate for most brands. The content is based off of YouTube's [advertiser-friendly content guidelines](https://support.google.com/youtube/answer/6162278).",
            "A category including all content across YouTube and video partners that meets standards for monetization.",
            "A category consisting of a reduced range of content that meets heightened requirements, especially regarding inappropriate language and sexual suggestiveness."
          ],
          "enum": [
            "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_UNSPECIFIED",
            "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_STANDARD",
            "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_EXPANDED",
            "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_LIMITED"
          ]
        },
        "thirdPartyMeasurementSettings": {
          "description": "The third-party measurement settings of the line item.",
          "$ref": "YoutubeAndPartnersThirdPartyMeasurementSettings"
        }
      }
    },
    "DuplicateLineItemRequest": {
      "description": "Request message for LineItemService.DuplicateLineItem.",
      "type": "object",
      "id": "DuplicateLineItemRequest",
      "properties": {
        "targetDisplayName": {
          "description": "The display name of the resulting line item. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        }
      }
    },
    "ContentStreamTypeAssignedTargetingOptionDetails": {
      "type": "object",
      "description": "Details for content stream type assigned targeting option. This will be populated in the content_stream_type_details field when targeting_type is `TARGETING_TYPE_CONTENT_STREAM_TYPE`. Explicitly targeting all options is not supported. Remove all content stream type targeting options to achieve this effect.",
      "properties": {
        "contentStreamType": {
          "readOnly": true,
          "description": "Output only. The content stream type.",
          "type": "string",
          "enumDescriptions": [
            "Content stream type is not specified in this version. This enum is a place holder for a default value and does not represent a real content stream type.",
            "The content is being live-streamed.",
            "The content is viewed on-demand."
          ],
          "enum": [
            "CONTENT_STREAM_TYPE_UNSPECIFIED",
            "CONTENT_LIVE_STREAM",
            "CONTENT_ON_DEMAND"
          ]
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_STREAM_TYPE`."
        }
      },
      "id": "ContentStreamTypeAssignedTargetingOptionDetails"
    },
    "OmidAssignedTargetingOptionDetails": {
      "id": "OmidAssignedTargetingOptionDetails",
      "type": "object",
      "properties": {
        "omid": {
          "description": "The type of Open Measurement enabled inventory. Output only in v1. Required in v2.",
          "enumDescriptions": [
            "Default value when omid targeting is not specified in this version.",
            "Open Measurement enabled mobile display inventory."
          ],
          "enum": [
            "OMID_UNSPECIFIED",
            "OMID_FOR_MOBILE_DISPLAY_ADS"
          ],
          "type": "string"
        }
      },
      "description": "Represents a targetable Open Measurement enabled inventory type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_OMID`."
    },
    "InsertionOrder": {
      "id": "InsertionOrder",
      "properties": {
        "partnerCosts": {
          "items": {
            "$ref": "PartnerCost"
          },
          "description": "The partner costs associated with the insertion order. If absent or empty in CreateInsertionOrder method, the newly created insertion order will inherit partner costs from the partner settings.",
          "type": "array"
        },
        "budget": {
          "$ref": "InsertionOrderBudget",
          "description": "Required. The budget allocation settings of the insertion order."
        },
        "frequencyCap": {
          "$ref": "FrequencyCap",
          "description": "Required. The frequency capping setting of the insertion order."
        },
        "integrationDetails": {
          "$ref": "IntegrationDetails",
          "description": "Additional integration details of the insertion order."
        },
        "name": {
          "description": "Output only. The resource name of the insertion order.",
          "readOnly": true,
          "type": "string"
        },
        "insertionOrderId": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The unique ID of the insertion order. Assigned by the system.",
          "type": "string"
        },
        "entityStatus": {
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "type": "string",
          "description": "Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active."
        },
        "bidStrategy": {
          "description": "The bidding strategy of the insertion order. By default, fixed_bid is set.",
          "$ref": "BiddingStrategy"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the insertion order was last updated. Assigned by the system.",
          "readOnly": true,
          "type": "string"
        },
        "performanceGoal": {
          "description": "Required. Performance goal of the insertion order.",
          "$ref": "PerformanceGoal"
        },
        "insertionOrderType": {
          "enumDescriptions": [
            "Insertion order type is not specified or is unknown.",
            "Real-time bidding.",
            "Over-the-top."
          ],
          "enum": [
            "INSERTION_ORDER_TYPE_UNSPECIFIED",
            "RTB",
            "OVER_THE_TOP"
          ],
          "description": "The type of insertion order. If this field is unspecified in creation, the value defaults to `RTB`.",
          "type": "string"
        },
        "billableOutcome": {
          "description": "Immutable. The billable outcome of the insertion order.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified billable outcome.",
            "Pay per impressions.",
            "Pay per click.",
            "Pay per active view."
          ],
          "enum": [
            "BILLABLE_OUTCOME_UNSPECIFIED",
            "BILLABLE_OUTCOME_PAY_PER_IMPRESSION",
            "BILLABLE_OUTCOME_PAY_PER_CLICK",
            "BILLABLE_OUTCOME_PAY_PER_VIEWABLE_IMPRESSION"
          ]
        },
        "reservationType": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The reservation type of the insertion order.",
          "enumDescriptions": [
            "Reservation type value is not specified or is unknown in this version.",
            "Not created through a guaranteed inventory source.",
            "Created through a programmatic guaranteed inventory source.",
            "Created through a tag guaranteed inventory source.",
            "Created through a Petra inventory source. Only applicable to YouTube and Partners line items.",
            "Created with an instant quote. Only applicable to YouTube and partners line items."
          ],
          "enum": [
            "RESERVATION_TYPE_UNSPECIFIED",
            "RESERVATION_TYPE_NOT_GUARANTEED",
            "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED",
            "RESERVATION_TYPE_TAG_GUARANTEED",
            "RESERVATION_TYPE_PETRA_VIRAL",
            "RESERVATION_TYPE_INSTANT_RESERVE"
          ]
        },
        "campaignId": {
          "format": "int64",
          "type": "string",
          "description": "Required. Immutable. The unique ID of the campaign that the insertion order belongs to."
        },
        "advertiserId": {
          "readOnly": true,
          "description": "Output only. The unique ID of the advertiser the insertion order belongs to.",
          "format": "int64",
          "type": "string"
        },
        "pacing": {
          "description": "Required. The budget spending speed setting of the insertion order.",
          "$ref": "Pacing"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the insertion order. Must be UTF-8 encoded with a maximum size of 240 bytes."
        }
      },
      "description": "A single insertion order.",
      "type": "object"
    },
    "DuplicateLineItemResponse": {
      "description": "Response message for LineItemService.DuplicateLineItem.",
      "id": "DuplicateLineItemResponse",
      "type": "object",
      "properties": {
        "duplicateLineItemId": {
          "description": "The ID of the successfully created line item.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "OperatingSystemTargetingOptionDetails": {
      "description": "Represents a targetable operating system. This will be populated in the operating_system_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.",
      "type": "object",
      "id": "OperatingSystemTargetingOptionDetails",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the operating system.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PerformanceGoalBidStrategy": {
      "type": "object",
      "properties": {
        "performanceGoalType": {
          "enum": [
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Cost per action.",
            "Cost per click.",
            "Viewable CPM.",
            "Custom bidding algorithm.",
            "Completed inview and audible views.",
            "Inview time over 10 secs views.",
            "Viewable impressions."
          ],
          "description": "Required. The type of the performance goal that the bidding strategy will try to meet or beat. For line item level usage, the value must be one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`."
        },
        "maxAverageCpmBidAmountMicros": {
          "description": "The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. Not applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`. For example, 1500000 represents 1.5 standard units of the currency.",
          "format": "int64",
          "type": "string"
        },
        "customBiddingAlgorithmId": {
          "description": "The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.",
          "format": "int64",
          "type": "string"
        },
        "performanceGoalAmountMicros": {
          "format": "int64",
          "type": "string",
          "description": "Required. The performance goal the bidding strategy will attempt to meet or beat, in micros of the advertiser's currency or in micro of the ROAS (Return On Advertising Spend) value which is also based on advertiser's currency. Must be greater than or equal to a billable unit of the given currency and smaller or equal to upper bounds. Each performance_goal_type has its upper bound: * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA`, upper bound is 10000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`, upper bound is 1000.00 and lower bound is 0.01. Example: If set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, the bid price will be based on the probability that each available impression will be viewable. For example, if viewable CPM target is $2 and an impression is 40% likely to be viewable, the bid price will be $0.80 CPM (40% of $2). For example, 1500000 represents 1.5 standard units of the currency or ROAS value."
        }
      },
      "id": "PerformanceGoalBidStrategy",
      "description": "A strategy that automatically adjusts the bid to meet or beat a specified performance goal."
    },
    "ParentEntityFilter": {
      "description": "A filtering option that filters on selected file types belonging to a chosen set of filter entities.",
      "type": "object",
      "id": "ParentEntityFilter",
      "properties": {
        "filterType": {
          "enum": [
            "FILTER_TYPE_UNSPECIFIED",
            "FILTER_TYPE_NONE",
            "FILTER_TYPE_ADVERTISER_ID",
            "FILTER_TYPE_CAMPAIGN_ID",
            "FILTER_TYPE_MEDIA_PRODUCT_ID",
            "FILTER_TYPE_INSERTION_ORDER_ID",
            "FILTER_TYPE_LINE_ITEM_ID"
          ],
          "description": "Required. Filter type used to filter fetched entities.",
          "enumDescriptions": [
            "Default value when type is unspecified or is unknown in this version.",
            "If selected, no filter will be applied to the download. Can only be used if an Advertiser is specified in CreateSdfDownloadTaskRequest.",
            "Advertiser ID. If selected, all filter IDs must be Advertiser IDs that belong to the Partner specified in CreateSdfDownloadTaskRequest.",
            "Campaign ID. If selected, all filter IDs must be Campaign IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
            "Media Product ID. If selected, all filter IDs must be Media Product IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Can only be used for downloading `FILE_TYPE_MEDIA_PRODUCT`.",
            "Insertion Order ID. If selected, all filter IDs must be Insertion Order IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Can only be used for downloading `FILE_TYPE_INSERTION_ORDER`, `FILE_TYPE_LINE_ITEM`, `FILE_TYPE_AD_GROUP`, and `FILE_TYPE_AD`.",
            "Line Item ID. If selected, all filter IDs must be Line Item IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Can only be used for downloading `FILE_TYPE_LINE_ITEM`, `FILE_TYPE_AD_GROUP`, and `FILE_TYPE_AD`."
          ],
          "type": "string"
        },
        "filterIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "The IDs of the specified filter type. This is used to filter entities to fetch. If filter type is not `FILTER_TYPE_NONE`, at least one ID must be specified."
        },
        "fileType": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "FILE_TYPE_UNSPECIFIED",
              "FILE_TYPE_CAMPAIGN",
              "FILE_TYPE_MEDIA_PRODUCT",
              "FILE_TYPE_INSERTION_ORDER",
              "FILE_TYPE_LINE_ITEM",
              "FILE_TYPE_AD_GROUP",
              "FILE_TYPE_AD"
            ],
            "enumDescriptions": [
              "Default value when type is unspecified or is unknown in this version.",
              "Campaign.",
              "Media Product.",
              "Insertion Order.",
              "Line Item.",
              "YouTube Ad Group.",
              "YouTube Ad."
            ]
          },
          "description": "Required. File types that will be returned."
        }
      }
    },
    "CustomList": {
      "id": "CustomList",
      "description": "Describes a custom list entity, such as a custom affinity or custom intent audience list.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the custom list."
        },
        "customListId": {
          "description": "Output only. The unique ID of the custom list. Assigned by the system.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. The display name of the custom list. .",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "CampaignFlight": {
      "description": "Settings that track the planned spend and duration of a campaign.",
      "id": "CampaignFlight",
      "type": "object",
      "properties": {
        "plannedDates": {
          "$ref": "DateRange",
          "description": "Required. The dates that the campaign is expected to run. They are resolved relative to the parent advertiser's time zone. * The dates specified here will not affect serving. They are used to generate alerts and warnings. For example, if the flight date of any child insertion order is outside the range of these dates, the user interface will show a warning. * `start_date` is required and must be the current date or later. * `end_date` is optional. If specified, it must be the `start_date` or later. * Any specified date must be before the year 2037."
        },
        "plannedSpendAmountMicros": {
          "format": "int64",
          "type": "string",
          "description": "The amount the campaign is expected to spend for its given planned_dates. This will not limit serving, but will be used for tracking spend in the DV360 UI. The amount is in micros. Must be greater than or equal to 0. For example, 500000000 represents 500 standard units of the currency."
        }
      }
    },
    "YoutubeAndPartnersInventorySourceConfig": {
      "properties": {
        "includeYoutubeVideos": {
          "type": "boolean",
          "description": "Whether to target inventory of channels and videos on YouTube and YouTube videos embedded on other sites."
        },
        "includeYoutubeVideoPartners": {
          "description": "Whether to target inventory on a collection of partner sites and apps that follow the same brand safety standards as YouTube.",
          "type": "boolean"
        },
        "includeYoutubeSearch": {
          "type": "boolean",
          "description": "Whether to target inventory on the YouTube search results page."
        }
      },
      "id": "YoutubeAndPartnersInventorySourceConfig",
      "type": "object",
      "description": "Settings that control what YouTube related inventories the YouTube and Partners line item will target."
    },
    "CampaignBudget": {
      "id": "CampaignBudget",
      "properties": {
        "prismaConfig": {
          "$ref": "PrismaConfig",
          "description": "Additional metadata for use by the Mediaocean Prisma tool. Required for Mediaocean budgets. Only applicable to prisma_enabled advertisers."
        },
        "budgetId": {
          "type": "string",
          "format": "int64",
          "description": "The unique ID of the campaign budget. Assigned by the system. Do not set for new budgets. Must be included when updating or adding budgets to campaign_budgets. Otherwise, a new ID will be generated and assigned."
        },
        "budgetUnit": {
          "description": "Required. Immutable. Specifies whether the budget is measured in currency or impressions.",
          "enum": [
            "BUDGET_UNIT_UNSPECIFIED",
            "BUDGET_UNIT_CURRENCY",
            "BUDGET_UNIT_IMPRESSIONS"
          ],
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Budgeting in currency amounts.",
            "Budgeting in impression amounts."
          ],
          "type": "string"
        },
        "dateRange": {
          "description": "Required. The date range for the campaign budget. Linked budget segments may have a different date range. They are resolved relative to the parent advertiser's time zone. Both `start_date` and `end_date` must be before the year 2037.",
          "$ref": "DateRange"
        },
        "externalBudgetSource": {
          "type": "string",
          "description": "Required. The external source of the budget.",
          "enum": [
            "EXTERNAL_BUDGET_SOURCE_UNSPECIFIED",
            "EXTERNAL_BUDGET_SOURCE_NONE",
            "EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN"
          ],
          "enumDescriptions": [
            "External budget source value is not specified or unknown in this version.",
            "Budget has no external source.",
            "Budget source is Mediaocean."
          ]
        },
        "invoiceGroupingId": {
          "description": "Immutable. The ID used to group budgets to be included the same invoice. If this field is set and the invoice level of the corresponding billing profile is set to \"Budget invoice grouping ID\", all external_budget_id sharing the same invoice_grouping_id will be grouped in the same invoice.",
          "type": "string"
        },
        "externalBudgetId": {
          "type": "string",
          "description": "Immutable. The ID identifying this budget to the external source. If this field is set and the invoice detail level of the corresponding billing profile is set to \"Budget level PO\", all impressions served against this budget will include this ID on the invoice. Must be unique under the campaign."
        },
        "budgetAmountMicros": {
          "type": "string",
          "description": "Required. The total amount the linked insertion order segments can budget. The amount is in micros. Must be greater than 0. For example, 500000000 represents 500 standard units of the currency.",
          "format": "int64"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the budget. Must be UTF-8 encoded with a maximum size of 240 bytes."
        }
      },
      "type": "object",
      "description": "Settings that control how the campaign budget is allocated."
    },
    "ParentalStatusTargetingOptionDetails": {
      "type": "object",
      "id": "ParentalStatusTargetingOptionDetails",
      "properties": {
        "parentalStatus": {
          "type": "string",
          "enum": [
            "PARENTAL_STATUS_UNSPECIFIED",
            "PARENTAL_STATUS_PARENT",
            "PARENTAL_STATUS_NOT_A_PARENT",
            "PARENTAL_STATUS_UNKNOWN"
          ],
          "readOnly": true,
          "description": "Output only. The parental status of an audience.",
          "enumDescriptions": [
            "Default value when parental status is not specified in this version. This enum is a place holder for default value and does not represent a real parental status option.",
            "The audience is a parent.",
            "The audience is not a parent.",
            "The parental status of the audience is unknown."
          ]
        }
      },
      "description": "Represents a targetable parental status. This will be populated in the parental_status_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`."
    },
    "PrismaCpeCode": {
      "description": "Google Payments Center supports searching and filtering on the component fields of this code.",
      "properties": {
        "prismaProductCode": {
          "type": "string",
          "description": "The Prisma product code."
        },
        "prismaClientCode": {
          "type": "string",
          "description": "The Prisma client code."
        },
        "prismaEstimateCode": {
          "description": "The Prisma estimate code.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PrismaCpeCode"
    },
    "AudienceGroupAssignedTargetingOptionDetails": {
      "properties": {
        "includedFirstAndThirdPartyAudienceGroups": {
          "type": "array",
          "items": {
            "$ref": "FirstAndThirdPartyAudienceGroup"
          },
          "description": "The first and third party audience ids and recencies of included first and third party audience groups. Each first and third party audience group contains first and third party audience ids only. The relation between each first and third party audience group is INTERSECTION, and the result is UNION'ed with other audience groups. Repeated groups with same settings will be ignored."
        },
        "excludedFirstAndThirdPartyAudienceGroup": {
          "description": "The first and third party audience ids and recencies of the excluded first and third party audience group. Used for negative targeting. The COMPLEMENT of the UNION of this group and other excluded audience groups is used as an INTERSECTION to any positive audience targeting. All items are logically ‘OR’ of each other.",
          "$ref": "FirstAndThirdPartyAudienceGroup"
        },
        "excludedGoogleAudienceGroup": {
          "$ref": "GoogleAudienceGroup",
          "description": "The Google audience ids of the excluded Google audience group. Used for negative targeting. The COMPLEMENT of the UNION of this group and other excluded audience groups is used as an INTERSECTION to any positive audience targeting. Only contains Affinity, In-market and Installed-apps type Google audiences. All items are logically ‘OR’ of each other."
        },
        "includedCombinedAudienceGroup": {
          "$ref": "CombinedAudienceGroup",
          "description": "The combined audience ids of the included combined audience group. Contains combined audience ids only."
        },
        "includedGoogleAudienceGroup": {
          "$ref": "GoogleAudienceGroup",
          "description": "The Google audience ids of the included Google audience group. Contains Google audience ids only."
        },
        "includedCustomListGroup": {
          "$ref": "CustomListGroup",
          "description": "The custom list ids of the included custom list group. Contains custom list ids only."
        }
      },
      "type": "object",
      "id": "AudienceGroupAssignedTargetingOptionDetails",
      "description": "Assigned audience group targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AUDIENCE_GROUP`. The relation between each group is UNION, except for excluded_first_and_third_party_audience_group and excluded_google_audience_group, of which COMPLEMENT is used as an INTERSECTION with other groups."
    },
    "ListInsertionOrdersResponse": {
      "properties": {
        "insertionOrders": {
          "type": "array",
          "items": {
            "$ref": "InsertionOrder"
          },
          "description": "The list of insertion orders. This list will be absent if empty."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInsertionOrders` method to retrieve the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListInsertionOrdersResponse"
    },
    "CustomBiddingModelDetails": {
      "type": "object",
      "description": "The details of a custom bidding algorithm model for a single shared advertiser.",
      "properties": {
        "advertiserId": {
          "type": "string",
          "description": "The unique ID of the relevant advertiser.",
          "format": "int64"
        },
        "suspensionState": {
          "type": "string",
          "enumDescriptions": [
            "State is not specified or is unknown in this version.",
            "Model is enabled, either recently used, currently used or scheduled to be used. The algorithm is actively scoring impressions for this advertiser.",
            "Model has not been used recently. Although the model still acts as `ENABLED`, it will eventually be suspended if not used.",
            "Model is suspended from scoring impressions and cannot serve. If the algorithm is assigned to a line item under this advertiser or otherwise updated, it will switch back to the `ENABLED` state and require time to prepare the serving model again."
          ],
          "readOnly": true,
          "enum": [
            "SUSPENSION_STATE_UNSPECIFIED",
            "SUSPENSION_STATE_ENABLED",
            "SUSPENSION_STATE_DORMANT",
            "SUSPENSION_STATE_SUSPENDED"
          ],
          "description": "Output only. The suspension state of custom bidding model."
        },
        "readinessState": {
          "enum": [
            "READINESS_STATE_UNSPECIFIED",
            "READINESS_STATE_ACTIVE",
            "READINESS_STATE_INSUFFICIENT_DATA",
            "READINESS_STATE_TRAINING",
            "READINESS_STATE_NO_VALID_SCRIPT"
          ],
          "description": "The readiness state of custom bidding model.",
          "enumDescriptions": [
            "State is not specified or is unknown in this version.",
            "The model is trained and ready for serving.",
            "There is not enough data to train the serving model.",
            "The model is training and not ready for serving.",
            "A valid custom bidding script has not been provided with which to train the model. This state will only be applied to algorithms whose `custom_bidding_algorithm_type` is `SCRIPT_BASED`."
          ],
          "type": "string"
        }
      },
      "id": "CustomBiddingModelDetails"
    },
    "BulkEditSitesRequest": {
      "description": "Request message for SiteService.BulkEditSites.",
      "properties": {
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the advertiser that owns the parent channel."
        },
        "deletedSites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The sites to delete in batch, specified as a list of site url_or_app_ids."
        },
        "partnerId": {
          "type": "string",
          "description": "The ID of the partner that owns the parent channel.",
          "format": "int64"
        },
        "createdSites": {
          "description": "The sites to create in batch, specified as a list of Sites.",
          "type": "array",
          "items": {
            "$ref": "Site"
          }
        }
      },
      "type": "object",
      "id": "BulkEditSitesRequest"
    },
    "EditCustomerMatchMembersRequest": {
      "properties": {
        "advertiserId": {
          "type": "string",
          "description": "Required. The ID of the owner advertiser of the updated Customer Match FirstAndThirdPartyAudience.",
          "format": "int64"
        },
        "addedContactInfoList": {
          "$ref": "ContactInfoList",
          "description": "Input only. A list of contact information to define the members to be added."
        },
        "addedMobileDeviceIdList": {
          "$ref": "MobileDeviceIdList",
          "description": "Input only. A list of mobile device IDs to define the members to be added."
        }
      },
      "description": "Request message for FirstAndThirdPartyAudienceService.EditCustomerMatchMembers.",
      "type": "object",
      "id": "EditCustomerMatchMembersRequest"
    },
    "ListSitesResponse": {
      "id": "ListSitesResponse",
      "description": "Response message for SiteService.ListSites.",
      "properties": {
        "sites": {
          "type": "array",
          "description": "The list of sites. This list will be absent if empty.",
          "items": {
            "$ref": "Site"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListSites` method to retrieve the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PartnerRevenueModel": {
      "description": "Settings that control how partner revenue is calculated.",
      "id": "PartnerRevenueModel",
      "properties": {
        "markupType": {
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Calculate the partner revenue based on a fixed CPM.",
            "Calculate the partner revenue based on a percentage surcharge of its media cost.",
            "Calculate the partner revenue based on a percentage surcharge of its total media cost, which includes all partner costs and data costs."
          ],
          "type": "string",
          "enum": [
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED",
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM",
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP",
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP"
          ],
          "description": "Required. The markup type of the partner revenue model."
        },
        "markupAmount": {
          "type": "string",
          "description": "Required. The markup amount of the partner revenue model. Must be greater than or equal to 0. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`, this field represents the CPM markup in micros of advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP`, this field represents the media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001). * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP`, this field represents the total media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001).",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "BrowserAssignedTargetingOptionDetails": {
      "id": "BrowserAssignedTargetingOptionDetails",
      "description": "Details for assigned browser targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_BROWSER`.",
      "type": "object",
      "properties": {
        "negative": {
          "description": "Indicates if this option is being negatively targeted. All assigned browser targeting options on the same resource must have the same value for this field.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Output only. The display name of the browser.",
          "readOnly": true,
          "type": "string"
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_BROWSER`.",
          "type": "string"
        }
      }
    },
    "GeoRegionAssignedTargetingOptionDetails": {
      "description": "Details for assigned geographic region targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_GEO_REGION`.",
      "properties": {
        "geoRegionType": {
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "The geographic region type is unknown.",
            "The geographic region type is other.",
            "The geographic region is a country.",
            "The geographic region type is region.",
            "The geographic region is a territory.",
            "The geographic region is a province.",
            "The geographic region is a state.",
            "The geographic region is a prefecture.",
            "The geographic region is a governorate.",
            "The geographic region is a canton.",
            "The geographic region is a union territory.",
            "The geographic region is an autonomous community.",
            "The geographic region is a designated market area (DMA) region.",
            "The geographic region type is metro.",
            "The geographic region is a congressional district.",
            "The geographic region is a county.",
            "The geographic region is a municipality.",
            "The geographic region is a city.",
            "The geographic region targeting type is postal code.",
            "The geographic region targeting type is department.",
            "The geographic region is an airport.",
            "The geographic region is a TV region.",
            "The geographic region is an okrug.",
            "The geographic region is a borough.",
            "The geographic region is a city region.",
            "The geographic region is an arrondissement.",
            "The geographic region is a neighborhood.",
            "The geographic region is a university.",
            "The geographic region is a district."
          ],
          "enum": [
            "GEO_REGION_TYPE_UNKNOWN",
            "GEO_REGION_TYPE_OTHER",
            "GEO_REGION_TYPE_COUNTRY",
            "GEO_REGION_TYPE_REGION",
            "GEO_REGION_TYPE_TERRITORY",
            "GEO_REGION_TYPE_PROVINCE",
            "GEO_REGION_TYPE_STATE",
            "GEO_REGION_TYPE_PREFECTURE",
            "GEO_REGION_TYPE_GOVERNORATE",
            "GEO_REGION_TYPE_CANTON",
            "GEO_REGION_TYPE_UNION_TERRITORY",
            "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY",
            "GEO_REGION_TYPE_DMA_REGION",
            "GEO_REGION_TYPE_METRO",
            "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT",
            "GEO_REGION_TYPE_COUNTY",
            "GEO_REGION_TYPE_MUNICIPALITY",
            "GEO_REGION_TYPE_CITY",
            "GEO_REGION_TYPE_POSTAL_CODE",
            "GEO_REGION_TYPE_DEPARTMENT",
            "GEO_REGION_TYPE_AIRPORT",
            "GEO_REGION_TYPE_TV_REGION",
            "GEO_REGION_TYPE_OKRUG",
            "GEO_REGION_TYPE_BOROUGH",
            "GEO_REGION_TYPE_CITY_REGION",
            "GEO_REGION_TYPE_ARRONDISSEMENT",
            "GEO_REGION_TYPE_NEIGHBORHOOD",
            "GEO_REGION_TYPE_UNIVERSITY",
            "GEO_REGION_TYPE_DISTRICT"
          ],
          "description": "Output only. The type of geographic region targeting."
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "displayName": {
          "readOnly": true,
          "description": "Output only. The display name of the geographic region (e.g., \"Ontario, Canada\").",
          "type": "string"
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_GEO_REGION`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GeoRegionAssignedTargetingOptionDetails"
    },
    "ConversionCountingConfig": {
      "type": "object",
      "id": "ConversionCountingConfig",
      "properties": {
        "postViewCountPercentageMillis": {
          "description": "The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a value of 50000.",
          "format": "int64",
          "type": "string"
        },
        "floodlightActivityConfigs": {
          "description": "The Floodlight activity configs used to track conversions. The number of conversions counted is the sum of all of the conversions counted by all of the Floodlight activity IDs specified in this field.",
          "items": {
            "$ref": "TrackingFloodlightActivityConfig"
          },
          "type": "array"
        }
      },
      "description": "Settings that control how conversions are counted. All post-click conversions will be counted. A percentage value can be set for post-view conversions counting."
    },
    "InventorySourceFilter": {
      "properties": {
        "inventorySourceIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "Inventory Sources to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Leave empty to download all Inventory Sources for the selected Advertiser or Partner."
        }
      },
      "type": "object",
      "id": "InventorySourceFilter",
      "description": "A filtering option for filtering on Inventory Source entities."
    },
    "LineItem": {
      "type": "object",
      "description": "A single line item.",
      "id": "LineItem",
      "properties": {
        "advertiserId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique ID of the advertiser the line item belongs to.",
          "format": "int64"
        },
        "partnerRevenueModel": {
          "description": "Required. The partner revenue model setting of the line item.",
          "$ref": "PartnerRevenueModel"
        },
        "name": {
          "description": "Output only. The resource name of the line item.",
          "type": "string",
          "readOnly": true
        },
        "pacing": {
          "description": "Required. The budget spending speed setting of the line item.",
          "$ref": "Pacing"
        },
        "displayName": {
          "description": "Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "partnerCosts": {
          "type": "array",
          "description": "The partner costs associated with the line item. If absent or empty in CreateLineItem method, the newly created line item will inherit partner costs from its parent insertion order.",
          "items": {
            "$ref": "PartnerCost"
          }
        },
        "campaignId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique ID of the campaign that the line item belongs to.",
          "format": "int64"
        },
        "entityStatus": {
          "type": "string",
          "description": "Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`.",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the line item was last updated. Assigned by the system.",
          "format": "google-datetime",
          "readOnly": true
        },
        "conversionCounting": {
          "description": "The conversion tracking setting of the line item.",
          "$ref": "ConversionCountingConfig"
        },
        "lineItemId": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The unique ID of the line item. Assigned by the system.",
          "type": "string"
        },
        "budget": {
          "$ref": "LineItemBudget",
          "description": "Required. The budget allocation setting of the line item."
        },
        "frequencyCap": {
          "description": "Required. The impression frequency cap settings of the line item. The max_impressions field in this settings object must be used if assigning a limited cap.",
          "$ref": "FrequencyCap"
        },
        "warningMessages": {
          "type": "array",
          "description": "Output only. The warning messages generated by the line item. These warnings do not block saving the line item, but some may block the line item from running.",
          "readOnly": true,
          "items": {
            "enum": [
              "LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED",
              "INVALID_FLIGHT_DATES",
              "EXPIRED",
              "PENDING_FLIGHT",
              "ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED",
              "INVALID_INVENTORY_SOURCE",
              "APP_INVENTORY_INVALID_SITE_TARGETING",
              "APP_INVENTORY_INVALID_AUDIENCE_LISTS",
              "NO_VALID_CREATIVE",
              "PARENT_INSERTION_ORDER_PAUSED",
              "PARENT_INSERTION_ORDER_EXPIRED"
            ],
            "type": "string",
            "enumDescriptions": [
              "Not specified or is unknown.",
              "This line item has invalid flight dates. The line item will not run.",
              "This line item's end date is in the past.",
              "This line item will begin running in the future.",
              "All partner enabled exchanges are negatively targeted. The line item will not run.",
              "No active inventory sources are being targeted. The line item will not run.",
              "This line item's Apps & URLs targeting doesn't include any mobile apps. This line item's type requires you to include mobile apps in your channel, sitelist, or apps targeting. The line item will not run.",
              "This line item isn't targeting any mobile users. This line item's type requires you to target a user list with mobile users. The line item will not run.",
              "This line item does not contain any valid creative. The line item will not run.",
              "The insertion order of this line item is paused. The line item will not run.",
              "The insertion order of this line item has its end date set in the past. The line item will not run."
            ]
          }
        },
        "targetingExpansion": {
          "$ref": "TargetingExpansionConfig",
          "description": "The [targeting expansion](https://support.google.com/displayvideo/answer/10191558) settings of the line item. This config is only applicable when eligible audience list targeting is assigned to the line item."
        },
        "lineItemType": {
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version. Line items of this type and their targeting cannot be created or updated using the API.",
            "Image, HTML5, native, or rich media ads.",
            "Display ads that drive installs of an app.",
            "Video ads sold on a CPM basis for a variety of environments.",
            "Video ads that drive installs of an app.",
            "Display ads served on mobile app inventory. Line items of this type and their targeting cannot be created or updated using the API.",
            "Video ads served on mobile app inventory. Line items of this type and their targeting cannot be created or updated using the API.",
            "RTB Audio ads sold for a variety of environments.",
            "Over-the-top ads present in OTT insertion orders. This type is only applicable to line items with an insertion order of insertion_order_type `OVER_THE_TOP`.",
            "YouTube video ads that promote conversions. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube video ads (up to 15 seconds) that cannot be skipped. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube video ads that show a story in a particular sequence using a mix of formats. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube audio ads. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube video ads that optimize reaching more unique users at lower cost. May include bumper ads, skippable in-stream ads, or a mix of types. Line items of this type and their targeting cannot be created or updated using the API.",
            "Default YouTube video ads. Line items of this type and their targeting cannot be created or updated using the API."
          ],
          "enum": [
            "LINE_ITEM_TYPE_UNSPECIFIED",
            "LINE_ITEM_TYPE_DISPLAY_DEFAULT",
            "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL",
            "LINE_ITEM_TYPE_VIDEO_DEFAULT",
            "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL",
            "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY",
            "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY",
            "LINE_ITEM_TYPE_AUDIO_DEFAULT",
            "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_ACTION",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIDEO_SEQUENCE",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_AUDIO",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE"
          ],
          "description": "Required. Immutable. The type of the line item.",
          "type": "string"
        },
        "creativeIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The IDs of the creatives associated with the line item."
        },
        "bidStrategy": {
          "description": "Required. The bidding strategy of the line item.",
          "$ref": "BiddingStrategy"
        },
        "excludeNewExchanges": {
          "description": "Whether to exclude new exchanges from automatically being targeted by the line item. This field is false by default.",
          "type": "boolean"
        },
        "youtubeAndPartnersSettings": {
          "$ref": "YoutubeAndPartnersSettings",
          "readOnly": true,
          "description": "Output only. Settings specific to YouTube and Partners line items."
        },
        "integrationDetails": {
          "$ref": "IntegrationDetails",
          "description": "Integration details of the line item."
        },
        "reservationType": {
          "description": "Output only. The reservation type of the line item.",
          "enumDescriptions": [
            "Reservation type value is not specified or is unknown in this version.",
            "Not created through a guaranteed inventory source.",
            "Created through a programmatic guaranteed inventory source.",
            "Created through a tag guaranteed inventory source.",
            "Created through a Petra inventory source. Only applicable to YouTube and Partners line items.",
            "Created with an instant quote. Only applicable to YouTube and partners line items."
          ],
          "type": "string",
          "enum": [
            "RESERVATION_TYPE_UNSPECIFIED",
            "RESERVATION_TYPE_NOT_GUARANTEED",
            "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED",
            "RESERVATION_TYPE_TAG_GUARANTEED",
            "RESERVATION_TYPE_PETRA_VIRAL",
            "RESERVATION_TYPE_INSTANT_RESERVE"
          ],
          "readOnly": true
        },
        "flight": {
          "description": "Required. The start and end time of the line item's flight.",
          "$ref": "LineItemFlight"
        },
        "insertionOrderId": {
          "type": "string",
          "format": "int64",
          "description": "Required. Immutable. The unique ID of the insertion order that the line item belongs to."
        },
        "mobileApp": {
          "description": "The mobile app promoted by the line item. This is applicable only when line_item_type is either `LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL` or `LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL`.",
          "$ref": "MobileApp"
        }
      }
    },
    "LineItemFlight": {
      "description": "Settings that control the active duration of a line item.",
      "id": "LineItemFlight",
      "properties": {
        "flightDateType": {
          "type": "string",
          "enum": [
            "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED",
            "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED",
            "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM"
          ],
          "description": "Required. The type of the line item's flight dates.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The line item's flight dates are inherited from its parent insertion order.",
            "The line item uses its own custom flight dates."
          ]
        },
        "dateRange": {
          "description": "The flight start and end dates of the line item. They are resolved relative to the parent advertiser's time zone. * Required when flight_date_type is `LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM`. Output only otherwise. * When creating a new flight, both `start_date` and `end_date` must be in the future. * An existing flight with a `start_date` in the past has a mutable `end_date` but an immutable `start_date`. * `end_date` must be the `start_date` or later, both before the year 2037.",
          "$ref": "DateRange"
        }
      },
      "type": "object"
    },
    "InventorySourceAccessorsPartnerAccessor": {
      "type": "object",
      "properties": {
        "partnerId": {
          "format": "int64",
          "description": "The ID of the partner.",
          "type": "string"
        }
      },
      "description": "The partner with access to the inventory source.",
      "id": "InventorySourceAccessorsPartnerAccessor"
    },
    "ListLineItemsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListLineItems` method to retrieve the next page of results.",
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "LineItem"
          },
          "description": "The list of line items. This list will be absent if empty.",
          "type": "array"
        }
      },
      "id": "ListLineItemsResponse"
    },
    "Campaign": {
      "id": "Campaign",
      "description": "A single campaign.",
      "properties": {
        "campaignId": {
          "format": "int64",
          "description": "Output only. The unique ID of the campaign. Assigned by the system.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the campaign.",
          "type": "string"
        },
        "advertiserId": {
          "readOnly": true,
          "description": "Output only. The unique ID of the advertiser the campaign belongs to.",
          "format": "int64",
          "type": "string"
        },
        "frequencyCap": {
          "$ref": "FrequencyCap",
          "description": "Required. The frequency cap setting of the campaign."
        },
        "displayName": {
          "description": "Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "entityStatus": {
          "description": "Required. Controls whether or not the insertion orders under this campaign can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method, `ENTITY_STATUS_ARCHIVED` is not allowed.",
          "type": "string",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ]
        },
        "campaignGoal": {
          "$ref": "CampaignGoal",
          "description": "Required. The goal of the campaign."
        },
        "campaignFlight": {
          "description": "Required. The planned spend and duration of the campaign.",
          "$ref": "CampaignFlight"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the campaign was last updated. Assigned by the system.",
          "readOnly": true
        },
        "campaignBudgets": {
          "description": "The list of budgets available to this campaign. If this field is not set, the campaign uses an unlimited budget.",
          "items": {
            "$ref": "CampaignBudget"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPartnersResponse": {
      "id": "ListPartnersResponse",
      "properties": {
        "partners": {
          "items": {
            "$ref": "Partner"
          },
          "description": "The list of partners. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListPartners` method to retrieve the next page of results."
        }
      },
      "type": "object"
    },
    "ReplaceNegativeKeywordsRequest": {
      "type": "object",
      "description": "Request message for NegativeKeywordService.ReplaceNegativeKeywords.",
      "properties": {
        "newNegativeKeywords": {
          "type": "array",
          "description": "The negative keywords that will replace the existing keywords in the negative keyword list, specified as a list of NegativeKeywords.",
          "items": {
            "$ref": "NegativeKeyword"
          }
        }
      },
      "id": "ReplaceNegativeKeywordsRequest"
    },
    "Pacing": {
      "type": "object",
      "properties": {
        "pacingType": {
          "type": "string",
          "enumDescriptions": [
            "Pacing mode value is not specified or is unknown in this version.",
            "Only applicable to `PACING_PERIOD_FLIGHT` pacing period. Ahead pacing attempts to spend faster than evenly, to make sure the entire budget is spent by the end of the flight.",
            "Spend all of pacing budget amount as quick as possible.",
            "Spend a consistent budget amount every period of time."
          ],
          "enum": [
            "PACING_TYPE_UNSPECIFIED",
            "PACING_TYPE_AHEAD",
            "PACING_TYPE_ASAP",
            "PACING_TYPE_EVEN"
          ],
          "description": "Required. The type of pacing that defines how the budget amount will be spent across the pacing_period."
        },
        "pacingPeriod": {
          "enumDescriptions": [
            "Period value is not specified or is unknown in this version.",
            "The pacing setting will be applied on daily basis.",
            "The pacing setting will be applied to the whole flight duration."
          ],
          "type": "string",
          "enum": [
            "PACING_PERIOD_UNSPECIFIED",
            "PACING_PERIOD_DAILY",
            "PACING_PERIOD_FLIGHT"
          ],
          "description": "Required. The time period in which the pacing budget will be spent. When automatic budget allocation is enabled at the insertion order via auto_budget_allocation, this field is output only and defaults to `PACING_PERIOD_FLIGHT`."
        },
        "dailyMaxImpressions": {
          "format": "int64",
          "description": "Maximum number of impressions to serve every day. Applicable when the budget is impression based. Must be greater than 0.",
          "type": "string"
        },
        "dailyMaxMicros": {
          "type": "string",
          "format": "int64",
          "description": "Maximum currency amount to spend every day in micros of advertiser's currency. Applicable when the budget is currency based. Must be greater than 0. For example, for 1.5 standard unit of the currency, set this field to 1500000. The value assigned will be rounded to whole billable units for the relevant currency by the following rules: any positive value less than a single billable unit will be rounded up to one billable unit and any value larger than a single billable unit will be rounded down to the nearest billable value. For example, if the currency's billable unit is 0.01, and this field is set to 10257770, it will round down to 10250000, a value of 10.25. If set to 505, it will round up to 10000, a value of 0.01."
        }
      },
      "id": "Pacing",
      "description": "Settings that control the rate at which a budget is spent."
    },
    "ActiveViewVideoViewabilityMetricConfig": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the custom metric."
        },
        "minimumQuartile": {
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "No quartile value.",
            "First quartile.",
            "Second quartile (midpoint).",
            "Third quartile.",
            "Fourth quartile (completion)."
          ],
          "enum": [
            "VIDEO_DURATION_QUARTILE_UNSPECIFIED",
            "VIDEO_DURATION_QUARTILE_NONE",
            "VIDEO_DURATION_QUARTILE_FIRST",
            "VIDEO_DURATION_QUARTILE_SECOND",
            "VIDEO_DURATION_QUARTILE_THIRD",
            "VIDEO_DURATION_QUARTILE_FOURTH"
          ],
          "description": "The minimum visible video duration required, based on the video quartiles, in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first).",
          "type": "string"
        },
        "minimumViewability": {
          "type": "string",
          "enum": [
            "VIEWABILITY_PERCENT_UNSPECIFIED",
            "VIEWABILITY_PERCENT_0",
            "VIEWABILITY_PERCENT_25",
            "VIEWABILITY_PERCENT_50",
            "VIEWABILITY_PERCENT_75",
            "VIEWABILITY_PERCENT_100"
          ],
          "description": "Required. The minimum percentage of the video ad's pixels visible on the screen in order for an impression to be recorded.",
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "0% viewable.",
            "25% viewable.",
            "50% viewable.",
            "75% viewable.",
            "100% viewable."
          ]
        },
        "minimumVolume": {
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "0% volume.",
            "10% volume."
          ],
          "description": "Required. The minimum percentage of the video ad's volume required in order for an impression to be recorded.",
          "type": "string",
          "enum": [
            "VIDEO_VOLUME_PERCENT_UNSPECIFIED",
            "VIDEO_VOLUME_PERCENT_0",
            "VIDEO_VOLUME_PERCENT_10"
          ]
        },
        "minimumDuration": {
          "enum": [
            "VIDEO_DURATION_UNSPECIFIED",
            "VIDEO_DURATION_SECONDS_NONE",
            "VIDEO_DURATION_SECONDS_0",
            "VIDEO_DURATION_SECONDS_1",
            "VIDEO_DURATION_SECONDS_2",
            "VIDEO_DURATION_SECONDS_3",
            "VIDEO_DURATION_SECONDS_4",
            "VIDEO_DURATION_SECONDS_5",
            "VIDEO_DURATION_SECONDS_6",
            "VIDEO_DURATION_SECONDS_7",
            "VIDEO_DURATION_SECONDS_8",
            "VIDEO_DURATION_SECONDS_9",
            "VIDEO_DURATION_SECONDS_10",
            "VIDEO_DURATION_SECONDS_11",
            "VIDEO_DURATION_SECONDS_12",
            "VIDEO_DURATION_SECONDS_13",
            "VIDEO_DURATION_SECONDS_14",
            "VIDEO_DURATION_SECONDS_15",
            "VIDEO_DURATION_SECONDS_30",
            "VIDEO_DURATION_SECONDS_45",
            "VIDEO_DURATION_SECONDS_60"
          ],
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "No duration value.",
            "0 seconds.",
            "1 second.",
            "2 seconds.",
            "3 seconds.",
            "4 seconds.",
            "5 seconds.",
            "6 seconds.",
            "7 seconds.",
            "8 seconds.",
            "9 seconds.",
            "10 seconds.",
            "11 seconds.",
            "12 seconds.",
            "13 seconds.",
            "14 seconds.",
            "15 seconds.",
            "30 seconds.",
            "45 seconds.",
            "60 seconds."
          ],
          "type": "string",
          "description": "The minimum visible video duration required (in seconds) in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first)."
        }
      },
      "description": "Configuration for custom Active View video viewability metrics.",
      "id": "ActiveViewVideoViewabilityMetricConfig",
      "type": "object"
    },
    "CategoryAssignedTargetingOptionDetails": {
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the category.",
          "type": "string",
          "readOnly": true
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CATEGORY`."
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        }
      },
      "description": "Assigned category targeting option details. This will be populated in the category_details field when targeting_type is `TARGETING_TYPE_CATEGORY`.",
      "id": "CategoryAssignedTargetingOptionDetails",
      "type": "object"
    },
    "BulkEditAssignedTargetingOptionsResponse": {
      "id": "BulkEditAssignedTargetingOptionsResponse",
      "properties": {
        "updatedLineItemIds": {
          "type": "array",
          "description": "Output only. The IDs of the line items which successfully updated.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "readOnly": true
        },
        "failedLineItemIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Output only. The IDs of the line items which failed."
        },
        "errors": {
          "description": "The error information for each line item that failed to update.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "CmHybridConfig": {
      "description": "Settings for advertisers that use both Campaign Manager 360 (CM360) and third-party ad servers.",
      "id": "CmHybridConfig",
      "properties": {
        "cmFloodlightConfigId": {
          "format": "int64",
          "description": "Required. Immutable. ID of the CM360 Floodlight configuration linked with the DV360 advertiser.",
          "type": "string"
        },
        "cmAccountId": {
          "description": "Required. Immutable. Account ID of the CM360 Floodlight configuration linked with the DV360 advertiser.",
          "type": "string",
          "format": "int64"
        },
        "dv360ToCmDataSharingEnabled": {
          "description": "Whether or not to include DV360 data in CM360 data transfer reports.",
          "type": "boolean"
        },
        "cmSyncableSiteIds": {
          "type": "array",
          "description": "A list of CM360 sites whose placements will be synced to DV360 as creatives. If absent or empty in CreateAdvertiser method, the system will automatically create a CM360 site. Removing sites from this list may cause DV360 creatives synced from CM360 to be deleted. At least one site must be specified.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "dv360ToCmCostReportingEnabled": {
          "type": "boolean",
          "description": "Whether or not to report DV360 cost to CM360."
        },
        "cmFloodlightLinkingAuthorized": {
          "type": "boolean",
          "description": "Required. Immutable. By setting this field to `true`, you, on behalf of your company, authorize the sharing of information from the given Floodlight configuration to this Display & Video 360 advertiser."
        }
      },
      "type": "object"
    },
    "PartnerGeneralConfig": {
      "description": "General settings of a partner.",
      "id": "PartnerGeneralConfig",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "Immutable. Partner's currency in ISO 4217 format.",
          "type": "string"
        },
        "timeZone": {
          "description": "Immutable. The standard TZ database name of the partner's time zone. For example, `America/New_York`. See more at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
          "type": "string"
        }
      }
    },
    "Advertiser": {
      "type": "object",
      "properties": {
        "adServerConfig": {
          "description": "Required. Immutable. Ad server related settings of the advertiser.",
          "$ref": "AdvertiserAdServerConfig"
        },
        "servingConfig": {
          "description": "Targeting settings related to ad serving of the advertiser.",
          "$ref": "AdvertiserTargetingConfig"
        },
        "entityStatus": {
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "description": "Required. Controls whether or not insertion orders and line items of the advertiser can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_PAUSED` and `ENTITY_STATUS_SCHEDULED_FOR_DELETION`. * If set to `ENTITY_STATUS_SCHEDULED_FOR_DELETION`, the advertiser will be deleted 30 days from when it was first scheduled for deletion."
        },
        "integrationDetails": {
          "$ref": "IntegrationDetails",
          "description": "Integration details of the advertiser. Only integrationCode is currently applicable to advertiser. Other fields of IntegrationDetails are not supported and will be ignored if provided."
        },
        "partnerId": {
          "type": "string",
          "format": "int64",
          "description": "Required. Immutable. The unique ID of the partner that the advertiser belongs to."
        },
        "creativeConfig": {
          "$ref": "AdvertiserCreativeConfig",
          "description": "Required. Creative related settings of the advertiser."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the advertiser. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the advertiser."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the advertiser was last updated. Assigned by the system."
        },
        "dataAccessConfig": {
          "$ref": "AdvertiserDataAccessConfig",
          "description": "Settings that control how advertiser data may be accessed."
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The unique ID of the advertiser. Assigned by the system.",
          "readOnly": true
        },
        "prismaEnabled": {
          "type": "boolean",
          "description": "Whether integration with Mediaocean (Prisma) is enabled. By enabling this, you agree to the following: On behalf of my company, I authorize Mediaocean (Prisma) to send budget segment plans to Google, and I authorize Google to send corresponding reporting and invoices from DV360 to Mediaocean for the purposes of budget planning, billing, and reconciliation for this advertiser."
        },
        "generalConfig": {
          "$ref": "AdvertiserGeneralConfig",
          "description": "Required. General settings of the advertiser."
        }
      },
      "id": "Advertiser",
      "description": "A single advertiser in Display & Video 360 (DV360)."
    },
    "ThirdPartyUrl": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "THIRD_PARTY_URL_TYPE_UNSPECIFIED",
            "THIRD_PARTY_URL_TYPE_IMPRESSION",
            "THIRD_PARTY_URL_TYPE_CLICK_TRACKING",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_START",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FIRST_QUARTILE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MIDPOINT",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_THIRD_QUARTILE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_COMPLETE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MUTE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PAUSE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_REWIND",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FULLSCREEN",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_STOP",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_CUSTOM",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_SKIP",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PROGRESS"
          ],
          "enumDescriptions": [
            "The type of third-party URL is unspecified or is unknown in this version.",
            "Used to count impressions of the creative after the audio or video buffering is complete.",
            "Used to track user clicks on the audio or video.",
            "Used to track the number of times a user starts the audio or video.",
            "Used to track the number of times the audio or video plays to 25% of its length.",
            "Used to track the number of times the audio or video plays to 50% of its length.",
            "Used to track the number of times the audio or video plays to 75% of its length.",
            "Used to track the number of times the audio or video plays to the end.",
            "Used to track the number of times a user mutes the audio or video.",
            "Used to track the number of times a user pauses the audio or video.",
            "Used to track the number of times a user replays the audio or video.",
            "Used to track the number of times a user expands the player to full-screen size.",
            "Used to track the number of times a user stops the audio or video.",
            "Used to track the number of times a user performs a custom click, such as clicking on a video hot spot.",
            "Used to track the number of times the audio or video was skipped.",
            "Used to track the number of times the audio or video plays to an offset determined by the progress_offset."
          ],
          "type": "string",
          "description": "The type of interaction needs to be tracked by the tracking URL"
        },
        "url": {
          "type": "string",
          "description": "Tracking URL used to track the interaction. Provide a URL with optional path or query string, beginning with `https:`. For example, https://www.example.com/path"
        }
      },
      "id": "ThirdPartyUrl",
      "description": "Tracking URLs from third parties to track interactions with an audio or a video creative."
    },
    "AdvertiserCreativeConfig": {
      "id": "AdvertiserCreativeConfig",
      "description": "Creatives related settings of an advertiser.",
      "type": "object",
      "properties": {
        "videoCreativeDataSharingAuthorized": {
          "type": "boolean",
          "description": "By setting this field to `true`, you, on behalf of your company, authorize Google to use video creatives associated with this Display & Video 360 advertiser to provide reporting and features related to the advertiser's television campaigns. Applicable only when the advertiser has a CM360 hybrid ad server configuration."
        },
        "iasClientId": {
          "type": "string",
          "format": "int64",
          "description": "An ID for configuring campaign monitoring provided by Integral Ad Service (IAS). The DV360 system will append an IAS \"Campaign Monitor\" tag containing this ID to the creative tag."
        },
        "dynamicCreativeEnabled": {
          "description": "Whether or not the advertiser is enabled for dynamic creatives.",
          "type": "boolean"
        },
        "obaComplianceDisabled": {
          "type": "boolean",
          "description": "Whether or not to use DV360's Online Behavioral Advertising (OBA) compliance. Warning: Changing OBA settings may cause the audit status of your creatives to be reset by some ad exchanges, making them ineligible to serve until they are re-approved."
        }
      }
    },
    "ListCustomBiddingAlgorithmsResponse": {
      "id": "ListCustomBiddingAlgorithmsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCustomBiddingAlgorithmsRequest` method to retrieve the next page of results. If this field is null, it means this is the last page."
        },
        "customBiddingAlgorithms": {
          "description": "The list of custom bidding algorithms. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "CustomBiddingAlgorithm"
          }
        }
      },
      "type": "object"
    },
    "NativeContentPositionAssignedTargetingOptionDetails": {
      "properties": {
        "contentPosition": {
          "enumDescriptions": [
            "Native content position is not specified in this version. This enum is a place holder for a default value and does not represent a real native content position.",
            "The native content position is unknown.",
            "Native content position is in-article, i.e., ads appear between the paragraphs of pages.",
            "Native content position is in-feed, i.e., ads appear in a scrollable stream of content. A feed is typically editorial (e.g. a list of articles or news) or listings (e.g. a list of products or services).",
            "Native content position is peripheral, i.e., ads appear outside of core content on pages, such as the right- or left-hand side of the page.",
            "Native content position is recommendation, i.e., ads appear in sections for recommended content."
          ],
          "enum": [
            "NATIVE_CONTENT_POSITION_UNSPECIFIED",
            "NATIVE_CONTENT_POSITION_UNKNOWN",
            "NATIVE_CONTENT_POSITION_IN_ARTICLE",
            "NATIVE_CONTENT_POSITION_IN_FEED",
            "NATIVE_CONTENT_POSITION_PERIPHERAL",
            "NATIVE_CONTENT_POSITION_RECOMMENDATION"
          ],
          "type": "string",
          "description": "The content position. Output only in v1. Required in v2."
        }
      },
      "type": "object",
      "description": "Details for native content position assigned targeting option. This will be populated in the native_content_position_details field when targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`. Explicitly targeting all options is not supported. Remove all native content position targeting options to achieve this effect.",
      "id": "NativeContentPositionAssignedTargetingOptionDetails"
    },
    "CombinedAudience": {
      "description": "Describes a combined audience resource.",
      "type": "object",
      "properties": {
        "combinedAudienceId": {
          "description": "Output only. The unique ID of the combined audience. Assigned by the system.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "readOnly": true,
          "description": "Output only. The display name of the combined audience. .",
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name of the combined audience.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "CombinedAudience"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "ThirdPartyOnlyConfig": {
      "id": "ThirdPartyOnlyConfig",
      "description": "Settings for advertisers that use third-party ad servers only.",
      "type": "object",
      "properties": {
        "pixelOrderIdReportingEnabled": {
          "description": "Whether or not order ID reporting for pixels is enabled. This value cannot be changed once set to `true`.",
          "type": "boolean"
        }
      }
    },
    "InsertionOrderBudget": {
      "properties": {
        "budgetUnit": {
          "enum": [
            "BUDGET_UNIT_UNSPECIFIED",
            "BUDGET_UNIT_CURRENCY",
            "BUDGET_UNIT_IMPRESSIONS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Budgeting in currency amounts.",
            "Budgeting in impression amounts."
          ],
          "description": "Required. Immutable. The budget unit specifies whether the budget is currency based or impression based."
        },
        "automationType": {
          "type": "string",
          "description": "The type of automation used to manage bid and budget for the insertion order. If this field is unspecified in creation, the value defaults to `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.",
          "enumDescriptions": [
            "Insertion order automation option is not specified or is unknown in this version.",
            "Automatic budget allocation. Allow the system to automatically shift budget to owning line items to optimize performance defined by performance_goal. No automation on bid settings.",
            "No automation of bid or budget on insertion order level. Bid and budget must be manually configured at the line item level.",
            "Allow the system to automatically adjust bids and shift budget to owning line items to optimize performance defined by performance_goal."
          ],
          "enum": [
            "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED",
            "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET",
            "INSERTION_ORDER_AUTOMATION_TYPE_NONE",
            "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET"
          ]
        },
        "budgetSegments": {
          "type": "array",
          "items": {
            "$ref": "InsertionOrderBudgetSegment"
          },
          "description": "Required. The list of budget segments. Use a budget segment to specify a specific budget for a given period of time an insertion order is running."
        }
      },
      "id": "InsertionOrderBudget",
      "description": "Settings that control how insertion order budget is allocated.",
      "type": "object"
    },
    "UrlAssignedTargetingOptionDetails": {
      "id": "UrlAssignedTargetingOptionDetails",
      "type": "object",
      "properties": {
        "url": {
          "description": "Required. The URL, for example `example.com`. DV360 supports two levels of subdirectory targeting, for example `www.example.com/one-subdirectory-level/second-level`, and five levels of subdomain targeting, for example `five.four.three.two.one.example.com`.",
          "type": "string"
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        }
      },
      "description": "Details for assigned URL targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_URL`."
    },
    "OnScreenPositionAssignedTargetingOptionDetails": {
      "id": "OnScreenPositionAssignedTargetingOptionDetails",
      "properties": {
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`."
        },
        "onScreenPosition": {
          "enumDescriptions": [
            "On screen position is not specified in this version. This enum is a place holder for a default value and does not represent a real on screen position.",
            "The ad position is unknown on the screen.",
            "The ad is located above the fold.",
            "The ad is located below the fold."
          ],
          "readOnly": true,
          "enum": [
            "ON_SCREEN_POSITION_UNSPECIFIED",
            "ON_SCREEN_POSITION_UNKNOWN",
            "ON_SCREEN_POSITION_ABOVE_THE_FOLD",
            "ON_SCREEN_POSITION_BELOW_THE_FOLD"
          ],
          "description": "Output only. The on screen position.",
          "type": "string"
        },
        "adType": {
          "description": "Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`.",
          "type": "string",
          "enumDescriptions": [
            "Ad type is not specified or is unknown in this version.",
            "Display creatives, e.g. image and HTML5.",
            "Video creatives, e.g. video ads that play during streaming content in video players.",
            "Audio creatives, e.g. audio ads that play during audio content."
          ],
          "enum": [
            "AD_TYPE_UNSPECIFIED",
            "AD_TYPE_DISPLAY",
            "AD_TYPE_VIDEO",
            "AD_TYPE_AUDIO"
          ],
          "readOnly": true
        }
      },
      "description": "On screen position targeting option details. This will be populated in the on_screen_position_details field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.",
      "type": "object"
    },
    "LineItemAssignedTargetingOption": {
      "description": "Wrapper object associating an assigned_targeting_option resource and the line item it is assigned to.",
      "type": "object",
      "id": "LineItemAssignedTargetingOption",
      "properties": {
        "lineItemId": {
          "format": "int64",
          "description": "The ID of the line item the assigned targeting option is assigned to.",
          "type": "string"
        },
        "assignedTargetingOption": {
          "$ref": "AssignedTargetingOption",
          "description": "The assigned targeting option resource."
        }
      }
    },
    "DateRange": {
      "type": "object",
      "id": "DateRange",
      "description": "A date range.",
      "properties": {
        "endDate": {
          "$ref": "Date",
          "description": "The upper bound of the date range, inclusive. Must specify a positive value for `year`, `month`, and `day`."
        },
        "startDate": {
          "description": "The lower bound of the date range, inclusive. Must specify a positive value for `year`, `month`, and `day`.",
          "$ref": "Date"
        }
      }
    },
    "CarrierAndIspTargetingOptionDetails": {
      "type": "object",
      "id": "CarrierAndIspTargetingOptionDetails",
      "description": "Represents a targetable carrier or ISP. This will be populated in the carrier_and_isp_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.",
      "properties": {
        "displayName": {
          "readOnly": true,
          "description": "Output only. The display name of the carrier or ISP.",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "description": "Output only. The type indicating if it's carrier or ISP.",
          "type": "string",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Indicates this targeting resource refers to an ISP.",
            "Indicates this targeting resource refers to a mobile carrier."
          ],
          "enum": [
            "CARRIER_AND_ISP_TYPE_UNSPECIFIED",
            "CARRIER_AND_ISP_TYPE_ISP",
            "CARRIER_AND_ISP_TYPE_CARRIER"
          ]
        }
      }
    },
    "ContactInfoList": {
      "description": "Wrapper message for a list of contact information defining Customer Match audience members.",
      "type": "object",
      "id": "ContactInfoList",
      "properties": {
        "contactInfos": {
          "type": "array",
          "description": "A list of ContactInfo objects defining Customer Match audience members. The size of members after splitting the contact_infos mustn't be greater than 500,000.",
          "items": {
            "$ref": "ContactInfo"
          }
        }
      }
    },
    "ContentStreamTypeTargetingOptionDetails": {
      "id": "ContentStreamTypeTargetingOptionDetails",
      "type": "object",
      "properties": {
        "contentStreamType": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The content stream type.",
          "enumDescriptions": [
            "Content stream type is not specified in this version. This enum is a place holder for a default value and does not represent a real content stream type.",
            "The content is being live-streamed.",
            "The content is viewed on-demand."
          ],
          "enum": [
            "CONTENT_STREAM_TYPE_UNSPECIFIED",
            "CONTENT_LIVE_STREAM",
            "CONTENT_ON_DEMAND"
          ]
        }
      },
      "description": "Represents a targetable content stream type. This will be populated in the content_stream_type_details field when targeting_type is `TARGETING_TYPE_CONTENT_STREAM_TYPE`."
    },
    "SdfDownloadTask": {
      "description": "Type for the response returned by [SdfDownloadTaskService.CreateSdfDownloadTask].",
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "A resource name to be used in media.download to Download the prepared files. Resource names have the format `download/sdfdownloadtasks/media/{media_id}`. `media_id` will be made available by the long running operation service once the task status is done.",
          "type": "string"
        }
      },
      "id": "SdfDownloadTask"
    },
    "BusinessChainTargetingOptionDetails": {
      "properties": {
        "geoRegionType": {
          "type": "string",
          "description": "Output only. The type of the geographic region.",
          "enumDescriptions": [
            "The geographic region type is unknown.",
            "The geographic region type is other.",
            "The geographic region is a country.",
            "The geographic region type is region.",
            "The geographic region is a territory.",
            "The geographic region is a province.",
            "The geographic region is a state.",
            "The geographic region is a prefecture.",
            "The geographic region is a governorate.",
            "The geographic region is a canton.",
            "The geographic region is a union territory.",
            "The geographic region is an autonomous community.",
            "The geographic region is a designated market area (DMA) region.",
            "The geographic region type is metro.",
            "The geographic region is a congressional district.",
            "The geographic region is a county.",
            "The geographic region is a municipality.",
            "The geographic region is a city.",
            "The geographic region targeting type is postal code.",
            "The geographic region targeting type is department.",
            "The geographic region is an airport.",
            "The geographic region is a TV region.",
            "The geographic region is an okrug.",
            "The geographic region is a borough.",
            "The geographic region is a city region.",
            "The geographic region is an arrondissement.",
            "The geographic region is a neighborhood.",
            "The geographic region is a university.",
            "The geographic region is a district."
          ],
          "enum": [
            "GEO_REGION_TYPE_UNKNOWN",
            "GEO_REGION_TYPE_OTHER",
            "GEO_REGION_TYPE_COUNTRY",
            "GEO_REGION_TYPE_REGION",
            "GEO_REGION_TYPE_TERRITORY",
            "GEO_REGION_TYPE_PROVINCE",
            "GEO_REGION_TYPE_STATE",
            "GEO_REGION_TYPE_PREFECTURE",
            "GEO_REGION_TYPE_GOVERNORATE",
            "GEO_REGION_TYPE_CANTON",
            "GEO_REGION_TYPE_UNION_TERRITORY",
            "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY",
            "GEO_REGION_TYPE_DMA_REGION",
            "GEO_REGION_TYPE_METRO",
            "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT",
            "GEO_REGION_TYPE_COUNTY",
            "GEO_REGION_TYPE_MUNICIPALITY",
            "GEO_REGION_TYPE_CITY",
            "GEO_REGION_TYPE_POSTAL_CODE",
            "GEO_REGION_TYPE_DEPARTMENT",
            "GEO_REGION_TYPE_AIRPORT",
            "GEO_REGION_TYPE_TV_REGION",
            "GEO_REGION_TYPE_OKRUG",
            "GEO_REGION_TYPE_BOROUGH",
            "GEO_REGION_TYPE_CITY_REGION",
            "GEO_REGION_TYPE_ARRONDISSEMENT",
            "GEO_REGION_TYPE_NEIGHBORHOOD",
            "GEO_REGION_TYPE_UNIVERSITY",
            "GEO_REGION_TYPE_DISTRICT"
          ],
          "readOnly": true
        },
        "geoRegion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The display name of the geographic region, e.g. \"Ontario, Canada\"."
        },
        "businessChain": {
          "type": "string",
          "description": "Output only. The display name of the business chain, e.g. \"KFC\", \"Chase Bank\".",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "BusinessChainTargetingOptionDetails",
      "description": "Represents a targetable business chain within a geo region. This will be populated in the business_chain_details field when targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`."
    },
    "ListCustomListsResponse": {
      "type": "object",
      "id": "ListCustomListsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCustomLists` method to retrieve the next page of results."
        },
        "customLists": {
          "type": "array",
          "items": {
            "$ref": "CustomList"
          },
          "description": "The list of custom lists. This list will be absent if empty."
        }
      }
    },
    "CustomBiddingScriptRef": {
      "id": "CustomBiddingScriptRef",
      "properties": {
        "resourceName": {
          "description": "A resource name to be used in media.download to Download the script files. Or media.upload to Upload the script files. Resource names have the format `customBiddingAlgorithms/{custom_bidding_algorithm_id}/scriptRef/{ref_id}`.",
          "type": "string"
        }
      },
      "description": "The reference to the uploaded custom bidding script file.",
      "type": "object"
    },
    "AudioContentTypeAssignedTargetingOptionDetails": {
      "properties": {
        "audioContentType": {
          "description": "The audio content type. Output only in v1. Required in v2.",
          "enumDescriptions": [
            "Audio content type is not specified in this version. This enum is a place holder for a default value and does not represent a real content stream type.",
            "The audio content type is unknown.",
            "The audio content type is music.",
            "The audio content type is broadcast.",
            "The audio content type is podcast."
          ],
          "type": "string",
          "enum": [
            "AUDIO_CONTENT_TYPE_UNSPECIFIED",
            "AUDIO_CONTENT_TYPE_UNKNOWN",
            "AUDIO_CONTENT_TYPE_MUSIC",
            "AUDIO_CONTENT_TYPE_BROADCAST",
            "AUDIO_CONTENT_TYPE_PODCAST"
          ]
        }
      },
      "description": "Details for audio content type assigned targeting option. This will be populated in the audio_content_type_details field when targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`. Explicitly targeting all options is not supported. Remove all audio content type targeting options to achieve this effect.",
      "type": "object",
      "id": "AudioContentTypeAssignedTargetingOptionDetails"
    },
    "ListInventorySourceGroupsResponse": {
      "description": "Response message for InventorySourceGroupService.ListInventorySourceGroups.",
      "id": "ListInventorySourceGroupsResponse",
      "properties": {
        "inventorySourceGroups": {
          "items": {
            "$ref": "InventorySourceGroup"
          },
          "type": "array",
          "description": "The list of inventory source groups. This list will be absent if empty."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInventorySourceGroups` method to retrieve the next page of results."
        }
      },
      "type": "object"
    },
    "EnvironmentAssignedTargetingOptionDetails": {
      "id": "EnvironmentAssignedTargetingOptionDetails",
      "properties": {
        "environment": {
          "type": "string",
          "enum": [
            "ENVIRONMENT_UNSPECIFIED",
            "ENVIRONMENT_WEB_OPTIMIZED",
            "ENVIRONMENT_WEB_NOT_OPTIMIZED",
            "ENVIRONMENT_APP"
          ],
          "enumDescriptions": [
            "Default value when environment is not specified in this version. This enum is a placeholder for default value and does not represent a real environment option.",
            "Target inventory displayed in browsers. This includes inventory that was designed for the device it was viewed on, such as mobile websites viewed on a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted, should be deleted prior to the deletion of this targeting option.",
            "Target inventory displayed in browsers. This includes inventory that was not designed for the device but viewed on it, such as websites optimized for desktop but viewed on a mobile device. ENVIRONMENT_WEB_OPTIMIZED should be targeted prior to the addition of this targeting option.",
            "Target inventory displayed in apps."
          ],
          "description": "The serving environment. Output only in v1. Required in v2."
        }
      },
      "description": "Assigned environment targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_ENVIRONMENT`.",
      "type": "object"
    },
    "NegativeKeyword": {
      "description": "A negatively targeted keyword that belongs to a negative keyword list.",
      "id": "NegativeKeyword",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the negative keyword."
        },
        "keywordValue": {
          "type": "string",
          "description": "Required. Immutable. The negatively targeted keyword, for example `car insurance`. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10. Valid characters are restricted to ASCII characters only. The only URL-escaping permitted is for representing whitespace between words. Leading or trailing whitespace is ignored."
        }
      }
    },
    "ThirdPartyVerifierAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "doubleVerify": {
          "description": "Third party brand verifier -- DoubleVerify.",
          "$ref": "DoubleVerify"
        },
        "integralAdScience": {
          "$ref": "IntegralAdScience",
          "description": "Third party brand verifier -- Integral Ad Science."
        },
        "adloox": {
          "$ref": "Adloox",
          "description": "Third party brand verifier -- Adloox."
        }
      },
      "description": "Assigned third party verifier targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`.",
      "id": "ThirdPartyVerifierAssignedTargetingOptionDetails"
    },
    "ListCampaignAssignedTargetingOptionsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListCampaignAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        },
        "assignedTargetingOptions": {
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "type": "array"
        }
      },
      "description": "Response message for ListCampaignAssignedTargetingOptions.",
      "id": "ListCampaignAssignedTargetingOptionsResponse"
    },
    "PerformanceGoal": {
      "properties": {
        "performanceGoalType": {
          "enum": [
            "PERFORMANCE_GOAL_TYPE_UNSPECIFIED",
            "PERFORMANCE_GOAL_TYPE_CPM",
            "PERFORMANCE_GOAL_TYPE_CPC",
            "PERFORMANCE_GOAL_TYPE_CPA",
            "PERFORMANCE_GOAL_TYPE_CTR",
            "PERFORMANCE_GOAL_TYPE_VIEWABILITY",
            "PERFORMANCE_GOAL_TYPE_CPIAVC",
            "PERFORMANCE_GOAL_TYPE_CPE",
            "PERFORMANCE_GOAL_TYPE_CLICK_CVR",
            "PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR",
            "PERFORMANCE_GOAL_TYPE_VCPM",
            "PERFORMANCE_GOAL_TYPE_VTR",
            "PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE",
            "PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE",
            "PERFORMANCE_GOAL_TYPE_OTHER"
          ],
          "type": "string",
          "description": "Required. The type of the performance goal.",
          "enumDescriptions": [
            "Performance goal type is not specified or is unknown in this version.",
            "The performance goal is set in CPM (cost per mille).",
            "The performance goal is set in CPC (cost per click).",
            "The performance goal is set in CPA (cost per action).",
            "The performance goal is set in CTR (click-through rate) percentage.",
            "The performance goal is set in Viewability percentage.",
            "The performance goal is set as CPIAVC (cost per impression audible and visible at completion).",
            "The performance goal is set in CPE (cost per engagement).",
            "The performance goal is set in click conversion rate (conversions per click) percentage.",
            "The performance goal is set in impression conversion rate (conversions per impression) percentage.",
            "The performance goal is set in VCPM (cost per thousand viewable impressions).",
            "The performance goal is set in YouTube view rate (YouTube views per impression) percentage.",
            "The performance goal is set in audio completion rate (complete audio listens per impression) percentage.",
            "The performance goal is set in video completion rate (complete video views per impression) percentage.",
            "The performance goal is set to Other."
          ]
        },
        "performanceGoalAmountMicros": {
          "description": "The goal amount, in micros of the advertiser's currency. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_VCPM` For example 1500000 represents 1.5 standard units of the currency.",
          "format": "int64",
          "type": "string"
        },
        "performanceGoalString": {
          "type": "string",
          "description": "A key performance indicator (KPI) string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`."
        },
        "performanceGoalPercentageMicros": {
          "description": "The decimal representation of the goal percentage in micros. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_CLICK_CVR` * `PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR` * `PERFORMANCE_GOAL_TYPE_VTR` * `PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE` * `PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE` For example, 70000 represents 7% (decimal 0.07).",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Settings that control the performance goal of a campaign or insertion order.",
      "id": "PerformanceGoal"
    },
    "IntegrationDetails": {
      "description": "Integration details of an entry.",
      "id": "IntegrationDetails",
      "type": "object",
      "properties": {
        "details": {
          "type": "string",
          "description": "Additional details of the entry in string format. Must be UTF-8 encoded with a length of no more than 1000 characters."
        },
        "integrationCode": {
          "type": "string",
          "description": "An external identifier to be associated with the entry. The integration code will show up together with the entry in many places in the system, for example, reporting. Must be UTF-8 encoded with a length of no more than 500 characters."
        }
      }
    },
    "AudioContentTypeTargetingOptionDetails": {
      "properties": {
        "audioContentType": {
          "enumDescriptions": [
            "Audio content type is not specified in this version. This enum is a place holder for a default value and does not represent a real content stream type.",
            "The audio content type is unknown.",
            "The audio content type is music.",
            "The audio content type is broadcast.",
            "The audio content type is podcast."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The audio content type.",
          "enum": [
            "AUDIO_CONTENT_TYPE_UNSPECIFIED",
            "AUDIO_CONTENT_TYPE_UNKNOWN",
            "AUDIO_CONTENT_TYPE_MUSIC",
            "AUDIO_CONTENT_TYPE_BROADCAST",
            "AUDIO_CONTENT_TYPE_PODCAST"
          ]
        }
      },
      "description": "Represents a targetable audio content type. This will be populated in the audio_content_type_details field when targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`.",
      "id": "AudioContentTypeTargetingOptionDetails",
      "type": "object"
    },
    "AgeRangeAssignedTargetingOptionDetails": {
      "properties": {
        "ageRange": {
          "description": "The age range of an audience. We only support targeting a continuous age range of an audience. Thus, the age range represented in this field can be 1) targeted solely, or, 2) part of a larger continuous age range. The reach of a continuous age range targeting can be expanded by also targeting an audience of an unknown age. Output only in v1. Required in v2.",
          "enumDescriptions": [
            "Default value when age range is not specified in this version. This enum is a placeholder for default value and does not represent a real age range option.",
            "The age range of the audience is 18 to 24.",
            "The age range of the audience is 25 to 34.",
            "The age range of the audience is 35 to 44.",
            "The age range of the audience is 45 to 54.",
            "The age range of the audience is 55 to 64.",
            "The age range of the audience is 65 and up.",
            "The age range of the audience is unknown.",
            "The age range of the audience is 18 to 20, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 21 to 24, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 25 to 29, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 30 to 34, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 35 to 39, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 40 to 44, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 45 to 49, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 50 to 54, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 55 to 59, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 60 to 64, only supported for the AdGroup of YouTube Programmatic Reservation line item."
          ],
          "enum": [
            "AGE_RANGE_UNSPECIFIED",
            "AGE_RANGE_18_24",
            "AGE_RANGE_25_34",
            "AGE_RANGE_35_44",
            "AGE_RANGE_45_54",
            "AGE_RANGE_55_64",
            "AGE_RANGE_65_PLUS",
            "AGE_RANGE_UNKNOWN",
            "AGE_RANGE_18_20",
            "AGE_RANGE_21_24",
            "AGE_RANGE_25_29",
            "AGE_RANGE_30_34",
            "AGE_RANGE_35_39",
            "AGE_RANGE_40_44",
            "AGE_RANGE_45_49",
            "AGE_RANGE_50_54",
            "AGE_RANGE_55_59",
            "AGE_RANGE_60_64"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a targetable age range. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AGE_RANGE`.",
      "id": "AgeRangeAssignedTargetingOptionDetails"
    },
    "InventorySourceVideoCreativeConfig": {
      "id": "InventorySourceVideoCreativeConfig",
      "properties": {
        "duration": {
          "description": "The duration requirements for the video creatives that can be assigned to the inventory source.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The configuration for video creatives."
    },
    "MeasurementConfig": {
      "id": "MeasurementConfig",
      "type": "object",
      "description": "Measurement settings of a partner.",
      "properties": {
        "dv360ToCmCostReportingEnabled": {
          "type": "boolean",
          "description": "Whether or not to report DV360 cost to CM360."
        },
        "dv360ToCmDataSharingEnabled": {
          "description": "Whether or not to include DV360 data in CM360 data transfer reports.",
          "type": "boolean"
        }
      }
    },
    "CmTrackingAd": {
      "type": "object",
      "id": "CmTrackingAd",
      "description": "A Campaign Manager 360 tracking ad.",
      "properties": {
        "cmCreativeId": {
          "description": "The creative ID of the campaign manager 360 tracking Ad.",
          "type": "string",
          "format": "int64"
        },
        "cmAdId": {
          "type": "string",
          "format": "int64",
          "description": "The ad ID of the campaign manager 360 tracking Ad."
        },
        "cmPlacementId": {
          "format": "int64",
          "description": "The placement ID of the campaign manager 360 tracking Ad.",
          "type": "string"
        }
      }
    },
    "AdvertiserDataAccessConfig": {
      "id": "AdvertiserDataAccessConfig",
      "properties": {
        "sdfConfig": {
          "$ref": "AdvertiserSdfConfig",
          "description": "Structured Data Files (SDF) settings for the advertiser. If not specified, the SDF settings of the parent partner are used."
        }
      },
      "description": "Settings that control how advertiser related data may be accessed.",
      "type": "object"
    },
    "BulkEditAssignedUserRolesResponse": {
      "type": "object",
      "id": "BulkEditAssignedUserRolesResponse",
      "properties": {
        "createdAssignedUserRoles": {
          "description": "The list of assigned user roles that have been successfully created. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedUserRole"
          },
          "type": "array"
        }
      }
    },
    "InventorySourceAssignedTargetingOptionDetails": {
      "id": "InventorySourceAssignedTargetingOptionDetails",
      "description": "Targeting details for inventory source. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE`.",
      "type": "object",
      "properties": {
        "inventorySourceId": {
          "format": "int64",
          "description": "Required. ID of the inventory source. Should refer to the inventory_source_id field of an InventorySource resource.",
          "type": "string"
        }
      }
    },
    "ReplaceNegativeKeywordsResponse": {
      "description": "Response message for NegativeKeywordService.ReplaceNegativeKeywords.",
      "id": "ReplaceNegativeKeywordsResponse",
      "type": "object",
      "properties": {
        "negativeKeywords": {
          "items": {
            "$ref": "NegativeKeyword"
          },
          "description": "The full list of negative keywords now present in the negative keyword list.",
          "type": "array"
        }
      }
    },
    "Transcode": {
      "properties": {
        "audioSampleRateHz": {
          "type": "string",
          "description": "The sample rate for the audio stream of the transcoded video, or the sample rate for the transcoded audio, in hertz.",
          "format": "int64"
        },
        "frameRate": {
          "type": "number",
          "format": "float",
          "description": "The frame rate of the transcoded video, in frames per second."
        },
        "audioBitRateKbps": {
          "format": "int64",
          "type": "string",
          "description": "The bit rate for the audio stream of the transcoded video, or the bit rate for the transcoded audio, in kilobits per second."
        },
        "bitRateKbps": {
          "format": "int64",
          "type": "string",
          "description": "The transcoding bit rate of the transcoded video, in kilobits per second."
        },
        "name": {
          "description": "The name of the transcoded file.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "The MIME type of the transcoded file."
        },
        "transcoded": {
          "type": "boolean",
          "description": "Indicates if the transcoding was successful."
        },
        "dimensions": {
          "description": "The dimensions of the transcoded video.",
          "$ref": "Dimensions"
        },
        "fileSizeBytes": {
          "description": "The size of the transcoded file, in bytes.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents information about the transcoded audio or video file.",
      "id": "Transcode"
    },
    "ListLocationListsResponse": {
      "properties": {
        "locationLists": {
          "items": {
            "$ref": "LocationList"
          },
          "type": "array",
          "description": "The list of location lists. This list will be absent if empty."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListLocationLists` method to retrieve the next page of results."
        }
      },
      "id": "ListLocationListsResponse",
      "type": "object"
    },
    "ThirdPartyVendorConfig": {
      "description": "Settings that control how third-party measurement vendors are configured.",
      "type": "object",
      "properties": {
        "vendor": {
          "enum": [
            "THIRD_PARTY_VENDOR_UNSPECIFIED",
            "THIRD_PARTY_VENDOR_MOAT",
            "THIRD_PARTY_VENDOR_DOUBLE_VERIFY",
            "THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE",
            "THIRD_PARTY_VENDOR_COMSCORE",
            "THIRD_PARTY_VENDOR_TELEMETRY",
            "THIRD_PARTY_VENDOR_MEETRICS",
            "THIRD_PARTY_VENDOR_ZEFR",
            "THIRD_PARTY_VENDOR_NIELSEN",
            "THIRD_PARTY_VENDOR_KANTAR",
            "THIRD_PARTY_VENDOR_DYNATA"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown third-party vendor.",
            "Moat.",
            "DoubleVerify.",
            "Integral Ad Science.",
            "Comscore.",
            "Telemetry.",
            "Meetrics.",
            "ZEFR.",
            "Nielsen.",
            "Kantar.",
            "Dynata."
          ],
          "description": "The third-party measurement vendor."
        },
        "placementId": {
          "description": "The ID used by the platform of the third-party vendor to identify the line item.",
          "type": "string"
        }
      },
      "id": "ThirdPartyVendorConfig"
    },
    "GuaranteedOrderStatus": {
      "description": "The status settings of the guaranteed order.",
      "type": "object",
      "id": "GuaranteedOrderStatus",
      "properties": {
        "entityPauseReason": {
          "type": "string",
          "description": "The user-provided reason for pausing this guaranteed order. Must be UTF-8 encoded with a maximum length of 100 bytes. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`."
        },
        "configStatus": {
          "enum": [
            "GUARANTEED_ORDER_CONFIG_STATUS_UNSPECIFIED",
            "PENDING",
            "COMPLETED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The approval status is not specified or is unknown in this version.",
            "The beginning state of a guaranteed order. The guaranteed order in this state needs to be configured before it can serve.",
            "The state after the buyer configures a guaranteed order."
          ],
          "readOnly": true,
          "description": "Output only. The configuration status of the guaranteed order. Acceptable values are `PENDING` and `COMPLETED`. A guaranteed order must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve. Currently the configuration action can only be performed via UI."
        },
        "entityStatus": {
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "type": "string",
          "description": "Whether or not the guaranteed order is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`."
        }
      }
    },
    "BulkListInsertionOrderAssignedTargetingOptionsResponse": {
      "description": "Response message for BulkListInsertionOrderAssignedTargetingOptions.",
      "properties": {
        "assignedTargetingOptions": {
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return."
        }
      },
      "type": "object",
      "id": "BulkListInsertionOrderAssignedTargetingOptionsResponse"
    },
    "AssignedLocation": {
      "description": "An assignment between a location list and a relevant targeting option. Currently, geo region targeting options are the only supported option for assignment.",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the assigned location."
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The ID of the targeting option assigned to the location list. Must be of type TARGETING_TYPE_GEO_REGION."
        },
        "assignedLocationId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique ID of the assigned location. The ID is only unique within a location list. It may be reused in other contexts.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "AssignedLocation"
    },
    "ExchangeTargetingOptionDetails": {
      "description": "Represents a targetable exchange. This will be populated in the exchange_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_EXCHANGE`.",
      "type": "object",
      "id": "ExchangeTargetingOptionDetails",
      "properties": {
        "exchange": {
          "type": "string",
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX.",
            "Open8.",
            "Triton.",
            "TripleLift.",
            "Taboola.",
            "InMobi.",
            "Smaato.",
            "Aja.",
            "Supership.",
            "Nexstar Digital.",
            "Waze.",
            "SoundCast.",
            "Sharethrough.",
            "Fyber.",
            "Red For Publishers.",
            "Media.net.",
            "Tapjoy.",
            "Vistar.",
            "DAX."
          ],
          "description": "Output only. The type of exchange.",
          "readOnly": true,
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_SUPERSHIP",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE",
            "EXCHANGE_SOUNDCAST",
            "EXCHANGE_SHARETHROUGH",
            "EXCHANGE_FYBER",
            "EXCHANGE_RED_FOR_PUBLISHERS",
            "EXCHANGE_MEDIANET",
            "EXCHANGE_TAPJOY",
            "EXCHANGE_VISTAR",
            "EXCHANGE_DAX"
          ]
        }
      }
    },
    "LanguageAssignedTargetingOptionDetails": {
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_LANGUAGE`.",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. The display name of the language (e.g., \"French\").",
          "type": "string",
          "readOnly": true
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted. All assigned language targeting options on the same resource must have the same value for this field.",
          "type": "boolean"
        }
      },
      "description": "Details for assigned language targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_LANGUAGE`.",
      "id": "LanguageAssignedTargetingOptionDetails",
      "type": "object"
    },
    "SearchTargetingOptionsResponse": {
      "id": "SearchTargetingOptionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `SearchTargetingOptions` method to retrieve the next page of results.",
          "type": "string"
        },
        "targetingOptions": {
          "items": {
            "$ref": "TargetingOption"
          },
          "description": "The list of targeting options that match the search criteria. This list will be absent if empty.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for SearchTargetingOptions."
    },
    "SensitiveCategoryTargetingOptionDetails": {
      "id": "SensitiveCategoryTargetingOptionDetails",
      "description": "Represents a targetable sensitive category. This will be populated in the sensitive_category_details field of the TargetingOption when targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.",
      "type": "object",
      "properties": {
        "sensitiveCategory": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "SENSITIVE_CATEGORY_UNSPECIFIED",
            "SENSITIVE_CATEGORY_ADULT",
            "SENSITIVE_CATEGORY_DEROGATORY",
            "SENSITIVE_CATEGORY_DOWNLOADS_SHARING",
            "SENSITIVE_CATEGORY_WEAPONS",
            "SENSITIVE_CATEGORY_GAMBLING",
            "SENSITIVE_CATEGORY_VIOLENCE",
            "SENSITIVE_CATEGORY_SUGGESTIVE",
            "SENSITIVE_CATEGORY_PROFANITY",
            "SENSITIVE_CATEGORY_ALCOHOL",
            "SENSITIVE_CATEGORY_DRUGS",
            "SENSITIVE_CATEGORY_TOBACCO",
            "SENSITIVE_CATEGORY_POLITICS",
            "SENSITIVE_CATEGORY_RELIGION",
            "SENSITIVE_CATEGORY_TRAGEDY",
            "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS",
            "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES",
            "SENSITIVE_CATEGORY_SHOCKING",
            "SENSITIVE_CATEGORY_EMBEDDED_VIDEO",
            "SENSITIVE_CATEGORY_LIVE_STREAMING_VIDEO"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and doesn't specify a DV360 sensitive category.",
            "Adult or pornographic text, image, or video content.",
            "Content that may be construed as biased against individuals, groups, or organizations based on criteria such as race, religion, disability, sex, age, veteran status, sexual orientation, gender identity, or political affiliation. May also indicate discussion of such content, for instance, in an academic or journalistic context.",
            "Content related to audio, video, or software downloads.",
            "Contains content related to personal weapons, including knives, guns, small firearms, and ammunition. Selecting either \"weapons\" or \"sensitive social issues\" will result in selecting both.",
            "Contains content related to betting or wagering in a real-world or online setting.",
            "Content which may be considered graphically violent, gory, gruesome, or shocking, such as street fighting videos, accident photos, descriptions of torture, etc.",
            "Adult content, as well as suggestive content that's not explicitly pornographic. This category includes all pages categorized as adult.",
            "Prominent use of words considered indecent, such as curse words and sexual slang. Pages with only very occasional usage, such as news sites that might include such words in a quotation, are not included.",
            "Contains content related to alcoholic beverages, alcohol brands, recipes, etc.",
            "Contains content related to the recreational use of legal or illegal drugs, as well as to drug paraphernalia or cultivation.",
            "Contains content related to tobacco and tobacco accessories, including lighters, humidors, ashtrays, etc.",
            "Political news and media, including discussions of social, governmental, and public policy.",
            "Content related to religious thought or beliefs.",
            "Content related to death, disasters, accidents, war, etc.",
            "Content related to motor vehicle, aviation or other transportation accidents.",
            "Issues that evoke strong, opposing views and spark debate. These include issues that are controversial in most countries and markets (such as abortion), as well as those that are controversial in specific countries and markets (such as immigration reform in the United States).",
            "Content which may be considered shocking or disturbing, such as violent news stories, stunts, or toilet humor.",
            "YouTube videos embedded on websites outside of YouTube.com. Only applicable to YouTube and Partners line items.",
            "Video of live events streamed over the internet. Only applicable to YouTube and Partners line items."
          ],
          "description": "Output only. An enum for the DV360 Sensitive category content classifier."
        }
      }
    },
    "CategoryTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "displayName": {
          "readOnly": true,
          "description": "Output only. The display name of the category.",
          "type": "string"
        }
      },
      "description": "Represents a targetable category. This will be populated in the category_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_CATEGORY`.",
      "id": "CategoryTargetingOptionDetails"
    },
    "BusinessChainSearchTerms": {
      "description": "Search terms for Business Chain targeting options. At least one of the field should be populated.",
      "id": "BusinessChainSearchTerms",
      "type": "object",
      "properties": {
        "regionQuery": {
          "description": "The search query for the desired geo region, e.g. \"Seattle\", \"United State\".",
          "type": "string"
        },
        "businessChainQuery": {
          "type": "string",
          "description": "The search query for the desired business chain. The query must be the full name of the business, e.g. \"KFC\", \"mercedes-benz\"."
        }
      }
    },
    "DeactivateManualTriggerRequest": {
      "description": "Request message for ManualTriggerService.DeactivateManualTrigger.",
      "properties": {},
      "id": "DeactivateManualTriggerRequest",
      "type": "object"
    },
    "DoubleVerifyFraudInvalidTraffic": {
      "id": "DoubleVerifyFraudInvalidTraffic",
      "description": "DoubleVerify Fraud & Invalid Traffic settings.",
      "type": "object",
      "properties": {
        "avoidInsufficientOption": {
          "type": "boolean",
          "description": "Insufficient Historical Fraud & IVT Stats."
        },
        "avoidedFraudOption": {
          "type": "string",
          "description": "Avoid Sites and Apps with historical Fraud & IVT.",
          "enum": [
            "FRAUD_UNSPECIFIED",
            "AD_IMPRESSION_FRAUD_100",
            "AD_IMPRESSION_FRAUD_50",
            "AD_IMPRESSION_FRAUD_25",
            "AD_IMPRESSION_FRAUD_10",
            "AD_IMPRESSION_FRAUD_8",
            "AD_IMPRESSION_FRAUD_6",
            "AD_IMPRESSION_FRAUD_4",
            "AD_IMPRESSION_FRAUD_2"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any fraud and invalid traffic options.",
            "100% Fraud & IVT.",
            "50% or Higher Fraud & IVT.",
            "25% or Higher Fraud & IVT.",
            "10% or Higher Fraud & IVT.",
            "8% or Higher Fraud & IVT.",
            "6% or Higher Fraud & IVT.",
            "4% or Higher Fraud & IVT.",
            "2% or Higher Fraud & IVT."
          ]
        }
      }
    },
    "ObaIcon": {
      "properties": {
        "program": {
          "description": "The program of the OBA icon. For example: “AdChoices”.",
          "type": "string"
        },
        "position": {
          "enumDescriptions": [
            "The OBA icon position is not specified.",
            "At the upper right side of the creative.",
            "At the upper left side of the creative.",
            "At the lower right side of the creative.",
            "At the lower left side of the creative."
          ],
          "enum": [
            "OBA_ICON_POSITION_UNSPECIFIED",
            "OBA_ICON_POSITION_UPPER_RIGHT",
            "OBA_ICON_POSITION_UPPER_LEFT",
            "OBA_ICON_POSITION_LOWER_RIGHT",
            "OBA_ICON_POSITION_LOWER_LEFT"
          ],
          "description": "The position of the OBA icon on the creative.",
          "type": "string"
        },
        "landingPageUrl": {
          "type": "string",
          "description": "Required. The landing page URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
        },
        "resourceUrl": {
          "description": "The URL of the OBA icon resource.",
          "type": "string"
        },
        "clickTrackingUrl": {
          "type": "string",
          "description": "Required. The click tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
        },
        "resourceMimeType": {
          "description": "The MIME type of the OBA icon resource.",
          "type": "string"
        },
        "dimensions": {
          "$ref": "Dimensions",
          "description": "The dimensions of the OBA icon."
        },
        "viewTrackingUrl": {
          "type": "string",
          "description": "Required. The view tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
        }
      },
      "description": "OBA Icon for a Creative",
      "type": "object",
      "id": "ObaIcon"
    },
    "LookbackWindow": {
      "id": "LookbackWindow",
      "type": "object",
      "properties": {
        "clickDays": {
          "format": "int32",
          "type": "integer",
          "description": "Lookback window, in days, from the last time a given user clicked on one of your ads."
        },
        "impressionDays": {
          "description": "Lookback window, in days, from the last time a given user viewed one of your ads.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Specifies how many days into the past to look when determining whether to record a conversion."
    },
    "GoogleAudience": {
      "id": "GoogleAudience",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the google audience.",
          "readOnly": true
        },
        "googleAudienceType": {
          "type": "string",
          "enum": [
            "GOOGLE_AUDIENCE_TYPE_UNSPECIFIED",
            "GOOGLE_AUDIENCE_TYPE_AFFINITY",
            "GOOGLE_AUDIENCE_TYPE_IN_MARKET",
            "GOOGLE_AUDIENCE_TYPE_INSTALLED_APPS",
            "GOOGLE_AUDIENCE_TYPE_NEW_MOBILE_DEVICES",
            "GOOGLE_AUDIENCE_TYPE_LIFE_EVENT",
            "GOOGLE_AUDIENCE_TYPE_EXTENDED_DEMOGRAPHIC"
          ],
          "description": "Output only. The type of Google audience. .",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "Affinity type Google audience.",
            "In-Market type Google audience.",
            "Installed-Apps type Google audience.",
            "New-Mobile-Devices type Google audience.",
            "Life-Event type Google audience.",
            "Extended-Demographic type Google audience."
          ],
          "readOnly": true
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The display name of the Google audience. ."
        },
        "googleAudienceId": {
          "readOnly": true,
          "description": "Output only. The unique ID of the Google audience. Assigned by the system.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Describes a Google audience resource. Includes Google audience lists."
    },
    "FirstAndThirdPartyAudienceTargetingSetting": {
      "description": "Details of first and third party audience targeting setting.",
      "properties": {
        "firstAndThirdPartyAudienceId": {
          "description": "Required. First and third party audience id of the first and third party audience targeting setting. This id is first_and_third_party_audience_id.",
          "format": "int64",
          "type": "string"
        },
        "recency": {
          "enum": [
            "RECENCY_NO_LIMIT",
            "RECENCY_1_MINUTE",
            "RECENCY_5_MINUTES",
            "RECENCY_10_MINUTES",
            "RECENCY_15_MINUTES",
            "RECENCY_30_MINUTES",
            "RECENCY_1_HOUR",
            "RECENCY_2_HOURS",
            "RECENCY_3_HOURS",
            "RECENCY_6_HOURS",
            "RECENCY_12_HOURS",
            "RECENCY_1_DAY",
            "RECENCY_2_DAYS",
            "RECENCY_3_DAYS",
            "RECENCY_5_DAYS",
            "RECENCY_7_DAYS",
            "RECENCY_10_DAYS",
            "RECENCY_14_DAYS",
            "RECENCY_15_DAYS",
            "RECENCY_21_DAYS",
            "RECENCY_28_DAYS",
            "RECENCY_30_DAYS",
            "RECENCY_40_DAYS",
            "RECENCY_45_DAYS",
            "RECENCY_60_DAYS",
            "RECENCY_90_DAYS",
            "RECENCY_120_DAYS",
            "RECENCY_180_DAYS",
            "RECENCY_270_DAYS",
            "RECENCY_365_DAYS"
          ],
          "description": "The recency of the first and third party audience targeting setting. Only applicable to first party audiences, otherwise will be ignored. For more info, refer to https://support.google.com/displayvideo/answer/2949947#recency When unspecified, no recency limit will be used.",
          "type": "string",
          "enumDescriptions": [
            "No limit of recency.",
            "Recency is 1 minute.",
            "Recency is 5 minutes.",
            "Recency is 10 minutes.",
            "Recency is 15 minutes.",
            "Recency is 30 minutes.",
            "Recency is 1 hour.",
            "Recency is 2 hours.",
            "Recency is 3 hours.",
            "Recency is 6 hours.",
            "Recency is 12 hours.",
            "Recency is 1 day.",
            "Recency is 2 days.",
            "Recency is 3 days.",
            "Recency is 5 days.",
            "Recency is 7 days.",
            "Recency is 10 days.",
            "Recency is 14 days.",
            "Recency is 15 days.",
            "Recency is 21 days.",
            "Recency is 28 days.",
            "Recency is 30 days.",
            "Recency is 40 days.",
            "Recency is 45 days.",
            "Recency is 60 days.",
            "Recency is 90 days.",
            "Recency is 120 days.",
            "Recency is 180 days.",
            "Recency is 270 days.",
            "Recency is 365 days."
          ]
        }
      },
      "type": "object",
      "id": "FirstAndThirdPartyAudienceTargetingSetting"
    },
    "PoiSearchTerms": {
      "description": "Search terms for POI targeting options.",
      "type": "object",
      "id": "PoiSearchTerms",
      "properties": {
        "poiQuery": {
          "description": "The search query for the desired POI name, street address, or coordinate of the desired POI. The query can be a prefix, e.g. \"Times squar\", \"40.7505045,-73.99562\", \"315 W 44th St\", etc.",
          "type": "string"
        }
      }
    },
    "ListGoogleAudiencesResponse": {
      "id": "ListGoogleAudiencesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListGoogleAudiences` method to retrieve the next page of results.",
          "type": "string"
        },
        "googleAudiences": {
          "items": {
            "$ref": "GoogleAudience"
          },
          "description": "The list of Google audiences. This list will be absent if empty.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuditAdvertiserResponse": {
      "id": "AuditAdvertiserResponse",
      "properties": {
        "usedCampaignsCount": {
          "description": "The number of ACTIVE and PAUSED campaigns under this advertiser. These campaigns count towards the limit of 9999 campaigns per advertiser.",
          "type": "string",
          "format": "int64"
        },
        "channelsCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of channels created under this advertiser. These channels count towards the limit of 1000 channels per advertiser."
        },
        "negativelyTargetedChannelsCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of negatively targeted channels created under this advertiser. These negatively targeted channels count towards the limit of 5 negatively targeted channels per advertiser."
        },
        "usedInsertionOrdersCount": {
          "format": "int64",
          "description": "The number of ACTIVE, PAUSED and DRAFT insertion orders under this advertiser. These insertion orders count towards the limit of 9999 insertion orders per advertiser.",
          "type": "string"
        },
        "adGroupCriteriaCount": {
          "description": "The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 4500000 ad group targeting options per advertiser. Qualifying Targeting types: * Channels, URLs, apps, and collections * Demographic * Google Audiences, including Affinity, Custom Affinity, and In-market audiences * Inventory source * Keyword * Mobile app category * User lists * Video targeting * Viewability",
          "format": "int64",
          "type": "string"
        },
        "campaignCriteriaCount": {
          "description": "The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 900000 campaign targeting options per advertiser. Qualifying Targeting types: * Position * Browser * Connection speed * Day and time * Device and operating system * Digital content label * Sensitive categories * Environment * Geography, including business chains and proximity * ISP * Language * Third-party verification",
          "format": "int64",
          "type": "string"
        },
        "usedLineItemsCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of ACTIVE, PAUSED, and DRAFT line items under this advertiser. These line items count towards the limit of 9999 line items per advertiser."
        },
        "negativeKeywordListsCount": {
          "type": "string",
          "description": "The number of negative keyword lists created under this advertiser. These negative keyword lists count towards the limit of 20 negative keyword lists per advertiser.",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Response message for AdvertiserService.AuditAdvertiser."
    },
    "TrackingFloodlightActivityConfig": {
      "id": "TrackingFloodlightActivityConfig",
      "properties": {
        "postViewLookbackWindowDays": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The number of days after an ad has been viewed in which a conversion may be counted. Must be between 0 and 90 inclusive."
        },
        "floodlightActivityId": {
          "description": "Required. The ID of the Floodlight activity.",
          "type": "string",
          "format": "int64"
        },
        "postClickLookbackWindowDays": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The number of days after an ad has been clicked in which a conversion may be counted. Must be between 0 and 90 inclusive."
        }
      },
      "type": "object",
      "description": "Settings that control the behavior of a single Floodlight activity config."
    },
    "AdvertiserSdfConfig": {
      "id": "AdvertiserSdfConfig",
      "properties": {
        "sdfConfig": {
          "$ref": "SdfConfig",
          "description": "The SDF configuration for the advertiser. * Required when overridePartnerSdfConfig is `true`. * Output only when overridePartnerSdfConfig is `false`."
        },
        "overridePartnerSdfConfig": {
          "description": "Whether or not this advertiser overrides the SDF configuration of its parent partner. By default, an advertiser inherits the SDF configuration from the parent partner. To override the partner configuration, set this field to `true` and provide the new configuration in sdfConfig.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Structured Data Files (SDF) settings of an advertiser."
    },
    "DeviceTypeTargetingOptionDetails": {
      "id": "DeviceTypeTargetingOptionDetails",
      "description": "Represents a targetable device type. This will be populated in the device_type_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`.",
      "properties": {
        "deviceType": {
          "description": "Output only. The device type that is used to be targeted.",
          "enumDescriptions": [
            "Default value when device type is not specified in this version. This enum is a placeholder for default value and does not represent a real device type option.",
            "The device type is computer.",
            "The device type is connected TV.",
            "The device type is smart phone..",
            "The device type is tablet."
          ],
          "enum": [
            "DEVICE_TYPE_UNSPECIFIED",
            "DEVICE_TYPE_COMPUTER",
            "DEVICE_TYPE_CONNECTED_TV",
            "DEVICE_TYPE_SMART_PHONE",
            "DEVICE_TYPE_TABLET"
          ],
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "AdvertiserGeneralConfig": {
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "Required. Immutable. Advertiser's currency in ISO 4217 format. Accepted codes and the currencies they represent are: Currency Code : Currency Name * `ARS` : Argentine Peso * `AUD` : Australian Dollar * `BRL` : Brazilian Real * `CAD` : Canadian Dollar * `CHF` : Swiss Franc * `CLP` : Chilean Peso * `CNY` : Chinese Yuan * `COP` : Colombian Peso * `CZK` : Czech Koruna * `DKK` : Danish Krone * `EGP` : Egyption Pound * `EUR` : Euro * `GBP` : British Pound * `HKD` : Hong Kong Dollar * `HUF` : Hungarian Forint * `IDR` : Indonesian Rupiah * `ILS` : Israeli Shekel * `INR` : Indian Rupee * `JPY` : Japanese Yen * `KRW` : South Korean Won * `MXN` : Mexican Pesos * `MYR` : Malaysian Ringgit * `NGN` : Nigerian Naira * `NOK` : Norwegian Krone * `NZD` : New Zealand Dollar * `PEN` : Peruvian Nuevo Sol * `PLN` : Polish Zloty * `RON` : New Romanian Leu * `RUB` : Russian Ruble * `SEK` : Swedish Krona * `TRY` : Turkish Lira * `TWD` : New Taiwan Dollar * `USD` : US Dollar * `ZAR` : South African Rand"
        },
        "timeZone": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The standard TZ database name of the advertiser's time zone. For example, `America/New_York`. See more at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones For CM360 hybrid advertisers, the time zone is the same as that of the associated CM360 account; for third-party only advertisers, the time zone is the same as that of the parent partner."
        },
        "domainUrl": {
          "type": "string",
          "description": "Required. The domain URL of the advertiser's primary website. The system will send this information to publishers that require website URL to associate a campaign with an advertiser. Provide a URL with no path or query string, beginning with `http:` or `https:`. For example, http://www.example.com"
        }
      },
      "type": "object",
      "description": "General settings of an advertiser.",
      "id": "AdvertiserGeneralConfig"
    },
    "BulkListAdvertiserAssignedTargetingOptionsResponse": {
      "type": "object",
      "id": "BulkListAdvertiserAssignedTargetingOptionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        },
        "assignedTargetingOptions": {
          "type": "array",
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        }
      }
    },
    "AudioVideoOffset": {
      "properties": {
        "percentage": {
          "description": "The offset in percentage of the audio or video duration.",
          "type": "string",
          "format": "int64"
        },
        "seconds": {
          "description": "The offset in seconds from the start of the audio or video.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "AudioVideoOffset",
      "type": "object",
      "description": "The length an audio or a video has been played."
    },
    "BulkEditPartnerAssignedTargetingOptionsRequest": {
      "description": "Request message for BulkEditPartnerAssignedTargetingOptions.",
      "type": "object",
      "properties": {
        "createRequests": {
          "items": {
            "$ref": "CreateAssignedTargetingOptionsRequest"
          },
          "description": "The assigned targeting options to create in batch, specified as a list of `CreateAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL`",
          "type": "array"
        },
        "deleteRequests": {
          "items": {
            "$ref": "DeleteAssignedTargetingOptionsRequest"
          },
          "type": "array",
          "description": "The assigned targeting options to delete in batch, specified as a list of `DeleteAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL`"
        }
      },
      "id": "BulkEditPartnerAssignedTargetingOptionsRequest"
    },
    "ListCombinedAudiencesResponse": {
      "properties": {
        "combinedAudiences": {
          "type": "array",
          "items": {
            "$ref": "CombinedAudience"
          },
          "description": "The list of combined audiences. This list will be absent if empty."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCombinedAudiences` method to retrieve the next page of results."
        }
      },
      "type": "object",
      "id": "ListCombinedAudiencesResponse"
    },
    "ListCampaignsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCampaigns` method to retrieve the next page of results."
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "Campaign"
          },
          "description": "The list of campaigns. This list will be absent if empty."
        }
      },
      "type": "object",
      "id": "ListCampaignsResponse"
    },
    "DoubleVerify": {
      "type": "object",
      "id": "DoubleVerify",
      "description": "Details of DoubleVerify settings.",
      "properties": {
        "videoViewability": {
          "$ref": "DoubleVerifyVideoViewability",
          "description": "Video viewability settings (applicable to video line items only)."
        },
        "brandSafetyCategories": {
          "$ref": "DoubleVerifyBrandSafetyCategories",
          "description": "DV Brand Safety Controls."
        },
        "displayViewability": {
          "$ref": "DoubleVerifyDisplayViewability",
          "description": "Display viewability settings (applicable to display line items only)."
        },
        "customSegmentId": {
          "description": "The custom segment ID provided by DoubleVerify. The ID must start with \"51\" and consist of eight digits. Custom segment ID cannot be specified along with any of the following fields: * brand_safety_categories * avoided_age_ratings * app_star_rating * fraud_invalid_traffic",
          "format": "int64",
          "type": "string"
        },
        "appStarRating": {
          "description": "Avoid bidding on apps with the star ratings.",
          "$ref": "DoubleVerifyAppStarRating"
        },
        "fraudInvalidTraffic": {
          "$ref": "DoubleVerifyFraudInvalidTraffic",
          "description": "Avoid Sites and Apps with historical Fraud & IVT Rates."
        },
        "avoidedAgeRatings": {
          "description": "Avoid bidding on apps with the age rating.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AGE_RATING_UNSPECIFIED",
              "APP_AGE_RATE_UNKNOWN",
              "APP_AGE_RATE_4_PLUS",
              "APP_AGE_RATE_9_PLUS",
              "APP_AGE_RATE_12_PLUS",
              "APP_AGE_RATE_17_PLUS",
              "APP_AGE_RATE_18_PLUS"
            ],
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any age rating options.",
              "Apps with unknown age rating.",
              "Apps rated for Everyone (4+).",
              "Apps rated for Everyone (9+).",
              "Apps rated for Teens (12+).",
              "Apps rated for Mature (17+).",
              "Apps rated for Adults Only (18+)."
            ]
          }
        }
      }
    },
    "EditGuaranteedOrderReadAccessorsResponse": {
      "type": "object",
      "id": "EditGuaranteedOrderReadAccessorsResponse",
      "properties": {
        "readAdvertiserIds": {
          "description": "The IDs of advertisers with read access to the guaranteed order.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "readAccessInherited": {
          "description": "Whether all advertisers of read_write_partner_id have read access to the guaranteed order.",
          "type": "boolean"
        }
      }
    },
    "ExitEvent": {
      "type": "object",
      "properties": {
        "reportingName": {
          "description": "The name used to identify this event in reports. Leave it empty or unset for creatives containing image assets only.",
          "type": "string"
        },
        "name": {
          "description": "The name of the click tag of the exit event. The name must be unique within one creative. Leave it empty or unset for creatives containing image assets only.",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "Required. The click through URL of the exit event. This is required when type is: * `EXIT_EVENT_TYPE_DEFAULT` * `EXIT_EVENT_TYPE_BACKUP`"
        },
        "type": {
          "enumDescriptions": [
            "Exit event type is not specified or is unknown in this version.",
            "The exit event is the default one.",
            "The exit event is a backup exit event. There could be multiple backup exit events in a creative."
          ],
          "description": "Required. The type of the exit event.",
          "type": "string",
          "enum": [
            "EXIT_EVENT_TYPE_UNSPECIFIED",
            "EXIT_EVENT_TYPE_DEFAULT",
            "EXIT_EVENT_TYPE_BACKUP"
          ]
        }
      },
      "id": "ExitEvent",
      "description": "Exit event of the creative."
    },
    "MaximizeSpendBidStrategy": {
      "properties": {
        "customBiddingAlgorithmId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`."
        },
        "raiseBidForDeals": {
          "description": "Whether the strategy takes deal floor prices into account.",
          "type": "boolean"
        },
        "maxAverageCpmBidAmountMicros": {
          "format": "int64",
          "description": "The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. For example, 1500000 represents 1.5 standard units of the currency.",
          "type": "string"
        },
        "performanceGoalType": {
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Cost per action.",
            "Cost per click.",
            "Viewable CPM.",
            "Custom bidding algorithm.",
            "Completed inview and audible views.",
            "Inview time over 10 secs views.",
            "Viewable impressions."
          ],
          "type": "string",
          "description": "Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy.",
          "enum": [
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
          ]
        }
      },
      "type": "object",
      "description": "A strategy that automatically adjusts the bid to optimize a specified performance goal while spending the full budget.",
      "id": "MaximizeSpendBidStrategy"
    },
    "BulkEditAssignedTargetingOptionsRequest": {
      "type": "object",
      "properties": {
        "lineItemIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Required. The ID of the line items whose targeting is being updated.",
          "type": "array"
        },
        "deleteRequests": {
          "description": "The assigned targeting options to delete in batch, specified as a list of DeleteAssignedTargetingOptionsRequest.",
          "items": {
            "$ref": "DeleteAssignedTargetingOptionsRequest"
          },
          "type": "array"
        },
        "createRequests": {
          "type": "array",
          "description": "The assigned targeting options to create in batch, specified as a list of CreateAssignedTargetingOptionsRequest.",
          "items": {
            "$ref": "CreateAssignedTargetingOptionsRequest"
          }
        }
      },
      "description": "Request message for BulkEditLineItemsAssignedTargetingOptions.",
      "id": "BulkEditAssignedTargetingOptionsRequest"
    },
    "BulkEditPartnerAssignedTargetingOptionsResponse": {
      "properties": {
        "createdAssignedTargetingOptions": {
          "type": "array",
          "description": "The list of assigned targeting options that have been successfully created. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        }
      },
      "type": "object",
      "id": "BulkEditPartnerAssignedTargetingOptionsResponse"
    },
    "IntegralAdScience": {
      "description": "Details of Integral Ad Science settings.",
      "type": "object",
      "properties": {
        "excludedAlcoholRisk": {
          "type": "string",
          "enum": [
            "ALCOHOL_UNSPECIFIED",
            "ALCOHOL_HR",
            "ALCOHOL_HMR"
          ],
          "description": "Brand Safety - **Alcohol**.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any alcohol options.",
            "Alcohol - Exclude High Risk.",
            "Alcohol - Exclude High and Moderate Risk."
          ]
        },
        "excludedAdFraudRisk": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any ad fraud prevention options.",
            "Ad Fraud - Exclude High Risk.",
            "Ad Fraud - Exclude High and Moderate Risk."
          ],
          "description": "Ad Fraud settings.",
          "type": "string",
          "enum": [
            "SUSPICIOUS_ACTIVITY_UNSPECIFIED",
            "SUSPICIOUS_ACTIVITY_HR",
            "SUSPICIOUS_ACTIVITY_HMR"
          ]
        },
        "displayViewability": {
          "type": "string",
          "description": "Display Viewability section (applicable to display line items only).",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any display viewability options.",
            "Target 40% Viewability or Higher.",
            "Target 50% Viewability or Higher.",
            "Target 60% Viewability or Higher.",
            "Target 70% Viewability or Higher."
          ],
          "enum": [
            "PERFORMANCE_VIEWABILITY_UNSPECIFIED",
            "PERFORMANCE_VIEWABILITY_40",
            "PERFORMANCE_VIEWABILITY_50",
            "PERFORMANCE_VIEWABILITY_60",
            "PERFORMANCE_VIEWABILITY_70"
          ]
        },
        "excludedHateSpeechRisk": {
          "description": "Brand Safety - **Hate speech**.",
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any hate speech options.",
            "Hate Speech - Exclude High Risk.",
            "Hate Speech - Exclude High and Moderate Risk."
          ],
          "enum": [
            "HATE_SPEECH_UNSPECIFIED",
            "HATE_SPEECH_HR",
            "HATE_SPEECH_HMR"
          ]
        },
        "excludedAdultRisk": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any adult options.",
            "Adult - Exclude High Risk.",
            "Adult - Exclude High and Moderate Risk."
          ],
          "enum": [
            "ADULT_UNSPECIFIED",
            "ADULT_HR",
            "ADULT_HMR"
          ],
          "type": "string",
          "description": "Brand Safety - **Adult content**."
        },
        "excludedIllegalDownloadsRisk": {
          "description": "Brand Safety - **Illegal downloads**.",
          "type": "string",
          "enum": [
            "ILLEGAL_DOWNLOADS_UNSPECIFIED",
            "ILLEGAL_DOWNLOADS_HR",
            "ILLEGAL_DOWNLOADS_HMR"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any illegal downloads options.",
            "Illegal Downloads - Exclude High Risk.",
            "Illegal Downloads - Exclude High and Moderate Risk."
          ]
        },
        "traqScoreOption": {
          "type": "string",
          "enum": [
            "TRAQ_UNSPECIFIED",
            "TRAQ_250",
            "TRAQ_500",
            "TRAQ_600",
            "TRAQ_700",
            "TRAQ_750",
            "TRAQ_875",
            "TRAQ_1000"
          ],
          "description": "True advertising quality (applicable to Display line items only).",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any true advertising quality scores.",
            "TRAQ score 250-1000.",
            "TRAQ score 500-1000.",
            "TRAQ score 600-1000.",
            "TRAQ score 700-1000.",
            "TRAQ score 750-1000.",
            "TRAQ score 875-1000.",
            "TRAQ score 1000."
          ]
        },
        "videoViewability": {
          "enum": [
            "VIDEO_VIEWABILITY_UNSPECIFIED",
            "VIDEO_VIEWABILITY_40",
            "VIDEO_VIEWABILITY_50",
            "VIDEO_VIEWABILITY_60",
            "VIDEO_VIEWABILITY_70"
          ],
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any video viewability options.",
            "40%+ in view (IAB video viewability standard).",
            "50%+ in view (IAB video viewability standard).",
            "60%+ in view (IAB video viewability standard).",
            "70%+ in view (IAB video viewability standard)."
          ],
          "description": "Video Viewability Section (applicable to video line items only)."
        },
        "customSegmentId": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "The custom segment ID provided by Integral Ad Science. The ID must be between `1000001` and `1999999`, inclusive."
        },
        "excludeUnrateable": {
          "type": "boolean",
          "description": "Brand Safety - **Unrateable**."
        },
        "excludedOffensiveLanguageRisk": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any language options.",
            "Offensive Language - Exclude High Risk.",
            "Offensive Language - Exclude High and Moderate Risk."
          ],
          "enum": [
            "OFFENSIVE_LANGUAGE_UNSPECIFIED",
            "OFFENSIVE_LANGUAGE_HR",
            "OFFENSIVE_LANGUAGE_HMR"
          ],
          "description": "Brand Safety - **Offensive language**.",
          "type": "string"
        },
        "excludedViolenceRisk": {
          "enum": [
            "VIOLENCE_UNSPECIFIED",
            "VIOLENCE_HR",
            "VIOLENCE_HMR"
          ],
          "type": "string",
          "description": "Brand Safety - **Violence**.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any violence options.",
            "Violence - Exclude High Risk.",
            "Violence - Exclude High and Moderate Risk."
          ]
        },
        "excludedDrugsRisk": {
          "enum": [
            "DRUGS_UNSPECIFIED",
            "DRUGS_HR",
            "DRUGS_HMR"
          ],
          "description": "Brand Safety - **Drugs**.",
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any drugs options.",
            "Drugs - Exclude High Risk.",
            "Drugs - Exclude High and Moderate Risk."
          ]
        },
        "excludedGamblingRisk": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any gambling options.",
            "Gambling - Exclude High Risk.",
            "Gambling - Exclude High and Moderate Risk."
          ],
          "type": "string",
          "enum": [
            "GAMBLING_UNSPECIFIED",
            "GAMBLING_HR",
            "GAMBLING_HMR"
          ],
          "description": "Brand Safety - **Gambling**."
        }
      },
      "id": "IntegralAdScience"
    },
    "BulkListAssignedTargetingOptionsResponse": {
      "id": "BulkListAssignedTargetingOptionsResponse",
      "type": "object",
      "properties": {
        "lineItemAssignedTargetingOptions": {
          "type": "array",
          "description": "The list of wrapper objects, each providing an assigned targeting option and the line item it is assigned to. This list will be absent if empty.",
          "items": {
            "$ref": "LineItemAssignedTargetingOption"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent call to `BulkListAssignedTargetingOptions` to fetch the next page of results. This token will be absent if there are no more line_item_assigned_targeting_options to return."
        }
      }
    },
    "ContentGenreTargetingOptionDetails": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the content genre",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ContentGenreTargetingOptionDetails",
      "description": "Represents a targetable content genre. This will be populated in the content_genre_details field when targeting_type is `TARGETING_TYPE_CONTENT_GENRE`."
    },
    "BulkEditAssignedLocationsRequest": {
      "properties": {
        "deletedAssignedLocations": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "The IDs of the assigned locations to delete in bulk, specified as a list of assigned_location_ids."
        },
        "createdAssignedLocations": {
          "items": {
            "$ref": "AssignedLocation"
          },
          "description": "The assigned locations to create in bulk, specified as a list of AssignedLocations.",
          "type": "array"
        }
      },
      "description": "Request message for AssignedLocationService.BulkEditAssignedLocations.",
      "type": "object",
      "id": "BulkEditAssignedLocationsRequest"
    },
    "CombinedAudienceTargetingSetting": {
      "id": "CombinedAudienceTargetingSetting",
      "description": "Details of combined audience targeting setting.",
      "properties": {
        "combinedAudienceId": {
          "format": "int64",
          "description": "Required. Combined audience id of combined audience targeting setting. This id is combined_audience_id.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExchangeReviewStatus": {
      "properties": {
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ],
          "description": "Status of the exchange review.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ]
        },
        "exchange": {
          "description": "The exchange reviewing the creative.",
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX.",
            "Open8.",
            "Triton.",
            "TripleLift.",
            "Taboola.",
            "InMobi.",
            "Smaato.",
            "Aja.",
            "Supership.",
            "Nexstar Digital.",
            "Waze.",
            "SoundCast.",
            "Sharethrough.",
            "Fyber.",
            "Red For Publishers.",
            "Media.net.",
            "Tapjoy.",
            "Vistar.",
            "DAX."
          ],
          "type": "string",
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_SUPERSHIP",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE",
            "EXCHANGE_SOUNDCAST",
            "EXCHANGE_SHARETHROUGH",
            "EXCHANGE_FYBER",
            "EXCHANGE_RED_FOR_PUBLISHERS",
            "EXCHANGE_MEDIANET",
            "EXCHANGE_TAPJOY",
            "EXCHANGE_VISTAR",
            "EXCHANGE_DAX"
          ]
        }
      },
      "description": "Exchange review status for the creative.",
      "type": "object",
      "id": "ExchangeReviewStatus"
    },
    "ListInventorySourcesResponse": {
      "id": "ListInventorySourcesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInventorySources` method to retrieve the next page of results."
        },
        "inventorySources": {
          "items": {
            "$ref": "InventorySource"
          },
          "type": "array",
          "description": "The list of inventory sources. This list will be absent if empty."
        }
      },
      "type": "object"
    },
    "TimeRange": {
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Required. The lower bound of a time range, inclusive.",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Required. The upper bound of a time range, inclusive."
        }
      },
      "type": "object",
      "description": "A time range.",
      "id": "TimeRange"
    },
    "AuthorizedSellerStatusAssignedTargetingOptionDetails": {
      "id": "AuthorizedSellerStatusAssignedTargetingOptionDetails",
      "properties": {
        "authorizedSellerStatus": {
          "readOnly": true,
          "enum": [
            "AUTHORIZED_SELLER_STATUS_UNSPECIFIED",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS"
          ],
          "enumDescriptions": [
            "Default value when authorized seller status is not specified in this version. This enum is a placeholder for default value and does not represent a real authorized seller status option.",
            "Only authorized sellers that directly own the inventory being monetized, as indicated by a DIRECT declaration in the ads.txt file.",
            "All authorized sellers, including publishers that have not posted an ads.txt file. Display & Video 360 automatically disallows unauthorized sellers."
          ],
          "type": "string",
          "description": "Output only. The authorized seller status to target."
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.",
          "type": "string"
        }
      },
      "description": "Represents an assigned authorized seller status. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.",
      "type": "object"
    },
    "Partner": {
      "properties": {
        "partnerId": {
          "description": "Output only. The unique ID of the partner. Assigned by the system.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The timestamp when the partner was last updated. Assigned by the system.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the partner."
        },
        "exchangeConfig": {
          "$ref": "ExchangeConfig",
          "description": "Settings that control which exchanges are enabled for the partner."
        },
        "entityStatus": {
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "readOnly": true,
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "type": "string",
          "description": "Output only. The status of the partner."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the partner. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "adServerConfig": {
          "$ref": "PartnerAdServerConfig",
          "description": "Ad server related settings of the partner."
        },
        "dataAccessConfig": {
          "description": "Settings that control how partner data may be accessed.",
          "$ref": "PartnerDataAccessConfig"
        },
        "generalConfig": {
          "$ref": "PartnerGeneralConfig",
          "description": "General settings of the partner."
        }
      },
      "type": "object",
      "description": "A single partner in Display & Video 360 (DV360).",
      "id": "Partner"
    },
    "ListAdvertisersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAdvertisers` method to retrieve the next page of results."
        },
        "advertisers": {
          "type": "array",
          "items": {
            "$ref": "Advertiser"
          },
          "description": "The list of advertisers. This list will be absent if empty."
        }
      },
      "id": "ListAdvertisersResponse"
    },
    "GenerateDefaultLineItemRequest": {
      "id": "GenerateDefaultLineItemRequest",
      "description": "Request message for LineItemService.GenerateDefaultLineItem.",
      "type": "object",
      "properties": {
        "mobileApp": {
          "description": "The mobile app promoted by the line item. This is applicable only when line_item_type is either `LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL` or `LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL`.",
          "$ref": "MobileApp"
        },
        "displayName": {
          "description": "Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "insertionOrderId": {
          "description": "Required. The unique ID of the insertion order that the line item belongs to.",
          "type": "string",
          "format": "int64"
        },
        "lineItemType": {
          "enum": [
            "LINE_ITEM_TYPE_UNSPECIFIED",
            "LINE_ITEM_TYPE_DISPLAY_DEFAULT",
            "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL",
            "LINE_ITEM_TYPE_VIDEO_DEFAULT",
            "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL",
            "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY",
            "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY",
            "LINE_ITEM_TYPE_AUDIO_DEFAULT",
            "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_ACTION",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIDEO_SEQUENCE",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_AUDIO",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH",
            "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE"
          ],
          "description": "Required. The type of the line item.",
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version. Line items of this type and their targeting cannot be created or updated using the API.",
            "Image, HTML5, native, or rich media ads.",
            "Display ads that drive installs of an app.",
            "Video ads sold on a CPM basis for a variety of environments.",
            "Video ads that drive installs of an app.",
            "Display ads served on mobile app inventory. Line items of this type and their targeting cannot be created or updated using the API.",
            "Video ads served on mobile app inventory. Line items of this type and their targeting cannot be created or updated using the API.",
            "RTB Audio ads sold for a variety of environments.",
            "Over-the-top ads present in OTT insertion orders. This type is only applicable to line items with an insertion order of insertion_order_type `OVER_THE_TOP`.",
            "YouTube video ads that promote conversions. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube video ads (up to 15 seconds) that cannot be skipped. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube video ads that show a story in a particular sequence using a mix of formats. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube audio ads. Line items of this type and their targeting cannot be created or updated using the API.",
            "YouTube video ads that optimize reaching more unique users at lower cost. May include bumper ads, skippable in-stream ads, or a mix of types. Line items of this type and their targeting cannot be created or updated using the API.",
            "Default YouTube video ads. Line items of this type and their targeting cannot be created or updated using the API."
          ]
        }
      }
    },
    "ContentOutstreamPositionAssignedTargetingOptionDetails": {
      "type": "object",
      "id": "ContentOutstreamPositionAssignedTargetingOptionDetails",
      "description": "Assigned content outstream position targeting option details. This will be populated in the content_outstream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.",
      "properties": {
        "contentOutstreamPosition": {
          "enum": [
            "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_OUTSTREAM_POSITION_UNKNOWN",
            "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE",
            "CONTENT_OUTSTREAM_POSITION_IN_BANNER",
            "CONTENT_OUTSTREAM_POSITION_IN_FEED",
            "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"
          ],
          "enumDescriptions": [
            "Content outstream position is not specified in this version. This enum is a place holder for a default value and does not represent a real content outstream position.",
            "The ad position is unknown in the content outstream.",
            "Ads that appear between the paragraphs of your pages.",
            "Ads that display on the top and the sides of a page.",
            "Ads that appear in a scrollable stream of content. A feed is typically editorial (e.g. a list of articles or news) or listings (e.g. a list of products or services).",
            "Ads shown before or between content loads."
          ],
          "type": "string",
          "description": "The content outstream position. Output only in v1. Required in v2."
        },
        "adType": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "AD_TYPE_UNSPECIFIED",
            "AD_TYPE_DISPLAY",
            "AD_TYPE_VIDEO",
            "AD_TYPE_AUDIO"
          ],
          "description": "Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`.",
          "enumDescriptions": [
            "Ad type is not specified or is unknown in this version.",
            "Display creatives, e.g. image and HTML5.",
            "Video creatives, e.g. video ads that play during streaming content in video players.",
            "Audio creatives, e.g. audio ads that play during audio content."
          ]
        }
      }
    },
    "AssignedInventorySource": {
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the assigned inventory source.",
          "type": "string"
        },
        "assignedInventorySourceId": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The unique ID of the assigned inventory source. The ID is only unique within a given inventory source group. It may be reused in other contexts.",
          "type": "string"
        },
        "inventorySourceId": {
          "description": "Required. The ID of the inventory source entity being targeted.",
          "type": "string"
        }
      },
      "description": "An assignment between a targetable inventory source and an inventory source group.",
      "type": "object",
      "id": "AssignedInventorySource"
    },
    "AdvertiserTargetingConfig": {
      "properties": {
        "exemptTvFromViewabilityTargeting": {
          "type": "boolean",
          "description": "Whether or not connected TV devices are exempt from viewability targeting for all video line items under the advertiser."
        }
      },
      "type": "object",
      "id": "AdvertiserTargetingConfig",
      "description": "Targeting settings related to ad serving of an advertiser."
    },
    "GeoRegionSearchTerms": {
      "properties": {
        "geoRegionQuery": {
          "type": "string",
          "description": "The search query for the desired geo region. The query can be a prefix, e.g. \"New Yor\", \"Seattle\", \"USA\", etc."
        }
      },
      "type": "object",
      "id": "GeoRegionSearchTerms",
      "description": "Search terms for geo region targeting options."
    },
    "ListAssignedInventorySourcesResponse": {
      "description": "Response message for AssignedInventorySourceService.ListAssignedInventorySources.",
      "properties": {
        "assignedInventorySources": {
          "type": "array",
          "description": "The list of assigned inventory sources. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedInventorySource"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAssignedInventorySources` method to retrieve the next page of results."
        }
      },
      "type": "object",
      "id": "ListAssignedInventorySourcesResponse"
    },
    "BulkListCampaignAssignedTargetingOptionsResponse": {
      "type": "object",
      "description": "Response message for BulkListCampaignAssignedTargetingOptions.",
      "id": "BulkListCampaignAssignedTargetingOptionsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListCampaignAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return."
        },
        "assignedTargetingOptions": {
          "type": "array",
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "description": "The list of assigned targeting options. This list will be absent if empty."
        }
      }
    },
    "CreativeConfig": {
      "properties": {
        "displayCreativeConfig": {
          "$ref": "InventorySourceDisplayCreativeConfig",
          "description": "The configuration for display creatives. Applicable when creative_type is `CREATIVE_TYPE_STANDARD`."
        },
        "videoCreativeConfig": {
          "description": "The configuration for video creatives. Applicable when creative_type is `CREATIVE_TYPE_VIDEO`.",
          "$ref": "InventorySourceVideoCreativeConfig"
        },
        "creativeType": {
          "description": "The type of creative that can be assigned to the inventory source. Only the following types are supported: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`",
          "type": "string",
          "enum": [
            "CREATIVE_TYPE_UNSPECIFIED",
            "CREATIVE_TYPE_STANDARD",
            "CREATIVE_TYPE_EXPANDABLE",
            "CREATIVE_TYPE_VIDEO",
            "CREATIVE_TYPE_NATIVE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_SITE_SQUARE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL",
            "CREATIVE_TYPE_LIGHTBOX",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE",
            "CREATIVE_TYPE_AUDIO",
            "CREATIVE_TYPE_PUBLISHER_HOSTED",
            "CREATIVE_TYPE_NATIVE_VIDEO",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO"
          ],
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Standard display creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Expandable creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`",
            "Video creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Native creative rendered by publishers with assets from advertiser. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile creative (banner). Create and update methods are **not** supported for this creative type.",
            "Square native creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Interstitial creative including both display and video. Create and update methods are **not** supported for this creative type.",
            "Responsive and expandable Lightbox creative. Create and update methods are **not** supported for this creative type.",
            "Native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Square native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Audio creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Publisher hosted creative. Create and update methods are **not** supported for this creative type.",
            "Native video creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile video creative. Create and update methods are **not** supported for this creative type."
          ]
        }
      },
      "type": "object",
      "description": "Creative requirements configuration for the inventory source.",
      "id": "CreativeConfig"
    },
    "ListNegativeKeywordsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywords` method to retrieve the next page of results."
        },
        "negativeKeywords": {
          "type": "array",
          "description": "The list of negative keywords. This list will be absent if empty.",
          "items": {
            "$ref": "NegativeKeyword"
          }
        }
      },
      "description": "Response message for NegativeKeywordService.ListNegativeKeywords.",
      "type": "object",
      "id": "ListNegativeKeywordsResponse"
    },
    "InventorySourceDisplayCreativeConfig": {
      "type": "object",
      "id": "InventorySourceDisplayCreativeConfig",
      "description": "The configuration for display creatives.",
      "properties": {
        "creativeSize": {
          "description": "The size requirements for display creatives that can be assigned to the inventory source.",
          "$ref": "Dimensions"
        }
      }
    },
    "EditInventorySourceReadWriteAccessorsRequest": {
      "id": "EditInventorySourceReadWriteAccessorsRequest",
      "properties": {
        "partnerId": {
          "description": "Required. The partner context by which the accessors change is being made.",
          "format": "int64",
          "type": "string"
        },
        "assignPartner": {
          "type": "boolean",
          "description": "Set the partner context as read/write accessor of the inventory source. This will remove all other current read/write advertiser accessors."
        },
        "advertisersUpdate": {
          "description": "The advertisers to add or remove from the list of advertisers that have read/write access to the inventory source. This change will remove an existing partner read/write accessor.",
          "$ref": "EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate"
        }
      },
      "type": "object",
      "description": "Request message for InventorySourceService.EditInventorySourceReadWriteAccessors."
    },
    "ContactInfo": {
      "id": "ContactInfo",
      "description": "Contact information defining a Customer Match audience member.",
      "properties": {
        "hashedFirstName": {
          "description": "SHA256 hashed first name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_last_name * zip_codes",
          "type": "string"
        },
        "hashedLastName": {
          "type": "string",
          "description": "SHA256 hashed last name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_first_name * zip_codes"
        },
        "hashedEmails": {
          "items": {
            "type": "string"
          },
          "description": "A list of SHA256 hashed email of the member. Before hashing, remove all whitespace and make sure the string is all lowercase.",
          "type": "array"
        },
        "countryCode": {
          "description": "Country code of the member. Must also be set with the following fields: * hashed_first_name * hashed_last_name * zip_codes",
          "type": "string"
        },
        "hashedPhoneNumbers": {
          "type": "array",
          "description": "A list of SHA256 hashed phone numbers of the member. Before hashing, all phone numbers must be formatted using the [E.164 format](//en.wikipedia.org/wiki/E.164) and include the country calling code.",
          "items": {
            "type": "string"
          }
        },
        "zipCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of zip codes of the member. Must also be set with the following fields: * country_code * hashed_first_name * hashed_last_name"
        }
      },
      "type": "object"
    },
    "DeleteAssignedTargetingOptionsRequest": {
      "id": "DeleteAssignedTargetingOptionsRequest",
      "description": "A request listing which assigned targeting options of a given targeting type should be deleted.",
      "properties": {
        "assignedTargetingOptionIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. The assigned targeting option IDs to delete.",
          "type": "array"
        },
        "targetingType": {
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges.",
            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
            "Target ads around locations of a business chain within a specific geo region.",
            "Target ads to a specific video content duration.",
            "Target ads to a specific video content stream type.",
            "Target ads to a specific native content position.",
            "Target ads in an Open Measurement enabled inventory.",
            "Target ads to a specific audio content type.",
            "Target ads to a specific content genre."
          ],
          "description": "Required. Identifies the type of this assigned targeting option.",
          "type": "string",
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE",
            "TARGETING_TYPE_POI",
            "TARGETING_TYPE_BUSINESS_CHAIN",
            "TARGETING_TYPE_CONTENT_DURATION",
            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
            "TARGETING_TYPE_OMID",
            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
            "TARGETING_TYPE_CONTENT_GENRE"
          ]
        }
      },
      "type": "object"
    },
    "LanguageTargetingOptionDetails": {
      "type": "object",
      "id": "LanguageTargetingOptionDetails",
      "description": "Represents a targetable language. This will be populated in the language_details field when targeting_type is `TARGETING_TYPE_LANGUAGE`.",
      "properties": {
        "displayName": {
          "readOnly": true,
          "description": "Output only. The display name of the language (e.g., \"French\").",
          "type": "string"
        }
      }
    },
    "ContentOutstreamPositionTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "contentOutstreamPosition": {
          "type": "string",
          "description": "Output only. The content outstream position.",
          "enum": [
            "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_OUTSTREAM_POSITION_UNKNOWN",
            "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE",
            "CONTENT_OUTSTREAM_POSITION_IN_BANNER",
            "CONTENT_OUTSTREAM_POSITION_IN_FEED",
            "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"
          ],
          "enumDescriptions": [
            "Content outstream position is not specified in this version. This enum is a place holder for a default value and does not represent a real content outstream position.",
            "The ad position is unknown in the content outstream.",
            "Ads that appear between the paragraphs of your pages.",
            "Ads that display on the top and the sides of a page.",
            "Ads that appear in a scrollable stream of content. A feed is typically editorial (e.g. a list of articles or news) or listings (e.g. a list of products or services).",
            "Ads shown before or between content loads."
          ],
          "readOnly": true
        }
      },
      "description": "Represents a targetable content outstream position, which could be used by display and video ads. This will be populated in the content_outstream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.",
      "id": "ContentOutstreamPositionTargetingOptionDetails"
    },
    "DoubleVerifyDisplayViewability": {
      "id": "DoubleVerifyDisplayViewability",
      "properties": {
        "iab": {
          "enum": [
            "IAB_VIEWED_RATE_UNSPECIFIED",
            "IAB_VIEWED_RATE_80_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_75_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_70_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_65_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_60_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_55_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_50_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_40_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_30_PERCENT_HIGHER"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any IAB viewed rate options.",
            "Target web and app inventory to maximize IAB viewable rate 80% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 75% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 70% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 65% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 60% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 55% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 50% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 40% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 30% or higher."
          ],
          "type": "string",
          "description": "Target web and app inventory to maximize IAB viewable rate."
        },
        "viewableDuring": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any average view duration options.",
            "Target web and app inventory to maximize 100% viewable duration 5 seconds or more.",
            "Target web and app inventory to maximize 100% viewable duration 10 seconds or more.",
            "Target web and app inventory to maximize 100% viewable duration 15 seconds or more."
          ],
          "type": "string",
          "description": "Target web and app inventory to maximize 100% viewable duration.",
          "enum": [
            "AVERAGE_VIEW_DURATION_UNSPECIFIED",
            "AVERAGE_VIEW_DURATION_5_SEC",
            "AVERAGE_VIEW_DURATION_10_SEC",
            "AVERAGE_VIEW_DURATION_15_SEC"
          ]
        }
      },
      "description": "Details of DoubleVerify display viewability settings.",
      "type": "object"
    },
    "ManualTrigger": {
      "id": "ManualTrigger",
      "description": "A single manual trigger in Display & Video 360.",
      "properties": {
        "triggerId": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The unique ID of the manual trigger.",
          "readOnly": true
        },
        "displayName": {
          "description": "Required. The display name of the manual trigger. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "activationDurationMinutes": {
          "type": "string",
          "description": "Required. The maximum duration of each activation in minutes. Must be between 1 and 360 inclusive. After this duration, the trigger will be automatically deactivated.",
          "format": "int64"
        },
        "advertiserId": {
          "format": "int64",
          "description": "Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to.",
          "type": "string"
        },
        "latestActivationTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp of the trigger's latest activation.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "INACTIVE",
            "ACTIVE"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default value when state is not specified or is unknown in this version.",
            "The trigger is currently inactive and ready to be activated.",
            "The trigger is currently active (activated)."
          ],
          "description": "Output only. The state of the manual trigger. Will be set to the `INACTIVE` state upon creation.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the manual trigger.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VideoPlayerSizeAssignedTargetingOptionDetails": {
      "id": "VideoPlayerSizeAssignedTargetingOptionDetails",
      "description": "Video player size targeting option details. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`. Explicitly targeting all options is not supported. Remove all video player size targeting options to achieve this effect.",
      "type": "object",
      "properties": {
        "videoPlayerSize": {
          "enumDescriptions": [
            "Video player size is not specified in this version. This enum is a place holder for a default value and does not represent a real video player size.",
            "The dimensions of the video player are less than 400×300 (desktop), or up to 20% of screen covered (mobile).",
            "The dimensions of the video player are between 400x300 and 1280x720 pixels (desktop), or 20% to 90% of the screen covered (mobile).",
            "The dimensions of the video player are 1280×720 or greater (desktop), or over 90% of the screen covered (mobile).",
            "The dimensions of the video player are unknown."
          ],
          "enum": [
            "VIDEO_PLAYER_SIZE_UNSPECIFIED",
            "VIDEO_PLAYER_SIZE_SMALL",
            "VIDEO_PLAYER_SIZE_LARGE",
            "VIDEO_PLAYER_SIZE_HD",
            "VIDEO_PLAYER_SIZE_UNKNOWN"
          ],
          "description": "The video player size. Output only in v1. Required in v2.",
          "type": "string"
        }
      }
    },
    "TimerEvent": {
      "description": "Timer event of the creative.",
      "properties": {
        "name": {
          "description": "Required. The name of the timer event.",
          "type": "string"
        },
        "reportingName": {
          "type": "string",
          "description": "Required. The name used to identify this timer event in reports."
        }
      },
      "type": "object",
      "id": "TimerEvent"
    },
    "BulkEditSitesResponse": {
      "properties": {
        "sites": {
          "type": "array",
          "description": "The list of sites that have been successfully created. This list will be absent if empty.",
          "items": {
            "$ref": "Site"
          }
        }
      },
      "description": "Response message for SiteService.BulkEditSites.",
      "id": "BulkEditSitesResponse",
      "type": "object"
    },
    "SubExchangeTargetingOptionDetails": {
      "type": "object",
      "id": "SubExchangeTargetingOptionDetails",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the sub-exchange.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Represents a targetable sub-exchange. This will be populated in the sub_exchange_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`."
    },
    "YoutubeAndPartnersBiddingStrategy": {
      "type": "object",
      "id": "YoutubeAndPartnersBiddingStrategy",
      "description": "Settings that control the bid strategy for YouTube and Partners resources.",
      "properties": {
        "value": {
          "format": "int64",
          "description": "The value used by the bidding strategy. When the bidding strategy is assigned at the line item level, this field is only applicable for the following strategy types: * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA` When the bidding strategy is assigned at the ad group level, this field is only applicable for the following strategy types: * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM` If not using an applicable strategy, the value of this field will be 0.",
          "type": "string"
        },
        "type": {
          "description": "The type of the bidding strategy.",
          "enumDescriptions": [
            "Type is not specified or unknown.",
            "A bidding strategy that pays a configurable amount per video view.",
            "A bidding strategy that pays a configurable amount per impression.",
            "A bidding strategy that automatically optimizes conversions per dollar.",
            "A bidding strategy that pays a configurable amount per impression.",
            "An automated bidding strategy that sets bids to achieve maximum lift.",
            "A bidding strategy that automatically maximizes number of conversions given a daily budget."
          ],
          "type": "string",
          "enum": [
            "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_UNSPECIFIED",
            "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV",
            "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM",
            "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA",
            "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM",
            "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_LIFT",
            "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSIONS"
          ]
        }
      }
    },
    "UniversalAdId": {
      "description": "A creative identifier provided by a registry that is unique across all platforms. This is part of the VAST 4.0 standard.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique creative identifier."
        },
        "registry": {
          "description": "The registry provides unique creative identifiers.",
          "enumDescriptions": [
            "The Universal Ad registry is unspecified or is unknown in this version.",
            "Use a custom provider to provide the Universal Ad ID.",
            "Use Ad-ID to provide the Universal Ad ID.",
            "Use clearcast.co.uk to provide the Universal Ad ID.",
            "Use Display & Video 360 to provide the Universal Ad ID.",
            "Use Campaign Manager 360 to provide the Universal Ad ID."
          ],
          "enum": [
            "UNIVERSAL_AD_REGISTRY_UNSPECIFIED",
            "UNIVERSAL_AD_REGISTRY_OTHER",
            "UNIVERSAL_AD_REGISTRY_AD_ID",
            "UNIVERSAL_AD_REGISTRY_CLEARCAST",
            "UNIVERSAL_AD_REGISTRY_DV360",
            "UNIVERSAL_AD_REGISTRY_CM"
          ],
          "type": "string"
        }
      },
      "id": "UniversalAdId",
      "type": "object"
    },
    "GeoRegionTargetingOptionDetails": {
      "description": "Represents a targetable geographic region. This will be populated in the geo_region_details field when targeting_type is `TARGETING_TYPE_GEO_REGION`.",
      "id": "GeoRegionTargetingOptionDetails",
      "properties": {
        "geoRegionType": {
          "enumDescriptions": [
            "The geographic region type is unknown.",
            "The geographic region type is other.",
            "The geographic region is a country.",
            "The geographic region type is region.",
            "The geographic region is a territory.",
            "The geographic region is a province.",
            "The geographic region is a state.",
            "The geographic region is a prefecture.",
            "The geographic region is a governorate.",
            "The geographic region is a canton.",
            "The geographic region is a union territory.",
            "The geographic region is an autonomous community.",
            "The geographic region is a designated market area (DMA) region.",
            "The geographic region type is metro.",
            "The geographic region is a congressional district.",
            "The geographic region is a county.",
            "The geographic region is a municipality.",
            "The geographic region is a city.",
            "The geographic region targeting type is postal code.",
            "The geographic region targeting type is department.",
            "The geographic region is an airport.",
            "The geographic region is a TV region.",
            "The geographic region is an okrug.",
            "The geographic region is a borough.",
            "The geographic region is a city region.",
            "The geographic region is an arrondissement.",
            "The geographic region is a neighborhood.",
            "The geographic region is a university.",
            "The geographic region is a district."
          ],
          "type": "string",
          "enum": [
            "GEO_REGION_TYPE_UNKNOWN",
            "GEO_REGION_TYPE_OTHER",
            "GEO_REGION_TYPE_COUNTRY",
            "GEO_REGION_TYPE_REGION",
            "GEO_REGION_TYPE_TERRITORY",
            "GEO_REGION_TYPE_PROVINCE",
            "GEO_REGION_TYPE_STATE",
            "GEO_REGION_TYPE_PREFECTURE",
            "GEO_REGION_TYPE_GOVERNORATE",
            "GEO_REGION_TYPE_CANTON",
            "GEO_REGION_TYPE_UNION_TERRITORY",
            "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY",
            "GEO_REGION_TYPE_DMA_REGION",
            "GEO_REGION_TYPE_METRO",
            "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT",
            "GEO_REGION_TYPE_COUNTY",
            "GEO_REGION_TYPE_MUNICIPALITY",
            "GEO_REGION_TYPE_CITY",
            "GEO_REGION_TYPE_POSTAL_CODE",
            "GEO_REGION_TYPE_DEPARTMENT",
            "GEO_REGION_TYPE_AIRPORT",
            "GEO_REGION_TYPE_TV_REGION",
            "GEO_REGION_TYPE_OKRUG",
            "GEO_REGION_TYPE_BOROUGH",
            "GEO_REGION_TYPE_CITY_REGION",
            "GEO_REGION_TYPE_ARRONDISSEMENT",
            "GEO_REGION_TYPE_NEIGHBORHOOD",
            "GEO_REGION_TYPE_UNIVERSITY",
            "GEO_REGION_TYPE_DISTRICT"
          ],
          "description": "Output only. The type of geographic region targeting.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the geographic region (e.g., \"Ontario, Canada\").",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ListLineItemAssignedTargetingOptionsResponse": {
      "description": "Response message for ListLineItemAssignedTargetingOptions.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListLineItemAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        },
        "assignedTargetingOptions": {
          "type": "array",
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "description": "The list of assigned targeting options. This list will be absent if empty."
        }
      },
      "id": "ListLineItemAssignedTargetingOptionsResponse",
      "type": "object"
    },
    "YoutubeAndPartnersThirdPartyMeasurementSettings": {
      "id": "YoutubeAndPartnersThirdPartyMeasurementSettings",
      "description": "Settings that control what third-party vendors are measuring specific line item metrics.",
      "properties": {
        "reachVendorConfigs": {
          "description": "The third-party vendors measuring reach. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_NIELSEN` * `THIRD_PARTY_VENDOR_COMSCORE` * `THIRD_PARTY_VENDOR_KANTAR`",
          "type": "array",
          "items": {
            "$ref": "ThirdPartyVendorConfig"
          }
        },
        "viewabilityVendorConfigs": {
          "items": {
            "$ref": "ThirdPartyVendorConfig"
          },
          "type": "array",
          "description": "The third-party vendors measuring viewability. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_MOAT` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE` * `THIRD_PARTY_VENDOR_COMSCORE` * `THIRD_PARTY_VENDOR_TELEMETRY` * `THIRD_PARTY_VENDOR_MEETRICS`"
        },
        "brandSafetyVendorConfigs": {
          "type": "array",
          "items": {
            "$ref": "ThirdPartyVendorConfig"
          },
          "description": "The third-party vendors measuring brand safety. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_ZERF` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE`"
        },
        "brandLiftVendorConfigs": {
          "items": {
            "$ref": "ThirdPartyVendorConfig"
          },
          "description": "The third-party vendors measuring brand lift. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_DYNATA` * `THIRD_PARTY_VENDOR_KANTAR`",
          "type": "array"
        }
      },
      "type": "object"
    },
    "DoubleVerifyAppStarRating": {
      "properties": {
        "avoidedStarRating": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any app star rating options.",
            "Official Apps with rating \u003c 1.5 Stars.",
            "Official Apps with rating \u003c 2 Stars.",
            "Official Apps with rating \u003c 2.5 Stars.",
            "Official Apps with rating \u003c 3 Stars.",
            "Official Apps with rating \u003c 3.5 Stars.",
            "Official Apps with rating \u003c 4 Stars.",
            "Official Apps with rating \u003c 4.5 Stars."
          ],
          "type": "string",
          "description": "Avoid bidding on apps with the star ratings.",
          "enum": [
            "APP_STAR_RATE_UNSPECIFIED",
            "APP_STAR_RATE_1_POINT_5_LESS",
            "APP_STAR_RATE_2_LESS",
            "APP_STAR_RATE_2_POINT_5_LESS",
            "APP_STAR_RATE_3_LESS",
            "APP_STAR_RATE_3_POINT_5_LESS",
            "APP_STAR_RATE_4_LESS",
            "APP_STAR_RATE_4_POINT_5_LESS"
          ]
        },
        "avoidInsufficientStarRating": {
          "type": "boolean",
          "description": "Avoid bidding on apps with insufficient star ratings."
        }
      },
      "description": "Details of DoubleVerify star ratings settings.",
      "id": "DoubleVerifyAppStarRating",
      "type": "object"
    },
    "PartnerAdServerConfig": {
      "type": "object",
      "description": "Ad server related settings of a partner.",
      "id": "PartnerAdServerConfig",
      "properties": {
        "measurementConfig": {
          "description": "Measurement settings of a partner.",
          "$ref": "MeasurementConfig"
        }
      }
    },
    "InventorySourceAccessors": {
      "id": "InventorySourceAccessors",
      "properties": {
        "advertisers": {
          "$ref": "InventorySourceAccessorsAdvertiserAccessors",
          "description": "The advertisers with access to the inventory source. All advertisers must belong to the same partner."
        },
        "partner": {
          "$ref": "InventorySourceAccessorsPartnerAccessor",
          "description": "The partner with access to the inventory source."
        }
      },
      "type": "object",
      "description": "The partner or advertisers with access to the inventory source."
    },
    "ListGuaranteedOrdersResponse": {
      "id": "ListGuaranteedOrdersResponse",
      "properties": {
        "guaranteedOrders": {
          "type": "array",
          "items": {
            "$ref": "GuaranteedOrder"
          },
          "description": "The list of guaranteed orders. This list will be absent if empty."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListGuaranteedOrders` method to retrieve the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthorizedSellerStatusTargetingOptionDetails": {
      "description": "Represents a targetable authorized seller status. This will be populated in the authorized_seller_status_details field when targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.",
      "properties": {
        "authorizedSellerStatus": {
          "readOnly": true,
          "enum": [
            "AUTHORIZED_SELLER_STATUS_UNSPECIFIED",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS"
          ],
          "description": "Output only. The authorized seller status.",
          "type": "string",
          "enumDescriptions": [
            "Default value when authorized seller status is not specified in this version. This enum is a placeholder for default value and does not represent a real authorized seller status option.",
            "Only authorized sellers that directly own the inventory being monetized, as indicated by a DIRECT declaration in the ads.txt file.",
            "All authorized sellers, including publishers that have not posted an ads.txt file. Display & Video 360 automatically disallows unauthorized sellers."
          ]
        }
      },
      "type": "object",
      "id": "AuthorizedSellerStatusTargetingOptionDetails"
    },
    "DeviceTypeAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "youtubeAndPartnersBidMultiplier": {
          "type": "number",
          "description": "Output only. Bid multiplier allows you to show your ads more or less frequently based on the device type. It will apply a multiplier on the original bid price. When this field is 0, it indicates this field is not applicable instead of multiplying 0 on the original bid price. For example, if the bid price without multiplier is $10.0 and the multiplier is 1.5 for Tablet, the resulting bid price for Tablet will be $15.0. Only applicable to YouTube and Partners line items.",
          "readOnly": true,
          "format": "double"
        },
        "deviceType": {
          "type": "string",
          "enumDescriptions": [
            "Default value when device type is not specified in this version. This enum is a placeholder for default value and does not represent a real device type option.",
            "The device type is computer.",
            "The device type is connected TV.",
            "The device type is smart phone..",
            "The device type is tablet."
          ],
          "enum": [
            "DEVICE_TYPE_UNSPECIFIED",
            "DEVICE_TYPE_COMPUTER",
            "DEVICE_TYPE_CONNECTED_TV",
            "DEVICE_TYPE_SMART_PHONE",
            "DEVICE_TYPE_TABLET"
          ],
          "description": "The display name of the device type. Output only in v1. Required in v2."
        }
      },
      "description": "Targeting details for device type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`.",
      "id": "DeviceTypeAssignedTargetingOptionDetails"
    },
    "ListNegativeKeywordListsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywordLists` method to retrieve the next page of results.",
          "type": "string"
        },
        "negativeKeywordLists": {
          "description": "The list of negative keyword lists. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "NegativeKeywordList"
          }
        }
      },
      "type": "object",
      "id": "ListNegativeKeywordListsResponse",
      "description": "Response message for NegativeKeywordListService.ListNegativeKeywordLists."
    },
    "BulkUpdateLineItemsRequest": {
      "type": "object",
      "id": "BulkUpdateLineItemsRequest",
      "properties": {
        "lineItemIds": {
          "type": "array",
          "description": "Required. IDs of line items to update.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "targetLineItem": {
          "description": "Required. A line item object containing the fields to be updated and the new values to assign to all line items specified in line_item_ids.\"",
          "$ref": "LineItem"
        },
        "updateMask": {
          "description": "Required. A field mask identifying which fields to update. Only the following fields are currently supported: * entityStatus",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "description": "Request message for LineItemService.BulkUpdateLineItems."
    },
    "FirstAndThirdPartyAudience": {
      "description": "Describes a first or third party audience list used for targeting. First party audiences are created via usage of client data. Third party audiences are provided by Third Party data providers and can only be licensed to customers.",
      "type": "object",
      "properties": {
        "membershipDurationDays": {
          "format": "int64",
          "type": "string",
          "description": "The duration in days that an entry remains in the audience after the qualifying event. If the audience has no expiration, set the value of this field to 10000. Otherwise, the set value must be greater than 0 and less than or equal to 540. Only applicable to first party audiences. This field is required if one of the following audience_type is used: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the first and third party audience."
        },
        "firstAndThirdPartyAudienceType": {
          "enum": [
            "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_UNSPECIFIED",
            "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_FIRST_PARTY",
            "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_THIRD_PARTY"
          ],
          "description": "Whether the audience is a first or third party audience.",
          "type": "string",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "Audience that is created via usage of client data.",
            "Audience that is provided by Third Party data providers."
          ]
        },
        "firstAndThirdPartyAudienceId": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The unique ID of the first and third party audience. Assigned by the system.",
          "readOnly": true
        },
        "youtubeAudienceSize": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. The estimated audience size for YouTube network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request."
        },
        "displayMobileAppAudienceSize": {
          "format": "int64",
          "description": "Output only. The estimated mobile app audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The user-provided description of the audience. Only applicable to first party audiences.",
          "type": "string"
        },
        "gmailAudienceSize": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The estimated audience size for Gmail network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "readOnly": true
        },
        "mobileDeviceIdList": {
          "description": "Input only. A list of mobile device IDs to define the initial audience members. Only applicable to audience_type `CUSTOMER_MATCH_DEVICE_ID`",
          "$ref": "MobileDeviceIdList"
        },
        "audienceType": {
          "enum": [
            "AUDIENCE_TYPE_UNSPECIFIED",
            "CUSTOMER_MATCH_CONTACT_INFO",
            "CUSTOMER_MATCH_DEVICE_ID",
            "CUSTOMER_MATCH_USER_ID",
            "ACTIVITY_BASED",
            "FREQUENCY_CAP",
            "TAG_BASED",
            "YOUTUBE_USERS",
            "LICENSED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "Audience was generated through matching customers to known contact information.",
            "Audience was generated through matching customers to known Mobile device IDs.",
            "Audience was generated through matching customers to known User IDs.",
            "Audience was created based on campaign activity.",
            "Audience was created based on excluding the number of impressions they were served.",
            "Audience was created based on custom variables attached to pixel.",
            "Audience was created based on past interactions with videos, YouTube ads, or YouTube channel.",
            "Subtype of third party audience type."
          ],
          "description": "The type of the audience."
        },
        "appId": {
          "type": "string",
          "description": "The app_id matches with the type of the mobile_device_ids being uploaded. Only applicable to audience_type `CUSTOMER_MATCH_DEVICE_ID`"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the first and third party audience."
        },
        "activeDisplayAudienceSize": {
          "type": "string",
          "description": "Output only. The estimated audience size for the Display network in the past month. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request.",
          "format": "int64",
          "readOnly": true
        },
        "displayAudienceSize": {
          "description": "Output only. The estimated audience size for the Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "audienceSource": {
          "description": "Output only. The source of the audience.",
          "type": "string",
          "enum": [
            "AUDIENCE_SOURCE_UNSPECIFIED",
            "DISPLAY_VIDEO_360",
            "CAMPAIGN_MANAGER",
            "AD_MANAGER",
            "SEARCH_ADS_360",
            "YOUTUBE",
            "ADS_DATA_HUB"
          ],
          "enumDescriptions": [
            "Default value when audience source is not specified or is unknown.",
            "Originated from Display & Video 360.",
            "Originated from Campaign Manager 360.",
            "Originated from Google Ad Manager.",
            "Originated from Search Ads 360.",
            "Originated from Youtube.",
            "Originated from Ads Data Hub."
          ],
          "readOnly": true
        },
        "displayDesktopAudienceSize": {
          "readOnly": true,
          "description": "Output only. The estimated desktop audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "type": "string",
          "format": "int64"
        },
        "displayMobileWebAudienceSize": {
          "description": "Output only. The estimated mobile web audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "contactInfoList": {
          "$ref": "ContactInfoList",
          "description": "Input only. A list of contact information to define the initial audience members. Only applicable to audience_type `CUSTOMER_MATCH_CONTACT_INFO`"
        }
      },
      "id": "FirstAndThirdPartyAudience"
    },
    "PoiAssignedTargetingOptionDetails": {
      "id": "PoiAssignedTargetingOptionDetails",
      "type": "object",
      "description": "Details for assigned POI targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_POI`.",
      "properties": {
        "latitude": {
          "description": "Output only. Latitude of the POI rounding to 6th decimal place.",
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "proximityRadiusUnit": {
          "description": "Required. The unit of distance by which the targeting radius is measured.",
          "type": "string",
          "enum": [
            "DISTANCE_UNIT_UNSPECIFIED",
            "DISTANCE_UNIT_MILES",
            "DISTANCE_UNIT_KILOMETERS"
          ],
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Miles.",
            "Kilometers."
          ]
        },
        "displayName": {
          "description": "Output only. The display name of a POI, e.g. \"Times Square\", \"Space Needle\", followed by its full address if available.",
          "type": "string",
          "readOnly": true
        },
        "longitude": {
          "description": "Output only. Longitude of the POI rounding to 6th decimal place.",
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "proximityRadiusAmount": {
          "description": "Required. The radius of the area around the POI that will be targeted. The units of the radius are specified by proximity_radius_unit. Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is `DISTANCE_UNIT_MILES`.",
          "format": "double",
          "type": "number"
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_POI`. Accepted POI targeting option IDs can be retrieved using SearchTargetingOptions. If targeting a specific latitude/longitude coordinate removed from an address or POI name, you can generate the necessary targeting option ID by rounding the desired coordinate values to the 6th decimal place, removing the decimals, and concatenating the string values separated by a semicolon. For example, you can target the latitude/longitude pair of 40.7414691, -74.003387 using the targeting option ID \"40741469;-74003387\".",
          "type": "string"
        }
      }
    },
    "ExchangeConfig": {
      "properties": {
        "enabledExchanges": {
          "type": "array",
          "description": "All enabled exchanges in the partner. Duplicate enabled exchanges will be ignored.",
          "items": {
            "$ref": "ExchangeConfigEnabledExchange"
          }
        }
      },
      "id": "ExchangeConfig",
      "description": "Settings that control which exchanges are enabled for a partner.",
      "type": "object"
    },
    "OmidTargetingOptionDetails": {
      "description": "Represents a targetable Open Measurement enabled inventory type. This will be populated in the omid_details field when targeting_type is `TARGETING_TYPE_OMID`.",
      "id": "OmidTargetingOptionDetails",
      "properties": {
        "omid": {
          "readOnly": true,
          "enum": [
            "OMID_UNSPECIFIED",
            "OMID_FOR_MOBILE_DISPLAY_ADS"
          ],
          "type": "string",
          "description": "Output only. The type of Open Measurement enabled inventory.",
          "enumDescriptions": [
            "Default value when omid targeting is not specified in this version.",
            "Open Measurement enabled mobile display inventory."
          ]
        }
      },
      "type": "object"
    },
    "EditCustomerMatchMembersResponse": {
      "properties": {
        "firstAndThirdPartyAudienceId": {
          "description": "Required. The ID of the updated Customer Match FirstAndThirdPartyAudience.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "The response of FirstAndThirdPartyAudienceService.EditCustomerMatchMembers.",
      "type": "object",
      "id": "EditCustomerMatchMembersResponse"
    },
    "Adloox": {
      "id": "Adloox",
      "properties": {
        "excludedAdlooxCategories": {
          "description": "Adloox's brand safety settings.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ADLOOX_UNSPECIFIED",
              "ADULT_CONTENT_HARD",
              "ADULT_CONTENT_SOFT",
              "ILLEGAL_CONTENT",
              "BORDERLINE_CONTENT",
              "DISCRIMINATORY_CONTENT",
              "VIOLENT_CONTENT_WEAPONS",
              "LOW_VIEWABILITY_DOMAINS",
              "FRAUD"
            ],
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any Adloox option.",
              "Adult content (hard).",
              "Adult content (soft).",
              "Illegal content.",
              "Borderline content.",
              "Discriminatory content.",
              "Violent content & weapons.",
              "Low viewability domains.",
              "Fraud."
            ]
          }
        }
      },
      "description": "Details of Adloox settings.",
      "type": "object"
    },
    "LineItemBudget": {
      "id": "LineItemBudget",
      "description": "Settings that control how budget is allocated.",
      "properties": {
        "budgetAllocationType": {
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Automatic budget allocation is enabled for the line item.",
            "A fixed max budget amount is allocated for the line item.",
            "No budget limit is applied to the line item."
          ],
          "description": "Required. The type of the budget allocation. `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is only applicable when automatic budget allocation is enabled for the parent insertion order.",
          "enum": [
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED",
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC",
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED",
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED"
          ],
          "type": "string"
        },
        "maxAmount": {
          "type": "string",
          "description": "The maximum budget amount the line item will spend. Must be greater than 0. When budget_allocation_type is: * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is immutable and is set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if budget_unit is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum budget amount to spend, in micros of the advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. - `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of impressions to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this field is not applicable and will be ignored by the system.",
          "format": "int64"
        },
        "budgetUnit": {
          "readOnly": true,
          "description": "Output only. The budget unit specifies whether the budget is currency based or impression based. This value is inherited from the parent insertion order.",
          "type": "string",
          "enum": [
            "BUDGET_UNIT_UNSPECIFIED",
            "BUDGET_UNIT_CURRENCY",
            "BUDGET_UNIT_IMPRESSIONS"
          ],
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Budgeting in currency amounts.",
            "Budgeting in impression amounts."
          ]
        }
      },
      "type": "object"
    },
    "Channel": {
      "id": "Channel",
      "properties": {
        "advertiserId": {
          "type": "string",
          "description": "The ID of the advertiser that owns the channel.",
          "format": "int64"
        },
        "displayName": {
          "description": "Required. The display name of the channel. Must be UTF-8 encoded with a maximum length of 240 bytes.",
          "type": "string"
        },
        "partnerId": {
          "description": "The ID of the partner that owns the channel.",
          "format": "int64",
          "type": "string"
        },
        "positivelyTargetedLineItemCount": {
          "description": "Output only. Number of line items that are directly targeting this channel positively.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "name": {
          "description": "Output only. The resource name of the channel.",
          "readOnly": true,
          "type": "string"
        },
        "negativelyTargetedLineItemCount": {
          "type": "string",
          "format": "int64",
          "description": "Output only. Number of line items that are directly targeting this channel negatively.",
          "readOnly": true
        },
        "channelId": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique ID of the channel. Assigned by the system."
        }
      },
      "description": "A single channel. Channels are custom groups of related websites and apps.",
      "type": "object"
    },
    "CreateAssetRequest": {
      "id": "CreateAssetRequest",
      "description": "A request message for CreateAsset.",
      "properties": {
        "filename": {
          "description": "Required. The filename of the asset, including the file extension. The filename must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProximityLocationListAssignedTargetingOptionDetails": {
      "properties": {
        "proximityRadius": {
          "type": "number",
          "description": "Required. Radius expressed in the distance units set in proximity_radius_unit. This represents the size of the area around a chosen location that will be targeted. Radius should be between 1 and 500 miles or 800 kilometers.",
          "format": "double"
        },
        "proximityLocationListId": {
          "type": "string",
          "description": "Required. ID of the proximity location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_PROXIMITY`.",
          "format": "int64"
        },
        "proximityRadiusUnit": {
          "enumDescriptions": [
            "Default value when distance units is not specified in this version. This enum is a place holder for default value and does not represent a real distance unit.",
            "Radius distance unit in miles.",
            "Radius distance unit in kilometeres"
          ],
          "enum": [
            "PROXIMITY_RADIUS_UNIT_UNSPECIFIED",
            "PROXIMITY_RADIUS_UNIT_MILES",
            "PROXIMITY_RADIUS_UNIT_KILOMETERS"
          ],
          "type": "string",
          "description": "Required. Radius distance units."
        }
      },
      "description": "Targeting details for proximity location list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.",
      "type": "object",
      "id": "ProximityLocationListAssignedTargetingOptionDetails"
    },
    "ViewabilityTargetingOptionDetails": {
      "properties": {
        "viewability": {
          "enum": [
            "VIEWABILITY_UNSPECIFIED",
            "VIEWABILITY_10_PERCENT_OR_MORE",
            "VIEWABILITY_20_PERCENT_OR_MORE",
            "VIEWABILITY_30_PERCENT_OR_MORE",
            "VIEWABILITY_40_PERCENT_OR_MORE",
            "VIEWABILITY_50_PERCENT_OR_MORE",
            "VIEWABILITY_60_PERCENT_OR_MORE",
            "VIEWABILITY_70_PERCENT_OR_MORE",
            "VIEWABILITY_80_PERCENT_OR_MORE",
            "VIEWABILITY_90_PERCENT_OR_MORE"
          ],
          "readOnly": true,
          "description": "Output only. The predicted viewability percentage.",
          "type": "string",
          "enumDescriptions": [
            "Default value when viewability is not specified in this version. This enum is a placeholder for default value and does not represent a real viewability option.",
            "Bid only on impressions that are at least 10% likely to be viewable.",
            "Bid only on impressions that are at least 20% likely to be viewable.",
            "Bid only on impressions that are at least 30% likely to be viewable.",
            "Bid only on impressions that are at least 40% likely to be viewable.",
            "Bid only on impressions that are at least 50% likely to be viewable.",
            "Bid only on impressions that are at least 60% likely to be viewable.",
            "Bid only on impressions that are at least 70% likely to be viewable.",
            "Bid only on impressions that are at least 80% likely to be viewable.",
            "Bid only on impressions that are at least 90% likely to be viewable."
          ]
        }
      },
      "type": "object",
      "description": "Represents a targetable viewability. This will be populated in the viewability_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_VIEWABILITY`.",
      "id": "ViewabilityTargetingOptionDetails"
    },
    "DoubleVerifyVideoViewability": {
      "description": "Details of DoubleVerify video viewability settings.",
      "properties": {
        "videoIab": {
          "enum": [
            "VIDEO_IAB_UNSPECIFIED",
            "IAB_VIEWABILITY_80_PERCENT_HIGHER",
            "IAB_VIEWABILITY_75_PERCENT_HIGHER",
            "IAB_VIEWABILITY_70_PERCENT_HIGHER",
            "IAB_VIEWABILITY_65_PERCENT_HIHGER",
            "IAB_VIEWABILITY_60_PERCENT_HIGHER",
            "IAB_VIEWABILITY_55_PERCENT_HIHGER",
            "IAB_VIEWABILITY_50_PERCENT_HIGHER",
            "IAB_VIEWABILITY_40_PERCENT_HIHGER",
            "IAB_VIEWABILITY_30_PERCENT_HIHGER"
          ],
          "description": "Target web inventory to maximize IAB viewable rate.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any video IAB viewable rate options.",
            "Target web and app inventory to maximize IAB viewable rate 80% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 75% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 70% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 65% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 60% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 55% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 50% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 40% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 30% or higher."
          ],
          "type": "string"
        },
        "videoViewableRate": {
          "enum": [
            "VIDEO_VIEWABLE_RATE_UNSPECIFIED",
            "VIEWED_PERFORMANCE_40_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_35_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_30_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_25_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_20_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_10_PERCENT_HIGHER"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any video viewable rate options.",
            "Target web inventory to maximize fully viewable rate 40% or higher.",
            "Target web inventory to maximize fully viewable rate 35% or higher.",
            "Target web inventory to maximize fully viewable rate 30% or higher.",
            "Target web inventory to maximize fully viewable rate 25% or higher.",
            "Target web inventory to maximize fully viewable rate 20% or higher.",
            "Target web inventory to maximize fully viewable rate 10% or higher."
          ],
          "type": "string",
          "description": "Target web inventory to maximize fully viewable rate."
        },
        "playerImpressionRate": {
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any impressions options.",
            "Sites with 95%+ of impressions.",
            "Sites with 70%+ of impressions.",
            "Sites with 25%+ of impressions.",
            "Sites with 5%+ of impressions."
          ],
          "description": "Target inventory to maximize impressions with 400x300 or greater player size.",
          "enum": [
            "PLAYER_SIZE_400X300_UNSPECIFIED",
            "PLAYER_SIZE_400X300_95",
            "PLAYER_SIZE_400X300_70",
            "PLAYER_SIZE_400X300_25",
            "PLAYER_SIZE_400X300_5"
          ]
        }
      },
      "type": "object",
      "id": "DoubleVerifyVideoViewability"
    },
    "PublisherReviewStatus": {
      "description": "Publisher review status for the creative.",
      "type": "object",
      "id": "PublisherReviewStatus",
      "properties": {
        "publisherName": {
          "type": "string",
          "description": "The publisher reviewing the creative."
        },
        "status": {
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ],
          "type": "string",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ],
          "description": "Status of the publisher review."
        }
      }
    },
    "DayAndTimeAssignedTargetingOptionDetails": {
      "description": "Representation of a segment of time defined on a specific day of the week and with a start and end time. The time represented by `start_hour` must be before the time represented by `end_hour`.",
      "properties": {
        "dayOfWeek": {
          "description": "Required. The day of the week for this day and time targeting setting.",
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "type": "string"
        },
        "timeZoneResolution": {
          "enum": [
            "TIME_ZONE_RESOLUTION_UNSPECIFIED",
            "TIME_ZONE_RESOLUTION_END_USER",
            "TIME_ZONE_RESOLUTION_ADVERTISER"
          ],
          "type": "string",
          "description": "Required. The mechanism used to determine which timezone to use for this day and time targeting setting.",
          "enumDescriptions": [
            "Time zone resolution is either unspecific or unknown.",
            "Times are resolved in the time zone of the user that saw the ad.",
            "Times are resolved in the time zone of the advertiser that served the ad."
          ]
        },
        "endHour": {
          "format": "int32",
          "description": "Required. The end hour for day and time targeting. Must be between 1 (1 hour after start of day) and 24 (end of day).",
          "type": "integer"
        },
        "startHour": {
          "description": "Required. The start hour for day and time targeting. Must be between 0 (start of day) and 23 (1 hour before end of day).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "DayAndTimeAssignedTargetingOptionDetails"
    },
    "ContentDurationTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "contentDuration": {
          "enumDescriptions": [
            "Content duration is not specified in this version. This enum is a place holder for a default value and does not represent a real content duration.",
            "The content duration is unknown.",
            "Content is 0-1 minute long.",
            "Content is 1-5 minutes long.",
            "Content is 5-15 minutes long.",
            "Content is 15-30 minutes long.",
            "Content is 30-60 minutes long.",
            "Content is over 60 minutes long."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "CONTENT_DURATION_UNSPECIFIED",
            "CONTENT_DURATION_UNKNOWN",
            "CONTENT_DURATION_0_TO_1_MIN",
            "CONTENT_DURATION_1_TO_5_MIN",
            "CONTENT_DURATION_5_TO_15_MIN",
            "CONTENT_DURATION_15_TO_30_MIN",
            "CONTENT_DURATION_30_TO_60_MIN",
            "CONTENT_DURATION_OVER_60_MIN"
          ],
          "description": "Output only. The content duration."
        }
      },
      "id": "ContentDurationTargetingOptionDetails",
      "description": "Represents a targetable content duration. This will be populated in the content_duration_details field when targeting_type is `TARGETING_TYPE_CONTENT_DURATION`."
    },
    "TargetingOption": {
      "id": "TargetingOption",
      "type": "object",
      "properties": {
        "deviceMakeModelDetails": {
          "description": "Device make and model resource details.",
          "$ref": "DeviceMakeModelTargetingOptionDetails"
        },
        "appCategoryDetails": {
          "description": "App category details.",
          "$ref": "AppCategoryTargetingOptionDetails"
        },
        "carrierAndIspDetails": {
          "$ref": "CarrierAndIspTargetingOptionDetails",
          "description": "Carrier and ISP details."
        },
        "poiDetails": {
          "$ref": "PoiTargetingOptionDetails",
          "description": "POI resource details."
        },
        "contentOutstreamPositionDetails": {
          "description": "Content outstream position details.",
          "$ref": "ContentOutstreamPositionTargetingOptionDetails"
        },
        "operatingSystemDetails": {
          "$ref": "OperatingSystemTargetingOptionDetails",
          "description": "Operating system resources details."
        },
        "deviceTypeDetails": {
          "description": "Device type details.",
          "$ref": "DeviceTypeTargetingOptionDetails"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name for this targeting option.",
          "readOnly": true
        },
        "contentGenreDetails": {
          "description": "Content genre resource details.",
          "$ref": "ContentGenreTargetingOptionDetails"
        },
        "digitalContentLabelDetails": {
          "$ref": "DigitalContentLabelTargetingOptionDetails",
          "description": "Digital content label details."
        },
        "categoryDetails": {
          "$ref": "CategoryTargetingOptionDetails",
          "description": "Category resource details."
        },
        "onScreenPositionDetails": {
          "description": "On screen position details.",
          "$ref": "OnScreenPositionTargetingOptionDetails"
        },
        "genderDetails": {
          "description": "Gender details.",
          "$ref": "GenderTargetingOptionDetails"
        },
        "contentStreamTypeDetails": {
          "$ref": "ContentStreamTypeTargetingOptionDetails",
          "description": "Content stream type resource details."
        },
        "audioContentTypeDetails": {
          "description": "Audio content type details.",
          "$ref": "AudioContentTypeTargetingOptionDetails"
        },
        "targetingOptionId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A unique identifier for this targeting option. The tuple {`targeting_type`, `targeting_option_id`} will be unique."
        },
        "viewabilityDetails": {
          "description": "Viewability resource details.",
          "$ref": "ViewabilityTargetingOptionDetails"
        },
        "geoRegionDetails": {
          "description": "Geographic region resource details.",
          "$ref": "GeoRegionTargetingOptionDetails"
        },
        "videoPlayerSizeDetails": {
          "$ref": "VideoPlayerSizeTargetingOptionDetails",
          "description": "Video player size details."
        },
        "authorizedSellerStatusDetails": {
          "description": "Authorized seller status resource details.",
          "$ref": "AuthorizedSellerStatusTargetingOptionDetails"
        },
        "ageRangeDetails": {
          "$ref": "AgeRangeTargetingOptionDetails",
          "description": "Age range details."
        },
        "householdIncomeDetails": {
          "description": "Household income details.",
          "$ref": "HouseholdIncomeTargetingOptionDetails"
        },
        "targetingType": {
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges.",
            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
            "Target ads around locations of a business chain within a specific geo region.",
            "Target ads to a specific video content duration.",
            "Target ads to a specific video content stream type.",
            "Target ads to a specific native content position.",
            "Target ads in an Open Measurement enabled inventory.",
            "Target ads to a specific audio content type.",
            "Target ads to a specific content genre."
          ],
          "readOnly": true,
          "description": "Output only. The type of this targeting option.",
          "type": "string",
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE",
            "TARGETING_TYPE_POI",
            "TARGETING_TYPE_BUSINESS_CHAIN",
            "TARGETING_TYPE_CONTENT_DURATION",
            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
            "TARGETING_TYPE_OMID",
            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
            "TARGETING_TYPE_CONTENT_GENRE"
          ]
        },
        "businessChainDetails": {
          "description": "Business chain resource details.",
          "$ref": "BusinessChainTargetingOptionDetails"
        },
        "contentDurationDetails": {
          "description": "Content duration resource details.",
          "$ref": "ContentDurationTargetingOptionDetails"
        },
        "exchangeDetails": {
          "description": "Exchange details.",
          "$ref": "ExchangeTargetingOptionDetails"
        },
        "subExchangeDetails": {
          "$ref": "SubExchangeTargetingOptionDetails",
          "description": "Sub-exchange details."
        },
        "userRewardedContentDetails": {
          "description": "User rewarded content details.",
          "$ref": "UserRewardedContentTargetingOptionDetails"
        },
        "parentalStatusDetails": {
          "description": "Parental status details.",
          "$ref": "ParentalStatusTargetingOptionDetails"
        },
        "languageDetails": {
          "description": "Language resource details.",
          "$ref": "LanguageTargetingOptionDetails"
        },
        "environmentDetails": {
          "description": "Environment details.",
          "$ref": "EnvironmentTargetingOptionDetails"
        },
        "sensitiveCategoryDetails": {
          "$ref": "SensitiveCategoryTargetingOptionDetails",
          "description": "Sensitive Category details."
        },
        "nativeContentPositionDetails": {
          "description": "Native content position details.",
          "$ref": "NativeContentPositionTargetingOptionDetails"
        },
        "browserDetails": {
          "$ref": "BrowserTargetingOptionDetails",
          "description": "Browser details."
        },
        "contentInstreamPositionDetails": {
          "$ref": "ContentInstreamPositionTargetingOptionDetails",
          "description": "Content instream position details."
        },
        "omidDetails": {
          "$ref": "OmidTargetingOptionDetails",
          "description": "Open Measurement enabled inventory details."
        }
      },
      "description": "Represents a single targeting option, which is a targetable concept in DV360."
    },
    "ViewabilityAssignedTargetingOptionDetails": {
      "properties": {
        "viewability": {
          "type": "string",
          "enumDescriptions": [
            "Default value when viewability is not specified in this version. This enum is a placeholder for default value and does not represent a real viewability option.",
            "Bid only on impressions that are at least 10% likely to be viewable.",
            "Bid only on impressions that are at least 20% likely to be viewable.",
            "Bid only on impressions that are at least 30% likely to be viewable.",
            "Bid only on impressions that are at least 40% likely to be viewable.",
            "Bid only on impressions that are at least 50% likely to be viewable.",
            "Bid only on impressions that are at least 60% likely to be viewable.",
            "Bid only on impressions that are at least 70% likely to be viewable.",
            "Bid only on impressions that are at least 80% likely to be viewable.",
            "Bid only on impressions that are at least 90% likely to be viewable."
          ],
          "description": "The predicted viewability percentage. Output only in v1. Required in v2.",
          "enum": [
            "VIEWABILITY_UNSPECIFIED",
            "VIEWABILITY_10_PERCENT_OR_MORE",
            "VIEWABILITY_20_PERCENT_OR_MORE",
            "VIEWABILITY_30_PERCENT_OR_MORE",
            "VIEWABILITY_40_PERCENT_OR_MORE",
            "VIEWABILITY_50_PERCENT_OR_MORE",
            "VIEWABILITY_60_PERCENT_OR_MORE",
            "VIEWABILITY_70_PERCENT_OR_MORE",
            "VIEWABILITY_80_PERCENT_OR_MORE",
            "VIEWABILITY_90_PERCENT_OR_MORE"
          ]
        }
      },
      "description": "Assigned viewability targeting option details. This will be populated in the viewability_details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_VIEWABILITY`.",
      "type": "object",
      "id": "ViewabilityAssignedTargetingOptionDetails"
    },
    "KeywordAssignedTargetingOptionDetails": {
      "description": "Details for assigned keyword targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_KEYWORD`.",
      "type": "object",
      "id": "KeywordAssignedTargetingOptionDetails",
      "properties": {
        "keyword": {
          "description": "Required. The keyword, for example `car insurance`. Positive keyword cannot be offensive word. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10.",
          "type": "string"
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        }
      }
    },
    "ReplaceSitesResponse": {
      "properties": {
        "sites": {
          "description": "The list of sites in the channel after replacing.",
          "type": "array",
          "items": {
            "$ref": "Site"
          }
        }
      },
      "id": "ReplaceSitesResponse",
      "type": "object",
      "description": "Response message for SiteService.ReplaceSites."
    },
    "CustomListGroup": {
      "type": "object",
      "id": "CustomListGroup",
      "description": "Details of custom list group. All custom list targeting settings are logically ‘OR’ of each other.",
      "properties": {
        "settings": {
          "description": "Required. All custom list targeting settings in custom list group. Repeated settings with same id will be ignored.",
          "type": "array",
          "items": {
            "$ref": "CustomListTargetingSetting"
          }
        }
      }
    },
    "ListInsertionOrderAssignedTargetingOptionsResponse": {
      "description": "Response message for ListInsertionOrderAssignedTargetingOptions.",
      "properties": {
        "assignedTargetingOptions": {
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return."
        }
      },
      "id": "ListInsertionOrderAssignedTargetingOptionsResponse",
      "type": "object"
    },
    "CustomListTargetingSetting": {
      "type": "object",
      "id": "CustomListTargetingSetting",
      "properties": {
        "customListId": {
          "type": "string",
          "description": "Required. Custom id of custom list targeting setting. This id is custom_list_id.",
          "format": "int64"
        }
      },
      "description": "Details of custom list targeting setting."
    },
    "ListTargetingOptionsResponse": {
      "properties": {
        "targetingOptions": {
          "items": {
            "$ref": "TargetingOption"
          },
          "type": "array",
          "description": "The list of targeting options. This list will be absent if empty."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListTargetingOptions` method to retrieve the next page of results."
        }
      },
      "description": "Response message for ListTargetingOptions.",
      "type": "object",
      "id": "ListTargetingOptionsResponse"
    },
    "LookupInvoiceCurrencyResponse": {
      "type": "object",
      "id": "LookupInvoiceCurrencyResponse",
      "properties": {
        "currencyCode": {
          "description": "Currency used by the advertiser in ISO 4217 format.",
          "type": "string"
        }
      }
    },
    "GenderTargetingOptionDetails": {
      "description": "Represents a targetable gender. This will be populated in the gender_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_GENDER`.",
      "properties": {
        "gender": {
          "type": "string",
          "enum": [
            "GENDER_UNSPECIFIED",
            "GENDER_MALE",
            "GENDER_FEMALE",
            "GENDER_UNKNOWN"
          ],
          "readOnly": true,
          "description": "Output only. The gender of an audience.",
          "enumDescriptions": [
            "Default value when gender is not specified in this version. This enum is a place holder for default value and does not represent a real gender option.",
            "The audience gender is male.",
            "The audience gender is female.",
            "The audience gender is unknown."
          ]
        }
      },
      "type": "object",
      "id": "GenderTargetingOptionDetails"
    },
    "InventorySourceGroupAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "inventorySourceGroupId": {
          "format": "int64",
          "type": "string",
          "description": "Required. ID of the inventory source group. Should refer to the inventory_source_group_id field of an InventorySourceGroup resource."
        }
      },
      "id": "InventorySourceGroupAssignedTargetingOptionDetails",
      "description": "Targeting details for inventory source group. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`."
    },
    "DoubleVerifyBrandSafetyCategories": {
      "type": "object",
      "properties": {
        "avoidedMediumSeverityCategories": {
          "items": {
            "enum": [
              "MEDIUM_SEVERITY_UNSPECIFIED",
              "AD_SERVERS",
              "ADULT_CONTENT_SWIMSUIT",
              "ALTERNATIVE_LIFESTYLES",
              "CELEBRITY_GOSSIP",
              "GAMBLING",
              "OCCULT",
              "SEX_EDUCATION",
              "DISASTER_AVIATION",
              "DISASTER_MAN_MADE",
              "DISASTER_NATURAL",
              "DISASTER_TERRORIST_EVENTS",
              "DISASTER_VEHICLE",
              "ALCOHOL",
              "SMOKING",
              "NEGATIVE_NEWS_FINANCIAL",
              "NON_ENGLISH",
              "PARKING_PAGE",
              "UNMODERATED_UGC",
              "INFLAMMATORY_POLITICS_AND_NEWS",
              "NEGATIVE_NEWS_PHARMACEUTICAL"
            ],
            "type": "string",
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any medium severity categories.",
              "Ad Servers.",
              "Adult Content: Swimsuit.",
              "Controversial Subjects: Alternative Lifestyles.",
              "Controversial Subjects: Celebrity Gossip.",
              "Controversial Subjects: Gambling.",
              "Controversial Subjects: Occult.",
              "Controversial Subjects: Sex Education.",
              "Disaster: Aviation.",
              "Disaster: Man-made.",
              "Disaster: Natural.",
              "Disaster: Terrorist Events.",
              "Disaster: Vehicle.",
              "Drugs/Alcohol/Controlled Substances: Alcohol.",
              "Drugs/Alcohol/Controlled Substances: Smoking.",
              "Negative News: Financial.",
              "Non-Std Content: Non-English.",
              "Non-Std Content: Parking Page.",
              "Unmoderated UGC: Forums, Images & Video.",
              "Controversial Subjects: Inflammatory Politics and News.",
              "Negative News: Pharmaceutical."
            ]
          },
          "type": "array",
          "description": "Brand safety medium severity avoidance categories."
        },
        "avoidUnknownBrandSafetyCategory": {
          "description": "Unknown or unrateable.",
          "type": "boolean"
        },
        "avoidedHighSeverityCategories": {
          "description": "Brand safety high severity avoidance categories.",
          "items": {
            "type": "string",
            "enum": [
              "HIGHER_SEVERITY_UNSPECIFIED",
              "ADULT_CONTENT_PORNOGRAPHY",
              "COPYRIGHT_INFRINGEMENT",
              "SUBSTANCE_ABUSE",
              "GRAPHIC_VIOLENCE_WEAPONS",
              "HATE_PROFANITY",
              "CRIMINAL_SKILLS",
              "NUISANCE_INCENTIVIZED_MALWARE_CLUTTER"
            ],
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any high severity categories.",
              "Adult Content: Pornography, Mature Topics & Nudity.",
              "Copyright Infringement.",
              "Drugs/Alcohol/Controlled Substances: Substance Abuse.",
              "Extreme Graphic/Explicit Violence/Weapons.",
              "Hate/Profanity.",
              "Illegal Activities: Criminal Skills.",
              "Incentivized/Malware/Clutter."
            ]
          },
          "type": "array"
        }
      },
      "description": "Settings for brand safety controls.",
      "id": "DoubleVerifyBrandSafetyCategories"
    },
    "CarrierAndIspAssignedTargetingOptionDetails": {
      "id": "CarrierAndIspAssignedTargetingOptionDetails",
      "description": "Details for assigned carrier and ISP targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.",
      "properties": {
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_CARRIER_AND_ISP`."
        },
        "displayName": {
          "readOnly": true,
          "description": "Output only. The display name of the carrier or ISP.",
          "type": "string"
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted. All assigned carrier and ISP targeting options on the same resource must have the same value for this field.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Money": {
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "id": "Money",
      "properties": {
        "nanos": {
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        }
      }
    },
    "InventorySource": {
      "properties": {
        "inventorySourceProductType": {
          "enumDescriptions": [
            "The product type is not specified or is unknown in this version. Modifying inventory sources of this product type are not supported via API.",
            "The inventory source sells inventory through Preferred Deal.",
            "The inventory source sells inventory through Private Auction.",
            "The inventory source sells inventory through Programmatic Guaranteed.",
            "The inventory source sells inventory through Tag Guaranteed.",
            "The inventory source sells inventory through YouTube Reserve.",
            "The inventory source sells inventory through Instant Reserve. Modifying inventory sources of this product type are not supported via API.",
            "The inventory source sells inventory through Guaranteed Package. Modifying inventory sources of this product type are not supported via API.",
            "The inventory source sells inventory through Programmtic TV. Modifying inventory sources of this product type are not supported via API.",
            "The inventory source sells inventory through Auction Package. Modifying inventory sources of this product type are not supported via API."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "INVENTORY_SOURCE_PRODUCT_TYPE_UNSPECIFIED",
            "PREFERRED_DEAL",
            "PRIVATE_AUCTION",
            "PROGRAMMATIC_GUARANTEED",
            "TAG_GUARANTEED",
            "YOUTUBE_RESERVE",
            "INSTANT_RESERVE",
            "GUARANTEED_PACKAGE",
            "PROGRAMMATIC_TV",
            "AUCTION_PACKAGE"
          ],
          "description": "Output only. The product type of the inventory source, denoting the way through which it sells inventory."
        },
        "readWriteAccessors": {
          "$ref": "InventorySourceAccessors",
          "description": "The partner or advertisers that have read/write access to the inventory source. Output only when commitment is `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`, in which case the read/write accessors are inherited from the parent guaranteed order. Required when commitment is `INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED`. If commitment is `INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED` and a partner is set in this field, all advertisers under this partner will automatically have read-only access to the inventory source. These advertisers will not be included in read_advertiser_ids."
        },
        "publisherName": {
          "type": "string",
          "description": "The publisher/seller name of the inventory source."
        },
        "inventorySourceId": {
          "description": "Output only. The unique ID of the inventory source. Assigned by the system.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "rateDetails": {
          "$ref": "RateDetails",
          "description": "Required. The rate details of the inventory source."
        },
        "subSitePropertyId": {
          "type": "string",
          "format": "int64",
          "description": "Immutable. The unique ID of the sub-site property assigned to this inventory source."
        },
        "inventorySourceType": {
          "type": "string",
          "enumDescriptions": [
            "The inventory source type is not specified or is unknown in this version.",
            "Private inventory source.",
            "Auction package."
          ],
          "description": "Denotes the type of the inventory source.",
          "enum": [
            "INVENTORY_SOURCE_TYPE_UNSPECIFIED",
            "INVENTORY_SOURCE_TYPE_PRIVATE",
            "INVENTORY_SOURCE_TYPE_AUCTION_PACKAGE"
          ]
        },
        "readPartnerIds": {
          "readOnly": true,
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "Output only. The IDs of partners with read-only access to the inventory source. All advertisers of partners in this field inherit read-only access to the inventory source."
        },
        "creativeConfigs": {
          "description": "The creative requirements of the inventory source. Not applicable for auction packages.",
          "type": "array",
          "items": {
            "$ref": "CreativeConfig"
          }
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the inventory source was last updated. Assigned by the system."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the inventory source. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "dealId": {
          "description": "The ID in the exchange space that uniquely identifies the inventory source. Must be unique across buyers within each exchange but not necessarily unique across exchanges.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the inventory source.",
          "type": "string"
        },
        "commitment": {
          "description": "Whether the inventory source has a guaranteed or non-guaranteed delivery.",
          "enum": [
            "INVENTORY_SOURCE_COMMITMENT_UNSPECIFIED",
            "INVENTORY_SOURCE_COMMITMENT_GUARANTEED",
            "INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED"
          ],
          "enumDescriptions": [
            "The commitment is not specified or is unknown in this version.",
            "The commitment is guaranteed delivery.",
            "The commitment is non-guaranteed delivery."
          ],
          "type": "string"
        },
        "timeRange": {
          "description": "The time range when this inventory source starts and stops serving.",
          "$ref": "TimeRange"
        },
        "status": {
          "$ref": "InventorySourceStatus",
          "description": "The status settings of the inventory source."
        },
        "exchange": {
          "type": "string",
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_SUPERSHIP",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE",
            "EXCHANGE_SOUNDCAST",
            "EXCHANGE_SHARETHROUGH",
            "EXCHANGE_FYBER",
            "EXCHANGE_RED_FOR_PUBLISHERS",
            "EXCHANGE_MEDIANET",
            "EXCHANGE_TAPJOY",
            "EXCHANGE_VISTAR",
            "EXCHANGE_DAX"
          ],
          "description": "The exchange to which the inventory source belongs.",
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX.",
            "Open8.",
            "Triton.",
            "TripleLift.",
            "Taboola.",
            "InMobi.",
            "Smaato.",
            "Aja.",
            "Supership.",
            "Nexstar Digital.",
            "Waze.",
            "SoundCast.",
            "Sharethrough.",
            "Fyber.",
            "Red For Publishers.",
            "Media.net.",
            "Tapjoy.",
            "Vistar.",
            "DAX."
          ]
        },
        "deliveryMethod": {
          "enumDescriptions": [
            "The delivery method is not specified or is unknown in this version.",
            "The delivery method is programmatic.",
            "The delivery method is tag."
          ],
          "description": "The delivery method of the inventory source. * For non-guaranteed inventory sources, the only acceptable value is `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`.",
          "type": "string",
          "enum": [
            "INVENTORY_SOURCE_DELIVERY_METHOD_UNSPECIFIED",
            "INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC",
            "INVENTORY_SOURCE_DELIVERY_METHOD_TAG"
          ]
        },
        "readAdvertiserIds": {
          "description": "Output only. The IDs of advertisers with read-only access to the inventory source.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "readOnly": true
        },
        "guaranteedOrderId": {
          "description": "Immutable. The ID of the guaranteed order that this inventory source belongs to. Only applicable when commitment is `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`.",
          "type": "string"
        }
      },
      "description": "An inventory source.",
      "id": "InventorySource",
      "type": "object"
    },
    "CreateAssignedTargetingOptionsRequest": {
      "id": "CreateAssignedTargetingOptionsRequest",
      "description": "A request listing which assigned targeting options of a given targeting type should be created and added.",
      "properties": {
        "targetingType": {
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges.",
            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
            "Target ads around locations of a business chain within a specific geo region.",
            "Target ads to a specific video content duration.",
            "Target ads to a specific video content stream type.",
            "Target ads to a specific native content position.",
            "Target ads in an Open Measurement enabled inventory.",
            "Target ads to a specific audio content type.",
            "Target ads to a specific content genre."
          ],
          "description": "Required. Identifies the type of this assigned targeting option.",
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE",
            "TARGETING_TYPE_POI",
            "TARGETING_TYPE_BUSINESS_CHAIN",
            "TARGETING_TYPE_CONTENT_DURATION",
            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
            "TARGETING_TYPE_OMID",
            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
            "TARGETING_TYPE_CONTENT_GENRE"
          ],
          "type": "string"
        },
        "assignedTargetingOptions": {
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "description": "Required. The assigned targeting options to create and add.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "SensitiveCategoryAssignedTargetingOptionDetails": {
      "id": "SensitiveCategoryAssignedTargetingOptionDetails",
      "type": "object",
      "description": "Targeting details for sensitive category. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.",
      "properties": {
        "excludedSensitiveCategory": {
          "description": "Required. An enum for the DV360 Sensitive category content classified to be EXCLUDED.",
          "enum": [
            "SENSITIVE_CATEGORY_UNSPECIFIED",
            "SENSITIVE_CATEGORY_ADULT",
            "SENSITIVE_CATEGORY_DEROGATORY",
            "SENSITIVE_CATEGORY_DOWNLOADS_SHARING",
            "SENSITIVE_CATEGORY_WEAPONS",
            "SENSITIVE_CATEGORY_GAMBLING",
            "SENSITIVE_CATEGORY_VIOLENCE",
            "SENSITIVE_CATEGORY_SUGGESTIVE",
            "SENSITIVE_CATEGORY_PROFANITY",
            "SENSITIVE_CATEGORY_ALCOHOL",
            "SENSITIVE_CATEGORY_DRUGS",
            "SENSITIVE_CATEGORY_TOBACCO",
            "SENSITIVE_CATEGORY_POLITICS",
            "SENSITIVE_CATEGORY_RELIGION",
            "SENSITIVE_CATEGORY_TRAGEDY",
            "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS",
            "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES",
            "SENSITIVE_CATEGORY_SHOCKING",
            "SENSITIVE_CATEGORY_EMBEDDED_VIDEO",
            "SENSITIVE_CATEGORY_LIVE_STREAMING_VIDEO"
          ],
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and doesn't specify a DV360 sensitive category.",
            "Adult or pornographic text, image, or video content.",
            "Content that may be construed as biased against individuals, groups, or organizations based on criteria such as race, religion, disability, sex, age, veteran status, sexual orientation, gender identity, or political affiliation. May also indicate discussion of such content, for instance, in an academic or journalistic context.",
            "Content related to audio, video, or software downloads.",
            "Contains content related to personal weapons, including knives, guns, small firearms, and ammunition. Selecting either \"weapons\" or \"sensitive social issues\" will result in selecting both.",
            "Contains content related to betting or wagering in a real-world or online setting.",
            "Content which may be considered graphically violent, gory, gruesome, or shocking, such as street fighting videos, accident photos, descriptions of torture, etc.",
            "Adult content, as well as suggestive content that's not explicitly pornographic. This category includes all pages categorized as adult.",
            "Prominent use of words considered indecent, such as curse words and sexual slang. Pages with only very occasional usage, such as news sites that might include such words in a quotation, are not included.",
            "Contains content related to alcoholic beverages, alcohol brands, recipes, etc.",
            "Contains content related to the recreational use of legal or illegal drugs, as well as to drug paraphernalia or cultivation.",
            "Contains content related to tobacco and tobacco accessories, including lighters, humidors, ashtrays, etc.",
            "Political news and media, including discussions of social, governmental, and public policy.",
            "Content related to religious thought or beliefs.",
            "Content related to death, disasters, accidents, war, etc.",
            "Content related to motor vehicle, aviation or other transportation accidents.",
            "Issues that evoke strong, opposing views and spark debate. These include issues that are controversial in most countries and markets (such as abortion), as well as those that are controversial in specific countries and markets (such as immigration reform in the United States).",
            "Content which may be considered shocking or disturbing, such as violent news stories, stunts, or toilet humor.",
            "YouTube videos embedded on websites outside of YouTube.com. Only applicable to YouTube and Partners line items.",
            "Video of live events streamed over the internet. Only applicable to YouTube and Partners line items."
          ]
        }
      }
    },
    "GuaranteedOrder": {
      "description": "A guaranteed order. Guaranteed orders are parent entity of guaranteed inventory sources. When creating a guaranteed inventory source, a guaranteed order ID must be assigned to the inventory source.",
      "type": "object",
      "id": "GuaranteedOrder",
      "properties": {
        "publisherName": {
          "description": "Required. The publisher name of the guaranteed order. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "readWriteAdvertiserId": {
          "type": "string",
          "format": "int64",
          "description": "The advertiser with read/write access to the guaranteed order. This is also the default advertiser of the guaranteed order."
        },
        "displayName": {
          "description": "Required. The display name of the guaranteed order. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the guaranteed order.",
          "readOnly": true
        },
        "legacyGuaranteedOrderId": {
          "description": "Output only. The legacy ID of the guaranteed order. Assigned by the original exchange. The legacy ID is unique within one exchange, but is not guaranteed to be unique across all guaranteed orders. This ID is used in SDF and UI.",
          "readOnly": true,
          "type": "string"
        },
        "readWritePartnerId": {
          "format": "int64",
          "description": "The partner with read/write access to the guaranteed order.",
          "type": "string"
        },
        "guaranteedOrderId": {
          "type": "string",
          "description": "Output only. The unique identifier of the guaranteed order. The guaranteed order IDs have the format `{exchange}-{legacy_guaranteed_order_id}`.",
          "readOnly": true
        },
        "defaultAdvertiserId": {
          "description": "Output only. The ID of default advertiser of the guaranteed order. The default advertiser is either the read_write_advertiser_id or, if that is not set, the first advertiser listed in read_advertiser_ids. Otherwise, there is no default advertiser.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the guaranteed order was last updated. Assigned by the system.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "exchange": {
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX.",
            "Open8.",
            "Triton.",
            "TripleLift.",
            "Taboola.",
            "InMobi.",
            "Smaato.",
            "Aja.",
            "Supership.",
            "Nexstar Digital.",
            "Waze.",
            "SoundCast.",
            "Sharethrough.",
            "Fyber.",
            "Red For Publishers.",
            "Media.net.",
            "Tapjoy.",
            "Vistar.",
            "DAX."
          ],
          "description": "Required. Immutable. The exchange where the guaranteed order originated.",
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_SUPERSHIP",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE",
            "EXCHANGE_SOUNDCAST",
            "EXCHANGE_SHARETHROUGH",
            "EXCHANGE_FYBER",
            "EXCHANGE_RED_FOR_PUBLISHERS",
            "EXCHANGE_MEDIANET",
            "EXCHANGE_TAPJOY",
            "EXCHANGE_VISTAR",
            "EXCHANGE_DAX"
          ],
          "type": "string"
        },
        "defaultCampaignId": {
          "format": "int64",
          "description": "The ID of the default campaign that is assigned to the guaranteed order. The default campaign must belong to the default advertiser.",
          "type": "string"
        },
        "status": {
          "description": "The status settings of the guaranteed order.",
          "$ref": "GuaranteedOrderStatus"
        },
        "readAdvertiserIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The IDs of advertisers with read access to the guaranteed order. This field must not include the advertiser assigned to read_write_advertiser_id if it is set. All advertisers in this field must belong to read_write_partner_id or the same partner as read_write_advertiser_id.",
          "type": "array"
        },
        "readAccessInherited": {
          "description": "Whether all advertisers of read_write_partner_id have read access to the guaranteed order. Only applicable if read_write_partner_id is set. If True, overrides read_advertiser_ids.",
          "type": "boolean"
        }
      }
    },
    "ListFirstAndThirdPartyAudiencesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListFirstAndThirdPartyAudiences` method to retrieve the next page of results."
        },
        "firstAndThirdPartyAudiences": {
          "description": "The list of first and third party audiences. Audience size properties will not be included. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "FirstAndThirdPartyAudience"
          }
        }
      },
      "id": "ListFirstAndThirdPartyAudiencesResponse"
    },
    "EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate": {
      "type": "object",
      "properties": {
        "removedAdvertisers": {
          "description": "The advertisers to remove.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "addedAdvertisers": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "The advertisers to add."
        }
      },
      "description": "Update to the list of advertisers with read/write access to the inventory source.",
      "id": "EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate"
    },
    "OperatingSystemAssignedTargetingOptionDetails": {
      "type": "object",
      "description": "Assigned operating system targeting option details. This will be populated in the operating_system_details field when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.",
      "id": "OperatingSystemAssignedTargetingOptionDetails",
      "properties": {
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "targetingOptionId": {
          "description": "Required. The targeting option ID populated in targeting_option_id field when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. The display name of the operating system.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CombinedAudienceGroup": {
      "properties": {
        "settings": {
          "items": {
            "$ref": "CombinedAudienceTargetingSetting"
          },
          "type": "array",
          "description": "Required. All combined audience targeting settings in combined audience group. Repeated settings with same id will be ignored. The number of combined audience settings should be no more than five, error will be thrown otherwise."
        }
      },
      "type": "object",
      "id": "CombinedAudienceGroup",
      "description": "Details of combined audience group. All combined audience targeting settings are logically ‘OR’ of each other."
    },
    "AdvertiserAdServerConfig": {
      "properties": {
        "cmHybridConfig": {
          "$ref": "CmHybridConfig",
          "description": "The configuration for advertisers that use both Campaign Manager 360 (CM360) and third-party ad servers."
        },
        "thirdPartyOnlyConfig": {
          "$ref": "ThirdPartyOnlyConfig",
          "description": "The configuration for advertisers that use third-party ad servers only."
        }
      },
      "id": "AdvertiserAdServerConfig",
      "description": "Ad server related settings of an advertiser.",
      "type": "object"
    },
    "BulkEditAssignedInventorySourcesRequest": {
      "properties": {
        "deletedAssignedInventorySources": {
          "type": "array",
          "description": "The IDs of the assigned inventory sources to delete in bulk, specified as a list of assigned_inventory_source_ids.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "createdAssignedInventorySources": {
          "type": "array",
          "items": {
            "$ref": "AssignedInventorySource"
          },
          "description": "The assigned inventory sources to create in bulk, specified as a list of AssignedInventorySources."
        },
        "partnerId": {
          "format": "int64",
          "type": "string",
          "description": "The ID of the partner that owns the inventory source group. Only this partner has write access to these assigned inventory sources."
        },
        "advertiserId": {
          "type": "string",
          "description": "The ID of the advertiser that owns the parent inventory source group. The parent partner does not have access to these assigned inventory sources.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "BulkEditAssignedInventorySourcesRequest",
      "description": "Request message for AssignedInventorySourceService.BulkEdit."
    },
    "InsertionOrderBudgetSegment": {
      "properties": {
        "description": {
          "type": "string",
          "description": "The budget segment description. It can be used to enter Purchase Order information for each budget segment and have that information printed on the invoices. Must be UTF-8 encoded with a length of no more than 80 characters."
        },
        "dateRange": {
          "description": "Required. The start and end date settings of the budget segment. They are resolved relative to the parent advertiser's time zone. * When creating a new budget segment, both `start_date` and `end_date` must be in the future. * An existing budget segment with a `start_date` in the past has a mutable `end_date` but an immutable `start_date`. * `end_date` must be the `start_date` or later, both before the year 2037.",
          "$ref": "DateRange"
        },
        "budgetAmountMicros": {
          "type": "string",
          "description": "Required. The budget amount the insertion order will spend for the given date_range. The amount is in micros. Must be greater than 0. For example, 500000000 represents 500 standard units of the currency.",
          "format": "int64"
        },
        "campaignBudgetId": {
          "description": "The budget_id of the campaign budget that this insertion order budget segment is a part of.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Settings that control the budget of a single budget segment.",
      "id": "InsertionOrderBudgetSegment"
    },
    "CreateSdfDownloadTaskRequest": {
      "properties": {
        "inventorySourceFilter": {
          "$ref": "InventorySourceFilter",
          "description": "Filters on Inventory Sources by their IDs."
        },
        "idFilter": {
          "$ref": "IdFilter",
          "description": "Filters on entities by their entity IDs."
        },
        "parentEntityFilter": {
          "$ref": "ParentEntityFilter",
          "description": "Filters on selected file types. The entities in each file are filtered by a chosen set of filter entities. The filter entities must be the same type as, or a parent type of, the selected file types."
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the advertiser to download SDF for."
        },
        "version": {
          "enumDescriptions": [
            "SDF version value is not specified or is unknown in this version.",
            "SDF version 3.1",
            "SDF version 4",
            "SDF version 4.1",
            "SDF version 4.2",
            "SDF version 5.",
            "SDF version 5.1",
            "SDF version 5.2",
            "SDF version 5.3",
            "SDF version 5.4",
            "SDF version 5.5"
          ],
          "type": "string",
          "enum": [
            "SDF_VERSION_UNSPECIFIED",
            "SDF_VERSION_3_1",
            "SDF_VERSION_4",
            "SDF_VERSION_4_1",
            "SDF_VERSION_4_2",
            "SDF_VERSION_5",
            "SDF_VERSION_5_1",
            "SDF_VERSION_5_2",
            "SDF_VERSION_5_3",
            "SDF_VERSION_5_4",
            "SDF_VERSION_5_5"
          ],
          "description": "Required. The SDF version of the downloaded file. If set to `SDF_VERSION_UNSPECIFIED`, this will default to the version specified by the advertiser or partner identified by `root_id`. An advertiser inherits its SDF version from its partner unless configured otherwise."
        },
        "partnerId": {
          "format": "int64",
          "type": "string",
          "description": "The ID of the partner to download SDF for."
        }
      },
      "description": "Request message for [SdfDownloadTaskService.CreateSdfDownloadTask].",
      "type": "object",
      "id": "CreateSdfDownloadTaskRequest"
    },
    "ParentalStatusAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "parentalStatus": {
          "enumDescriptions": [
            "Default value when parental status is not specified in this version. This enum is a place holder for default value and does not represent a real parental status option.",
            "The audience is a parent.",
            "The audience is not a parent.",
            "The parental status of the audience is unknown."
          ],
          "type": "string",
          "description": "The parental status of the audience. Output only in v1. Required in v2.",
          "enum": [
            "PARENTAL_STATUS_UNSPECIFIED",
            "PARENTAL_STATUS_PARENT",
            "PARENTAL_STATUS_NOT_A_PARENT",
            "PARENTAL_STATUS_UNKNOWN"
          ]
        }
      },
      "description": "Details for assigned parental status targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`.",
      "id": "ParentalStatusAssignedTargetingOptionDetails"
    },
    "GoogleAudienceTargetingSetting": {
      "description": "Details of Google audience targeting setting.",
      "type": "object",
      "id": "GoogleAudienceTargetingSetting",
      "properties": {
        "googleAudienceId": {
          "description": "Required. Google audience id of the Google audience targeting setting. This id is google_audience_id.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "CampaignGoal": {
      "type": "object",
      "id": "CampaignGoal",
      "description": "Settings that control the goal of a campaign.",
      "properties": {
        "campaignGoalType": {
          "enum": [
            "CAMPAIGN_GOAL_TYPE_UNSPECIFIED",
            "CAMPAIGN_GOAL_TYPE_APP_INSTALL",
            "CAMPAIGN_GOAL_TYPE_BRAND_AWARENESS",
            "CAMPAIGN_GOAL_TYPE_OFFLINE_ACTION",
            "CAMPAIGN_GOAL_TYPE_ONLINE_ACTION"
          ],
          "type": "string",
          "description": "Required. The type of the campaign goal.",
          "enumDescriptions": [
            "Goal value is not specified or unknown in this version.",
            "Drive app installs or engagements.",
            "Raise awareness of a brand or product.",
            "Drive offline or in-store sales.",
            "Drive online action or visits."
          ]
        },
        "performanceGoal": {
          "$ref": "PerformanceGoal",
          "description": "Required. The performance goal of the campaign. Acceptable values for performance_goal_type are: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_OTHER`"
        }
      }
    },
    "ListManualTriggersResponse": {
      "properties": {
        "manualTriggers": {
          "description": "The list of manual triggers. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "ManualTrigger"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListManualTriggers` method to retrieve the next page of results."
        }
      },
      "type": "object",
      "id": "ListManualTriggersResponse"
    },
    "ActivateManualTriggerRequest": {
      "id": "ActivateManualTriggerRequest",
      "properties": {},
      "type": "object",
      "description": "Request message for ManualTriggerService.ActivateManualTrigger."
    },
    "BulkUpdateLineItemsResponse": {
      "id": "BulkUpdateLineItemsResponse",
      "description": "Response message for LineItemService.BulkUpdateLineItems.",
      "properties": {
        "errors": {
          "description": "Errors returned by line items that failed to update.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        },
        "failedLineItemIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "The IDs of line items that failed to update."
        },
        "skippedLineItemIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "The IDs of line items that are skipped for updates. For example, unnecessary mutates that will result in effectively no changes to line items will be skipped and corresponding line item IDs can be tracked here."
        },
        "updatedLineItemIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The IDs of successfully updated line items."
        }
      },
      "type": "object"
    },
    "AppCategoryTargetingOptionDetails": {
      "properties": {
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the app collection."
        }
      },
      "description": "Represents a targetable collection of apps. A collection lets you target dynamic groups of related apps that are maintained by the platform, for example `All Apps/Google Play/Games`. This will be populated in the app_category_details field when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.",
      "id": "AppCategoryTargetingOptionDetails",
      "type": "object"
    },
    "ListChannelsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListChannels` method to retrieve the next page of results."
        },
        "channels": {
          "type": "array",
          "description": "The list of channels. This list will be absent if empty.",
          "items": {
            "$ref": "Channel"
          }
        }
      },
      "type": "object",
      "id": "ListChannelsResponse"
    },
    "ScriptError": {
      "properties": {
        "column": {
          "type": "string",
          "description": "The column number in the script where the error was thrown.",
          "format": "int64"
        },
        "errorCode": {
          "enumDescriptions": [
            "The script error is not specified or is unknown in this version.",
            "The script has a syntax error.",
            "The script uses deprecated syntax.",
            "Internal errors were thrown while processing the script."
          ],
          "description": "The type of error.",
          "type": "string",
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "SYNTAX_ERROR",
            "DEPRECATED_SYNTAX",
            "INTERNAL_ERROR"
          ]
        },
        "line": {
          "type": "string",
          "format": "int64",
          "description": "The line number in the script where the error was thrown."
        },
        "errorMessage": {
          "type": "string",
          "description": "The detailed error message."
        }
      },
      "type": "object",
      "id": "ScriptError",
      "description": "An error message for a custom bidding script."
    },
    "BulkEditNegativeKeywordsRequest": {
      "type": "object",
      "id": "BulkEditNegativeKeywordsRequest",
      "description": "Request message for NegativeKeywordService.BulkEditNegativeKeywords.",
      "properties": {
        "deletedNegativeKeywords": {
          "type": "array",
          "description": "The negative keywords to delete in batch, specified as a list of keyword_values.",
          "items": {
            "type": "string"
          }
        },
        "createdNegativeKeywords": {
          "items": {
            "$ref": "NegativeKeyword"
          },
          "type": "array",
          "description": "The negative keywords to create in batch, specified as a list of NegativeKeywords."
        }
      }
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "Date",
      "properties": {
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ListCustomBiddingScriptsResponse": {
      "properties": {
        "customBiddingScripts": {
          "type": "array",
          "items": {
            "$ref": "CustomBiddingScript"
          },
          "description": "The list of custom bidding scripts. This list will be absent if empty."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCustomBiddingScriptsRequest` method to retrieve the next page of results. If this field is null, it means this is the last page.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListCustomBiddingScriptsResponse"
    },
    "DeviceMakeModelAssignedTargetingOptionDetails": {
      "properties": {
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the device make and model.",
          "readOnly": true
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Assigned device make and model targeting option details. This will be populated in the device_make_model_details field when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.",
      "id": "DeviceMakeModelAssignedTargetingOptionDetails"
    },
    "PoiTargetingOptionDetails": {
      "properties": {
        "longitude": {
          "description": "Output only. Longitude of the POI rounding to 6th decimal place.",
          "type": "number",
          "format": "double",
          "readOnly": true
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Output only. Latitude of the POI rounding to 6th decimal place.",
          "readOnly": true
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The display name of a POI(e.g. \"Times Square\", \"Space Needle\"), followed by its full address if available."
        }
      },
      "type": "object",
      "id": "PoiTargetingOptionDetails",
      "description": "Represents a targetable point of interest(POI). This will be populated in the poi_details field when targeting_type is `TARGETING_TYPE_POI`."
    },
    "MobileApp": {
      "type": "object",
      "id": "MobileApp",
      "description": "A mobile app promoted by a mobile app install line item.",
      "properties": {
        "publisher": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The app publisher."
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The app name.",
          "readOnly": true
        },
        "platform": {
          "enumDescriptions": [
            "Platform is not specified.",
            "iOS platform.",
            "Android platform."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The app platform.",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "IOS",
            "ANDROID"
          ]
        },
        "appId": {
          "type": "string",
          "description": "Required. The ID of the app provided by the platform store. Android apps are identified by the bundle ID used by Android's Play store, such as `com.google.android.gm`. iOS apps are identified by a nine-digit app ID used by Apple's App store, such as `422689480`."
        }
      }
    },
    "DeviceMakeModelTargetingOptionDetails": {
      "type": "object",
      "description": "Represents a targetable device make and model. This will be populated in the device_make_model_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the device make and model.",
          "readOnly": true
        }
      },
      "id": "DeviceMakeModelTargetingOptionDetails"
    },
    "FrequencyCap": {
      "description": "Settings that control the number of times a user may be shown with the same ad during a given time period.",
      "properties": {
        "maxViews": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of times a user may click-through or fully view an ad during this period until it is no longer served to them. Must be greater than 0. Only applicable to YouTube and Partners resources. Required when unlimited is `false` and max_impressions is not set."
        },
        "maxImpressions": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of times a user may be shown the same ad during this period. Must be greater than 0. Required when unlimited is `false` and max_views is not set."
        },
        "timeUnitCount": {
          "format": "int32",
          "description": "The number of time_unit the frequency cap will last. Required when unlimited is `false`. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 * `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 * `TIME_UNIT_MINUTES` - must be between 1 and 59",
          "type": "integer"
        },
        "timeUnit": {
          "description": "The time unit in which the frequency cap will be applied. Required when unlimited is `false`.",
          "enumDescriptions": [
            "Time unit value is not specified or is unknown in this version.",
            "The frequency cap will be applied to the whole life time of the line item.",
            "The frequency cap will be applied to a number of months.",
            "The frequency cap will be applied to a number of weeks.",
            "The frequency cap will be applied to a number of days.",
            "The frequency cap will be applied to a number of hours.",
            "The frequency cap will be applied to a number of minutes."
          ],
          "type": "string",
          "enum": [
            "TIME_UNIT_UNSPECIFIED",
            "TIME_UNIT_LIFETIME",
            "TIME_UNIT_MONTHS",
            "TIME_UNIT_WEEKS",
            "TIME_UNIT_DAYS",
            "TIME_UNIT_HOURS",
            "TIME_UNIT_MINUTES"
          ]
        },
        "unlimited": {
          "type": "boolean",
          "description": "Whether unlimited frequency capping is applied. When this field is set to `true`, the remaining frequency cap fields are not applicable."
        }
      },
      "type": "object",
      "id": "FrequencyCap"
    },
    "SearchTargetingOptionsRequest": {
      "type": "object",
      "description": "Request message for SearchTargetingOptions.",
      "properties": {
        "businessChainSearchTerms": {
          "description": "Search terms for Business Chain targeting options. Can only be used when targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`.",
          "$ref": "BusinessChainSearchTerms"
        },
        "pageToken": {
          "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `SearchTargetingOptions` method. If not specified, the first page of results will be returned.",
          "type": "string"
        },
        "poiSearchTerms": {
          "description": "Search terms for POI targeting options. Can only be used when targeting_type is `TARGETING_TYPE_POI`.",
          "$ref": "PoiSearchTerms"
        },
        "geoRegionSearchTerms": {
          "description": "Search terms for geo region targeting options. Can only be used when targeting_type is `TARGETING_TYPE_GEO_REGION`.",
          "$ref": "GeoRegionSearchTerms"
        },
        "pageSize": {
          "format": "int32",
          "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
          "type": "integer"
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "Required. The Advertiser this request is being made in the context of."
        }
      },
      "id": "SearchTargetingOptionsRequest"
    },
    "Creative": {
      "type": "object",
      "properties": {
        "jsTrackerUrl": {
          "type": "string",
          "description": "JavaScript measurement URL from supported third-party verification providers (ComScore, DoubleVerify, IAS, Moat). HTML script tags are not supported. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the creative was last updated, either by the user or system (e.g. creative review). Assigned by the system.",
          "format": "google-datetime"
        },
        "creativeAttributes": {
          "items": {
            "enumDescriptions": [
              "The creative attribute is not specified or is unknown in this version.",
              "The creative is a VAST creative.",
              "The creative is a linear VPAID creative.",
              "The creative is a non-linear VPAID creative."
            ],
            "type": "string",
            "enum": [
              "CREATIVE_ATTRIBUTE_UNSPECIFIED",
              "CREATIVE_ATTRIBUTE_VAST",
              "CREATIVE_ATTRIBUTE_VPAID_LINEAR",
              "CREATIVE_ATTRIBUTE_VPAID_NON_LINEAR"
            ]
          },
          "description": "Output only. A list of attributes of the creative that is generated by the system.",
          "readOnly": true,
          "type": "array"
        },
        "vastTagUrl": {
          "description": "Optional. The URL of the VAST tag for a third-party VAST tag creative. Required and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`",
          "type": "string"
        },
        "thirdPartyTag": {
          "type": "string",
          "description": "Optional. The original third-party tag used for the creative. Required and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`"
        },
        "counterEvents": {
          "description": "Counter events for a rich media creative. Counters track the number of times that a user interacts with any part of a rich media creative in a specified way (mouse-overs, mouse-outs, clicks, taps, data loading, keyboard entries, etc.). Any event that can be captured in the creative can be recorded as a counter. Leave it empty or unset for creatives containing image assets only.",
          "items": {
            "$ref": "CounterEvent"
          },
          "type": "array"
        },
        "entityStatus": {
          "type": "string",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "description": "Required. Controls whether or not the creative can serve. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED` * `ENTITY_STATUS_PAUSED`"
        },
        "timerEvents": {
          "type": "array",
          "description": "Timer custom events for a rich media creative. Timers track the time during which a user views and interacts with a specified part of a rich media creative. A creative can have multiple timer events, each timed independently. Leave it empty or unset for creatives containing image assets only.",
          "items": {
            "$ref": "TimerEvent"
          }
        },
        "oggAudio": {
          "type": "boolean",
          "description": "Output only. Indicates the third-party audio creative supports OGG. Output only and only valid for third-party audio creatives. Third-party audio creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO`",
          "readOnly": true
        },
        "trackerUrls": {
          "items": {
            "type": "string"
          },
          "description": "Tracking URLs for analytics providers or third-party ad technology vendors. The URLs must start with https (except on inventory that doesn't require SSL compliance). If using macros in your URL, use only macros supported by Display & Video 360. Standard URLs only, no IMG or SCRIPT tags. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
          "type": "array"
        },
        "html5Video": {
          "readOnly": true,
          "description": "Output only. Indicates the third-party VAST tag creative requires HTML5 Video support. Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "type": "boolean"
        },
        "requireMraid": {
          "description": "Optional. Indicates that the creative requires MRAID (Mobile Rich Media Ad Interface Definitions system). Set this if the creative relies on mobile gestures for interactivity, such as swiping or tapping. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`",
          "type": "boolean"
        },
        "mp3Audio": {
          "type": "boolean",
          "description": "Output only. Indicates the third-party audio creative supports MP3. Output only and only valid for third-party audio creatives. Third-party audio creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO`",
          "readOnly": true
        },
        "creativeId": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. The unique ID of the creative. Assigned by the system."
        },
        "reviewStatus": {
          "readOnly": true,
          "$ref": "ReviewStatusInfo",
          "description": "Output only. The current status of the creative review process."
        },
        "notes": {
          "description": "User notes for this creative. Must be UTF-8 encoded with a length of no more than 20,000 characters.",
          "type": "string"
        },
        "additionalDimensions": {
          "type": "array",
          "items": {
            "$ref": "Dimensions"
          },
          "description": "Additional dimensions. Applicable when creative_type is one of: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_LIGHTBOX` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_PUBLISHER_HOSTED` If this field is specified, width_pixels and height_pixels are both required and must be greater than or equal to 0."
        },
        "skippable": {
          "type": "boolean",
          "description": "Whether the user can choose to skip a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
        },
        "transcodes": {
          "type": "array",
          "items": {
            "$ref": "Transcode"
          },
          "description": "Output only. Audio/Video transcodes. Display & Video 360 transcodes the main asset into a number of alternative versions that use different file formats or have different properties (resolution, audio bit rate, and video bit rate), each designed for specific video players or bandwidths. These transcodes give a publisher's system more options to choose from for each impression on your video and ensures that the appropriate file serves based on the viewer’s connection and screen size. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_AUDIO`",
          "readOnly": true
        },
        "creativeType": {
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Standard display creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Expandable creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`",
            "Video creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Native creative rendered by publishers with assets from advertiser. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile creative (banner). Create and update methods are **not** supported for this creative type.",
            "Square native creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Interstitial creative including both display and video. Create and update methods are **not** supported for this creative type.",
            "Responsive and expandable Lightbox creative. Create and update methods are **not** supported for this creative type.",
            "Native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Square native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Audio creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Publisher hosted creative. Create and update methods are **not** supported for this creative type.",
            "Native video creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile video creative. Create and update methods are **not** supported for this creative type."
          ],
          "enum": [
            "CREATIVE_TYPE_UNSPECIFIED",
            "CREATIVE_TYPE_STANDARD",
            "CREATIVE_TYPE_EXPANDABLE",
            "CREATIVE_TYPE_VIDEO",
            "CREATIVE_TYPE_NATIVE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_SITE_SQUARE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL",
            "CREATIVE_TYPE_LIGHTBOX",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE",
            "CREATIVE_TYPE_AUDIO",
            "CREATIVE_TYPE_PUBLISHER_HOSTED",
            "CREATIVE_TYPE_NATIVE_VIDEO",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO"
          ],
          "type": "string",
          "description": "Required. Immutable. The type of the creative."
        },
        "obaIcon": {
          "$ref": "ObaIcon",
          "description": "Specifies the OBA icon for a video creative. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO`"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the creative was created. Assigned by the system.",
          "readOnly": true
        },
        "thirdPartyUrls": {
          "type": "array",
          "description": "Tracking URLs from third parties to track interactions with a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO`",
          "items": {
            "$ref": "ThirdPartyUrl"
          }
        },
        "assets": {
          "description": "Required. Assets associated to this creative. Assets can be associated to the creative in one of following roles: * `ASSET_ROLE_UNSPECIFIED` * `ASSET_ROLE_MAIN` * `ASSET_ROLE_BACKUP` * `ASSET_ROLE_POLITE_LOAD`",
          "type": "array",
          "items": {
            "$ref": "AssetAssociation"
          }
        },
        "requireHtml5": {
          "type": "boolean",
          "description": "Optional. Indicates that the creative relies on HTML5 to render properly. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`"
        },
        "exitEvents": {
          "items": {
            "$ref": "ExitEvent"
          },
          "type": "array",
          "description": "Required. Exit events for this creative. An exit (also known as a click tag) is any area in your creative that someone can click or tap to open an advertiser's landing page. Every creative must include at least one exit. You can add an exit to your creative in any of the following ways: * Use Google Web Designer's tap area. * Define a JavaScript variable called \"clickTag\". * Use the Enabler (Enabler.exit()) to track exits in rich media formats."
        },
        "mediaDuration": {
          "type": "string",
          "readOnly": true,
          "format": "google-duration",
          "description": "Output only. Media duration of the creative. Applicable when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_PUBLISHER_HOSTED`"
        },
        "expandingDirection": {
          "type": "string",
          "enum": [
            "EXPANDING_DIRECTION_UNSPECIFIED",
            "EXPANDING_DIRECTION_NONE",
            "EXPANDING_DIRECTION_UP",
            "EXPANDING_DIRECTION_DOWN",
            "EXPANDING_DIRECTION_LEFT",
            "EXPANDING_DIRECTION_RIGHT",
            "EXPANDING_DIRECTION_UP_AND_LEFT",
            "EXPANDING_DIRECTION_UP_AND_RIGHT",
            "EXPANDING_DIRECTION_DOWN_AND_LEFT",
            "EXPANDING_DIRECTION_DOWN_AND_RIGHT",
            "EXPANDING_DIRECTION_UP_OR_DOWN",
            "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
            "EXPANDING_DIRECTION_ANY_DIAGONAL"
          ],
          "enumDescriptions": [
            "The expanding direction is not specified.",
            "Does not expand in any direction.",
            "Expands up.",
            "Expands down.",
            "Expands left.",
            "Expands right.",
            "Expands up and to the left side.",
            "Expands up and to the right side.",
            "Expands down and to the left side.",
            "Expands down and to the right side.",
            "Expands either up or down.",
            "Expands to either the left or the right side.",
            "Can expand in any diagonal direction."
          ],
          "description": "Optional. Specifies the expanding direction of the creative. Required and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`"
        },
        "progressOffset": {
          "$ref": "AudioVideoOffset",
          "description": "Amount of time to play the video before counting a view. This field is required when skippable is true. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
        },
        "lineItemIds": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The IDs of the line items this creative is associated with. To associate a creative to a line item, use LineItem.creative_ids instead.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "dimensions": {
          "$ref": "Dimensions",
          "description": "Required. Primary dimensions of the creative. Applicable to all creative types. The value of width_pixels and height_pixels defaults to `0` when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO`"
        },
        "advertiserId": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The unique ID of the advertiser the creative belongs to.",
          "type": "string"
        },
        "companionCreativeIds": {
          "type": "array",
          "description": "The IDs of companion creatives for a video creative. You can assign existing display creatives (with image or HTML5 assets) to serve surrounding the publisher's video player. Companions display around the video player while the video is playing and remain after the video has completed. Creatives contain additional dimensions can not be companion creatives. This field is only supported for following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "cmTrackingAd": {
          "description": "The Campaign Manager 360 tracking ad associated with the creative. Optional for the following creative_type when created by an advertiser that uses both Campaign Manager 360 and third-party ad serving: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` Output only for other cases.",
          "$ref": "CmTrackingAd"
        },
        "vpaid": {
          "description": "Output only. Indicates the third-party VAST tag creative requires VPAID (Digital Video Player-Ad Interface). Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "type": "boolean",
          "readOnly": true
        },
        "cmPlacementId": {
          "type": "string",
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The unique ID of the Campaign Manager 360 placement associated with the creative. This field is only applicable for creatives that are synced from Campaign Manager."
        },
        "requirePingForAttribution": {
          "type": "boolean",
          "description": "Optional. Indicates that the creative will wait for a return ping for attribution. Only valid when using a Campaign Manager 360 tracking ad with a third-party ad server parameter and the ${DC_DBM_TOKEN} macro. Optional and only valid for third-party tag creatives or third-party VAST tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`"
        },
        "integrationCode": {
          "description": "ID information used to link this creative to an external system. Must be UTF-8 encoded with a length of no more than 10,000 characters.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The display name of the creative. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "universalAdId": {
          "description": "Optional. An optional creative identifier provided by a registry that is unique across all platforms. Universal Ad ID is part of the VAST 4.0 standard. It can be modified after the creative is created. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "$ref": "UniversalAdId"
        },
        "skipOffset": {
          "description": "Amount of time to play the video before the skip button appears. This field is required when skippable is true. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "$ref": "AudioVideoOffset"
        },
        "hostingSource": {
          "description": "Required. Indicates where the creative is hosted.",
          "enum": [
            "HOSTING_SOURCE_UNSPECIFIED",
            "HOSTING_SOURCE_CM",
            "HOSTING_SOURCE_THIRD_PARTY",
            "HOSTING_SOURCE_HOSTED",
            "HOSTING_SOURCE_RICH_MEDIA"
          ],
          "type": "string",
          "enumDescriptions": [
            "Hosting source is not specified or is unknown in this version.",
            "A creative synced from Campaign Manager 360. Create and update methods are **not** supported for this hosting type.",
            "A creative hosted by a third-party ad server (3PAS). Create and update methods are supported for this hosting type if the creative_type is one of the following: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`",
            "A creative created in DV360 and hosted by Campaign Manager 360. Create and update methods are supported for this hosting type if the creative_type is one of the following: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`",
            "A rich media creative created in Studio and hosted by Campaign Manager 360. Create and update methods are **not** supported for this hosting type."
          ]
        },
        "name": {
          "description": "Output only. The resource name of the creative.",
          "readOnly": true,
          "type": "string"
        },
        "expandOnHover": {
          "description": "Optional. Indicates the creative will automatically expand on hover. Optional and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`",
          "type": "boolean"
        },
        "appendedTag": {
          "type": "string",
          "description": "Third-party HTML tracking tag to be appended to the creative tag."
        },
        "iasCampaignMonitoring": {
          "description": "Indicates whether Integral Ad Science (IAS) campaign monitoring is enabled. To enable this for the creative, make sure the Advertiser.creative_config.ias_client_id has been set to your IAS client ID.",
          "type": "boolean"
        },
        "dynamic": {
          "type": "boolean",
          "description": "Output only. Indicates whether the creative is dynamic.",
          "readOnly": true
        }
      },
      "id": "Creative",
      "description": "A single Creative."
    },
    "AppAssignedTargetingOptionDetails": {
      "id": "AppAssignedTargetingOptionDetails",
      "type": "object",
      "description": "Details for assigned app targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_APP`.",
      "properties": {
        "appId": {
          "description": "Required. The ID of the app. Android's Play store app uses bundle ID, for example `com.google.android.gm`. Apple's App store app ID uses 9 digit string, for example `422689480`.",
          "type": "string"
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The display name of the app."
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "appPlatform": {
          "type": "string",
          "description": "Indicates the platform of the targeted app. If this field is not specified, the app platform will be assumed to be mobile (i.e., Android or iOS), and we will derive the appropriate mobile platform from the app ID.",
          "enumDescriptions": [
            "Default value when app platform is not specified in this version. This enum is a placeholder for default value and does not represent a real platform option.",
            "The app platform is iOS.",
            "The app platform is Android.",
            "The app platform is Roku.",
            "The app platform is Amazon FireTV.",
            "The app platform is Playstation.",
            "The app platform is Apple TV.",
            "The app platform is Xbox.",
            "The app platform is Samsung TV.",
            "The app platform is Android TV.",
            "The app platform is a CTV platform that is not explicitly listed elsewhere."
          ],
          "enum": [
            "APP_PLATFORM_UNSPECIFIED",
            "APP_PLATFORM_IOS",
            "APP_PLATFORM_ANDROID",
            "APP_PLATFORM_ROKU",
            "APP_PLATFORM_AMAZON_FIRETV",
            "APP_PLATFORM_PLAYSTATION",
            "APP_PLATFORM_APPLE_TV",
            "APP_PLATFORM_XBOX",
            "APP_PLATFORM_SAMSUNG_TV",
            "APP_PLATFORM_ANDROID_TV",
            "APP_PLATFORM_GENERIC_CTV"
          ]
        }
      }
    },
    "ExchangeAssignedTargetingOptionDetails": {
      "description": "Details for assigned exchange targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_EXCHANGE`.",
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string",
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_SUPERSHIP",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE",
            "EXCHANGE_SOUNDCAST",
            "EXCHANGE_SHARETHROUGH",
            "EXCHANGE_FYBER",
            "EXCHANGE_RED_FOR_PUBLISHERS",
            "EXCHANGE_MEDIANET",
            "EXCHANGE_TAPJOY",
            "EXCHANGE_VISTAR",
            "EXCHANGE_DAX"
          ],
          "description": "Required. The enum value for the exchange.",
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX.",
            "Open8.",
            "Triton.",
            "TripleLift.",
            "Taboola.",
            "InMobi.",
            "Smaato.",
            "Aja.",
            "Supership.",
            "Nexstar Digital.",
            "Waze.",
            "SoundCast.",
            "Sharethrough.",
            "Fyber.",
            "Red For Publishers.",
            "Media.net.",
            "Tapjoy.",
            "Vistar.",
            "DAX."
          ]
        }
      },
      "id": "ExchangeAssignedTargetingOptionDetails"
    },
    "BulkEditAdvertiserAssignedTargetingOptionsResponse": {
      "id": "BulkEditAdvertiserAssignedTargetingOptionsResponse",
      "type": "object",
      "properties": {
        "createdAssignedTargetingOptions": {
          "type": "array",
          "description": "The list of assigned targeting options that have been successfully created. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        }
      }
    },
    "CreateAssetResponse": {
      "id": "CreateAssetResponse",
      "properties": {
        "asset": {
          "description": "The uploaded asset, if successful.",
          "$ref": "Asset"
        }
      },
      "description": "A response message for CreateAsset.",
      "type": "object"
    },
    "NegativeKeywordList": {
      "type": "object",
      "id": "NegativeKeywordList",
      "properties": {
        "negativeKeywordListId": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The unique ID of the negative keyword list. Assigned by the system.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the negative keyword list."
        },
        "displayName": {
          "description": "Required. The display name of the negative keyword list. Must be UTF-8 encoded with a maximum size of 255 bytes.",
          "type": "string"
        },
        "advertiserId": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique ID of the advertiser the negative keyword list belongs to."
        },
        "targetedLineItemCount": {
          "description": "Output only. Number of line items that are directly targeting this negative keyword list.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A list of negative keywords used for targeting."
    },
    "FirstAndThirdPartyAudienceGroup": {
      "type": "object",
      "id": "FirstAndThirdPartyAudienceGroup",
      "description": "Details of first and third party audience group. All first and third party audience targeting settings are logically ‘OR’ of each other.",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "$ref": "FirstAndThirdPartyAudienceTargetingSetting"
          },
          "description": "Required. All first and third party audience targeting settings in first and third party audience group. Repeated settings with same id are not allowed."
        }
      }
    },
    "Site": {
      "id": "Site",
      "description": "A single site. Sites are apps or websites belonging to a channel.",
      "type": "object",
      "properties": {
        "urlOrAppId": {
          "type": "string",
          "description": "Required. The app ID or URL of the site. Must be UTF-8 encoded with a maximum length of 240 bytes."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the site."
        }
      }
    },
    "BulkEditAssignedUserRolesRequest": {
      "id": "BulkEditAssignedUserRolesRequest",
      "description": "Request message for BulkEditAssignedUserRoles.",
      "type": "object",
      "properties": {
        "createdAssignedUserRoles": {
          "items": {
            "$ref": "AssignedUserRole"
          },
          "type": "array",
          "description": "The assigned user roles to create in batch, specified as a list of AssignedUserRoles."
        },
        "deletedAssignedUserRoles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The assigned user roles to delete in batch, specified as a list of assigned_user_role_ids. The format of assigned_user_role_id is `entityType-entityid`, for example `partner-123`."
        }
      }
    },
    "GoogleBytestreamMedia": {
      "properties": {
        "resourceName": {
          "description": "Name of the media resource.",
          "type": "string"
        }
      },
      "description": "Media resource.",
      "type": "object",
      "id": "GoogleBytestreamMedia"
    },
    "AssignedTargetingOption": {
      "properties": {
        "negativeKeywordListDetails": {
          "$ref": "NegativeKeywordListAssignedTargetingOptionDetails",
          "description": "Keyword details. This field will be populated when the targeting_type is `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`. A maximum of 4 negative keyword lists can be assigned to a resource."
        },
        "exchangeDetails": {
          "description": "Exchange details. This field will be populated when the targeting_type is `TARGETING_TYPE_EXCHANGE`.",
          "$ref": "ExchangeAssignedTargetingOptionDetails"
        },
        "poiDetails": {
          "$ref": "PoiAssignedTargetingOptionDetails",
          "description": "POI details. This field will be populated when the targeting_type is `TARGETING_TYPE_POI`."
        },
        "nativeContentPositionDetails": {
          "description": "Native content position details. This field will be populated when the targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`.",
          "$ref": "NativeContentPositionAssignedTargetingOptionDetails"
        },
        "onScreenPositionDetails": {
          "description": "On screen position details. This field will be populated when the targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.",
          "$ref": "OnScreenPositionAssignedTargetingOptionDetails"
        },
        "contentOutstreamPositionDetails": {
          "description": "Content outstream position details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.",
          "$ref": "ContentOutstreamPositionAssignedTargetingOptionDetails"
        },
        "authorizedSellerStatusDetails": {
          "$ref": "AuthorizedSellerStatusAssignedTargetingOptionDetails",
          "description": "Authorized seller status details. This field will be populated when the targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`. You can only target one authorized seller status option per resource. If a resource doesn't have an authorized seller status option, all authorized sellers indicated as DIRECT or RESELLER in the ads.txt file are targeted by default."
        },
        "audioContentTypeDetails": {
          "description": "Audio content type details. This field will be populated when the targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`.",
          "$ref": "AudioContentTypeAssignedTargetingOptionDetails"
        },
        "audienceGroupDetails": {
          "$ref": "AudienceGroupAssignedTargetingOptionDetails",
          "description": "Audience targeting details. This field will be populated when the targeting_type is `TARGETING_TYPE_AUDIENCE_GROUP`. You can only target one audience group option per resource."
        },
        "contentInstreamPositionDetails": {
          "$ref": "ContentInstreamPositionAssignedTargetingOptionDetails",
          "description": "Content instream position details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`."
        },
        "contentDurationDetails": {
          "description": "Content duration details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_DURATION`.",
          "$ref": "ContentDurationAssignedTargetingOptionDetails"
        },
        "ageRangeDetails": {
          "description": "Age range details. This field will be populated when the targeting_type is `TARGETING_TYPE_AGE_RANGE`.",
          "$ref": "AgeRangeAssignedTargetingOptionDetails"
        },
        "proximityLocationListDetails": {
          "description": "Proximity location list details. This field will be populated when the targeting_type is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.",
          "$ref": "ProximityLocationListAssignedTargetingOptionDetails"
        },
        "appCategoryDetails": {
          "description": "App category details. This field will be populated when the targeting_type is `TARGETING_TYPE_APP_CATEGORY`.",
          "$ref": "AppCategoryAssignedTargetingOptionDetails"
        },
        "digitalContentLabelExclusionDetails": {
          "description": "Digital content label details. This field will be populated when the targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`. Digital content labels are targeting exclusions. Advertiser level digital content label exclusions, if set, are always applied in serving (even though they aren't visible in resource settings). Resource settings can exclude content labels in addition to advertiser exclusions, but can't override them. A line item won't serve if all the digital content labels are excluded.",
          "$ref": "DigitalContentLabelAssignedTargetingOptionDetails"
        },
        "parentalStatusDetails": {
          "description": "Parental status details. This field will be populated when the targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`.",
          "$ref": "ParentalStatusAssignedTargetingOptionDetails"
        },
        "videoPlayerSizeDetails": {
          "description": "Video player size details. This field will be populated when the targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.",
          "$ref": "VideoPlayerSizeAssignedTargetingOptionDetails"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name for this assigned targeting option.",
          "readOnly": true
        },
        "contentGenreDetails": {
          "description": "Content genre details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_GENRE`.",
          "$ref": "ContentGenreAssignedTargetingOptionDetails"
        },
        "householdIncomeDetails": {
          "$ref": "HouseholdIncomeAssignedTargetingOptionDetails",
          "description": "Household income details. This field will be populated when the targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`."
        },
        "categoryDetails": {
          "description": "Category details. This field will be populated when the targeting_type is `TARGETING_TYPE_CATEGORY`. Targeting a category will also target its subcategories. If a category is excluded from targeting and a subcategory is included, the exclusion will take precedence.",
          "$ref": "CategoryAssignedTargetingOptionDetails"
        },
        "deviceMakeModelDetails": {
          "description": "Device make and model details. This field will be populated when the targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.",
          "$ref": "DeviceMakeModelAssignedTargetingOptionDetails"
        },
        "assignedTargetingOptionId": {
          "readOnly": true,
          "description": "Output only. The unique ID of the assigned targeting option. The ID is only unique within a given resource and targeting type. It may be reused in other contexts.",
          "type": "string"
        },
        "userRewardedContentDetails": {
          "$ref": "UserRewardedContentAssignedTargetingOptionDetails",
          "description": "User rewarded content details. This field will be populated when the targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`."
        },
        "sensitiveCategoryExclusionDetails": {
          "description": "Sensitive category details. This field will be populated when the targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`. Sensitive categories are targeting exclusions. Advertiser level sensitive category exclusions, if set, are always applied in serving (even though they aren't visible in resource settings). Resource settings can exclude sensitive categories in addition to advertiser exclusions, but can't override them.",
          "$ref": "SensitiveCategoryAssignedTargetingOptionDetails"
        },
        "deviceTypeDetails": {
          "$ref": "DeviceTypeAssignedTargetingOptionDetails",
          "description": "Device Type details. This field will be populated when the targeting_type is `TARGETING_TYPE_DEVICE_TYPE`."
        },
        "targetingType": {
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE",
            "TARGETING_TYPE_POI",
            "TARGETING_TYPE_BUSINESS_CHAIN",
            "TARGETING_TYPE_CONTENT_DURATION",
            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
            "TARGETING_TYPE_OMID",
            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
            "TARGETING_TYPE_CONTENT_GENRE"
          ],
          "description": "Output only. Identifies the type of this assigned targeting option.",
          "type": "string",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges.",
            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
            "Target ads around locations of a business chain within a specific geo region.",
            "Target ads to a specific video content duration.",
            "Target ads to a specific video content stream type.",
            "Target ads to a specific native content position.",
            "Target ads in an Open Measurement enabled inventory.",
            "Target ads to a specific audio content type.",
            "Target ads to a specific content genre."
          ],
          "readOnly": true
        },
        "inventorySourceGroupDetails": {
          "description": "Inventory source group details. This field will be populated when the targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`.",
          "$ref": "InventorySourceGroupAssignedTargetingOptionDetails"
        },
        "keywordDetails": {
          "$ref": "KeywordAssignedTargetingOptionDetails",
          "description": "Keyword details. This field will be populated when the targeting_type is `TARGETING_TYPE_KEYWORD`. A maximum of 5000 direct negative keywords can be assigned to a resource. No limit on number of positive keywords that can be assigned."
        },
        "browserDetails": {
          "$ref": "BrowserAssignedTargetingOptionDetails",
          "description": "Browser details. This field will be populated when the targeting_type is `TARGETING_TYPE_BROWSER`."
        },
        "channelDetails": {
          "$ref": "ChannelAssignedTargetingOptionDetails",
          "description": "Channel details. This field will be populated when the targeting_type is `TARGETING_TYPE_CHANNEL`."
        },
        "businessChainDetails": {
          "$ref": "BusinessChainAssignedTargetingOptionDetails",
          "description": "Business chain details. This field will be populated when the targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`."
        },
        "geoRegionDetails": {
          "description": "Geographic region details. This field will be populated when the targeting_type is `TARGETING_TYPE_GEO_REGION`.",
          "$ref": "GeoRegionAssignedTargetingOptionDetails"
        },
        "thirdPartyVerifierDetails": {
          "description": "Third party verification details. This field will be populated when the targeting_type is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`.",
          "$ref": "ThirdPartyVerifierAssignedTargetingOptionDetails"
        },
        "regionalLocationListDetails": {
          "description": "Regional location list details. This field will be populated when the targeting_type is `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.",
          "$ref": "RegionalLocationListAssignedTargetingOptionDetails"
        },
        "omidDetails": {
          "$ref": "OmidAssignedTargetingOptionDetails",
          "description": "Open Measurement enabled inventory details. This field will be populated when the targeting_type is `TARGETING_TYPE_OMID`."
        },
        "operatingSystemDetails": {
          "$ref": "OperatingSystemAssignedTargetingOptionDetails",
          "description": "Operating system details. This field will be populated when the targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`."
        },
        "inventorySourceDetails": {
          "description": "Inventory source details. This field will be populated when the targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE`.",
          "$ref": "InventorySourceAssignedTargetingOptionDetails"
        },
        "environmentDetails": {
          "$ref": "EnvironmentAssignedTargetingOptionDetails",
          "description": "Environment details. This field will be populated when the targeting_type is `TARGETING_TYPE_ENVIRONMENT`."
        },
        "inheritance": {
          "type": "string",
          "enum": [
            "INHERITANCE_UNSPECIFIED",
            "NOT_INHERITED",
            "INHERITED_FROM_PARTNER",
            "INHERITED_FROM_ADVERTISER"
          ],
          "description": "Output only. The inheritance status of the assigned targeting option.",
          "enumDescriptions": [
            "The inheritance is unspecified or unknown.",
            "The assigned targeting option is not inherited from higher level entity.",
            "The assigned targeting option is inherited from partner targeting settings.",
            "The assigned targeting option is inherited from advertiser targeting settings."
          ],
          "readOnly": true
        },
        "carrierAndIspDetails": {
          "description": "Carrier and ISP details. This field will be populated when the targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.",
          "$ref": "CarrierAndIspAssignedTargetingOptionDetails"
        },
        "genderDetails": {
          "description": "Gender details. This field will be populated when the targeting_type is `TARGETING_TYPE_GENDER`.",
          "$ref": "GenderAssignedTargetingOptionDetails"
        },
        "contentStreamTypeDetails": {
          "$ref": "ContentStreamTypeAssignedTargetingOptionDetails",
          "description": "Content duration details. This field will be populated when the TargetingType is `TARGETING_TYPE_CONTENT_STREAM_TYPE`."
        },
        "appDetails": {
          "$ref": "AppAssignedTargetingOptionDetails",
          "description": "App details. This field will be populated when the targeting_type is `TARGETING_TYPE_APP`."
        },
        "dayAndTimeDetails": {
          "description": "Day and time details. This field will be populated when the targeting_type is `TARGETING_TYPE_DAY_AND_TIME`.",
          "$ref": "DayAndTimeAssignedTargetingOptionDetails"
        },
        "subExchangeDetails": {
          "$ref": "SubExchangeAssignedTargetingOptionDetails",
          "description": "Sub-exchange details. This field will be populated when the targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`."
        },
        "languageDetails": {
          "description": "Language details. This field will be populated when the targeting_type is `TARGETING_TYPE_LANGUAGE`.",
          "$ref": "LanguageAssignedTargetingOptionDetails"
        },
        "viewabilityDetails": {
          "description": "Viewability details. This field will be populated when the targeting_type is `TARGETING_TYPE_VIEWABILITY`. You can only target one viewability option per resource.",
          "$ref": "ViewabilityAssignedTargetingOptionDetails"
        },
        "urlDetails": {
          "$ref": "UrlAssignedTargetingOptionDetails",
          "description": "URL details. This field will be populated when the targeting_type is `TARGETING_TYPE_URL`."
        }
      },
      "type": "object",
      "id": "AssignedTargetingOption",
      "description": "A single assigned targeting option, which defines the state of a targeting option for an entity with targeting settings."
    },
    "RegionalLocationListAssignedTargetingOptionDetails": {
      "type": "object",
      "description": "Targeting details for regional location list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.",
      "properties": {
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "regionalLocationListId": {
          "format": "int64",
          "type": "string",
          "description": "Required. ID of the regional location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_REGIONAL`."
        }
      },
      "id": "RegionalLocationListAssignedTargetingOptionDetails"
    },
    "HouseholdIncomeAssignedTargetingOptionDetails": {
      "description": "Details for assigned household income targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.",
      "type": "object",
      "id": "HouseholdIncomeAssignedTargetingOptionDetails",
      "properties": {
        "householdIncome": {
          "type": "string",
          "description": "The household income of the audience. Output only in v1. Required in v2.",
          "enum": [
            "HOUSEHOLD_INCOME_UNSPECIFIED",
            "HOUSEHOLD_INCOME_UNKNOWN",
            "HOUSEHOLD_INCOME_LOWER_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT",
            "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT",
            "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT",
            "HOUSEHOLD_INCOME_TOP_10_PERCENT"
          ],
          "enumDescriptions": [
            "Default value when household income is not specified in this version. This enum is a placeholder for default value and does not represent a real household income option.",
            "The household income of the audience is unknown.",
            "The audience is in the lower 50% of U.S. household incomes.",
            "The audience is in the top 41-50% of U.S. household incomes.",
            "The audience is in the top 31-40% of U.S. household incomes.",
            "The audience is in the top 21-30% of U.S. household incomes.",
            "The audience is in the top 11-20% of U.S. household incomes.",
            "The audience is in the top 10% of U.S. household incomes."
          ]
        }
      }
    },
    "PrismaConfig": {
      "description": "Settings specific to the Mediaocean Prisma tool.",
      "properties": {
        "prismaType": {
          "description": "Required. The Prisma type.",
          "type": "string",
          "enumDescriptions": [
            "Type is not specified or unknown in this version.",
            "Display type.",
            "Search type.",
            "Video type.",
            "Audio type.",
            "Social type.",
            "Fee type."
          ],
          "enum": [
            "PRISMA_TYPE_UNSPECIFIED",
            "PRISMA_TYPE_DISPLAY",
            "PRISMA_TYPE_SEARCH",
            "PRISMA_TYPE_VIDEO",
            "PRISMA_TYPE_AUDIO",
            "PRISMA_TYPE_SOCIAL",
            "PRISMA_TYPE_FEE"
          ]
        },
        "prismaCpeCode": {
          "description": "Required. Relevant client, product, and estimate codes from the Mediaocean Prisma tool.",
          "$ref": "PrismaCpeCode"
        },
        "supplier": {
          "type": "string",
          "description": "Required. The entity allocated this budget (DSP, site, etc.)."
        }
      },
      "type": "object",
      "id": "PrismaConfig"
    },
    "AgeRangeTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "ageRange": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "AGE_RANGE_UNSPECIFIED",
            "AGE_RANGE_18_24",
            "AGE_RANGE_25_34",
            "AGE_RANGE_35_44",
            "AGE_RANGE_45_54",
            "AGE_RANGE_55_64",
            "AGE_RANGE_65_PLUS",
            "AGE_RANGE_UNKNOWN",
            "AGE_RANGE_18_20",
            "AGE_RANGE_21_24",
            "AGE_RANGE_25_29",
            "AGE_RANGE_30_34",
            "AGE_RANGE_35_39",
            "AGE_RANGE_40_44",
            "AGE_RANGE_45_49",
            "AGE_RANGE_50_54",
            "AGE_RANGE_55_59",
            "AGE_RANGE_60_64"
          ],
          "enumDescriptions": [
            "Default value when age range is not specified in this version. This enum is a placeholder for default value and does not represent a real age range option.",
            "The age range of the audience is 18 to 24.",
            "The age range of the audience is 25 to 34.",
            "The age range of the audience is 35 to 44.",
            "The age range of the audience is 45 to 54.",
            "The age range of the audience is 55 to 64.",
            "The age range of the audience is 65 and up.",
            "The age range of the audience is unknown.",
            "The age range of the audience is 18 to 20, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 21 to 24, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 25 to 29, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 30 to 34, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 35 to 39, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 40 to 44, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 45 to 49, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 50 to 54, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 55 to 59, only supported for the AdGroup of YouTube Programmatic Reservation line item.",
            "The age range of the audience is 60 to 64, only supported for the AdGroup of YouTube Programmatic Reservation line item."
          ],
          "description": "Output only. The age range of an audience."
        }
      },
      "id": "AgeRangeTargetingOptionDetails",
      "description": "Represents a targetable age range. This will be populated in the age_range_details field when targeting_type is `TARGETING_TYPE_AGE_RANGE`."
    },
    "ContentInstreamPositionTargetingOptionDetails": {
      "properties": {
        "contentInstreamPosition": {
          "enumDescriptions": [
            "Content instream position is not specified in this version. This enum is a place holder for a default value and does not represent a real in stream ad position.",
            "Ads that play before streaming content.",
            "Ads that play between the beginning and end of streaming content.",
            "Ads that play at the end of streaming content.",
            "Ads instream position is unknown."
          ],
          "enum": [
            "CONTENT_INSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_INSTREAM_POSITION_PRE_ROLL",
            "CONTENT_INSTREAM_POSITION_MID_ROLL",
            "CONTENT_INSTREAM_POSITION_POST_ROLL",
            "CONTENT_INSTREAM_POSITION_UNKNOWN"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The content instream position."
        }
      },
      "description": "Represents a targetable content instream position, which could be used by video and audio ads. This will be populated in the content_instream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.",
      "type": "object",
      "id": "ContentInstreamPositionTargetingOptionDetails"
    },
    "RateDetails": {
      "type": "object",
      "properties": {
        "unitsPurchased": {
          "description": "Required for guaranteed inventory sources. The number of impressions guaranteed by the seller.",
          "type": "string",
          "format": "int64"
        },
        "rate": {
          "$ref": "Money",
          "description": "The rate for the inventory source."
        },
        "minimumSpend": {
          "readOnly": true,
          "$ref": "Money",
          "description": "Output only. The amount that the buyer has committed to spending on the inventory source up front. Only applicable for guaranteed inventory sources."
        },
        "inventorySourceRateType": {
          "type": "string",
          "enumDescriptions": [
            "The rate type is not specified or is unknown in this version.",
            "The rate type is CPM (Fixed).",
            "The rate type is CPM (Floor).",
            "The rate type is Cost per Day.",
            "The rate type is Flat."
          ],
          "description": "The rate type. Acceptable values are `INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED`, `INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR`, and `INVENTORY_SOURCE_RATE_TYPE_CPD`.",
          "enum": [
            "INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED",
            "INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED",
            "INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR",
            "INVENTORY_SOURCE_RATE_TYPE_CPD",
            "INVENTORY_SOURCE_RATE_TYPE_FLAT"
          ]
        }
      },
      "id": "RateDetails",
      "description": "The rate related settings of the inventory source."
    },
    "FloodlightGroup": {
      "properties": {
        "activeViewConfig": {
          "$ref": "ActiveViewVideoViewabilityMetricConfig",
          "description": "The Active View video viewability metric configuration for the Floodlight group."
        },
        "customVariables": {
          "description": "User-defined custom variables owned by the Floodlight group. Use custom Floodlight variables to create reporting data that is tailored to your unique business needs. Custom Floodlight variables use the keys `U1=`, `U2=`, and so on, and can take any values that you choose to pass to them. You can use them to track virtually any type of data that you collect about your customers, such as the genre of movie that a customer purchases, the country to which the item is shipped, and so on. Custom Floodlight variables may not be used to pass any data that could be used or recognized as personally identifiable information (PII). Example: `custom_variables { fields { \"U1\": value { number_value: 123.4 }, \"U2\": value { string_value: \"MyVariable2\" }, \"U3\": value { string_value: \"MyVariable3\" } } }` Acceptable values for keys are \"U1\" through \"U100\", inclusive. String values must be less than 64 characters long, and cannot contain the following characters: `\"\u003c\u003e`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "displayName": {
          "description": "Required. The display name of the Floodlight group.",
          "type": "string"
        },
        "lookbackWindow": {
          "description": "Required. The lookback window for the Floodlight group. Both click_days and impression_days are required. Acceptable values for both are `0` to `90`, inclusive.",
          "$ref": "LookbackWindow"
        },
        "name": {
          "description": "Output only. The resource name of the Floodlight group.",
          "readOnly": true,
          "type": "string"
        },
        "webTagType": {
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "No tag type.",
            "Image tag.",
            "Dynamic tag."
          ],
          "description": "Required. The web tag type enabled for the Floodlight group.",
          "enum": [
            "WEB_TAG_TYPE_UNSPECIFIED",
            "WEB_TAG_TYPE_NONE",
            "WEB_TAG_TYPE_IMAGE",
            "WEB_TAG_TYPE_DYNAMIC"
          ]
        },
        "floodlightGroupId": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique ID of the Floodlight group. Assigned by the system."
        }
      },
      "description": "A single Floodlight group.",
      "id": "FloodlightGroup",
      "type": "object"
    },
    "Asset": {
      "id": "Asset",
      "type": "object",
      "properties": {
        "mediaId": {
          "description": "Media ID of the uploaded asset. This is a unique identifier for the asset. This ID can be passed to other API calls, e.g. CreateCreative to associate the asset with a creative.",
          "type": "string",
          "format": "int64"
        },
        "content": {
          "description": "The asset content. For uploaded assets, the content is the serving path.",
          "type": "string"
        }
      },
      "description": "A single asset."
    },
    "Invoice": {
      "properties": {
        "nonBudgetMicros": {
          "description": "The total amount of costs or adjustments not tied to a particular budget, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.",
          "format": "int64",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currency used in the invoice in ISO 4217 format.",
          "type": "string"
        },
        "paymentsAccountId": {
          "description": "The ID of the payments account the invoice belongs to. Appears on the invoice PDF as `Billing Account Number`.",
          "type": "string"
        },
        "budgetSummaries": {
          "type": "array",
          "description": "The list of summarized information for each budget associated with this invoice. This field will only be set if the invoice detail level of the corresponding billing profile was set to \"Budget level PO\".",
          "items": {
            "$ref": "BudgetSummary"
          }
        },
        "dueDate": {
          "description": "The date when the invoice is due.",
          "$ref": "Date"
        },
        "paymentsProfileId": {
          "type": "string",
          "description": "The ID of the payments profile the invoice belongs to. Appears on the invoice PDF as `Billing ID`."
        },
        "issueDate": {
          "$ref": "Date",
          "description": "The date when the invoice was issued."
        },
        "invoiceType": {
          "description": "The type of invoice document.",
          "type": "string",
          "enum": [
            "INVOICE_TYPE_UNSPECIFIED",
            "INVOICE_TYPE_CREDIT",
            "INVOICE_TYPE_INVOICE"
          ],
          "enumDescriptions": [
            "Not specified or is unknown in this version.",
            "The invoice has a negative amount.",
            "The invoice has a positive amount."
          ]
        },
        "totalAmountMicros": {
          "format": "int64",
          "type": "string",
          "description": "The invoice total amount, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar."
        },
        "subtotalAmountMicros": {
          "description": "The pre-tax subtotal amount, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the invoice."
        },
        "purchaseOrderNumber": {
          "description": "Purchase order number associated with the invoice.",
          "type": "string"
        },
        "invoiceId": {
          "type": "string",
          "description": "The unique ID of the invoice."
        },
        "budgetInvoiceGroupingId": {
          "description": "The budget grouping ID for this invoice. This field will only be set if the invoice level of the corresponding billing profile was set to \"Budget invoice grouping ID\".",
          "type": "string"
        },
        "serviceDateRange": {
          "$ref": "DateRange",
          "description": "The service start and end dates which are covered by this invoice."
        },
        "replacedInvoiceIds": {
          "type": "array",
          "description": "The ID(s) of any originally issued invoice that is being cancelled by this invoice, if applicable. Multiple invoices may be listed if those invoices are being consolidated into a single invoice. May appear on invoice PDF as `Replaced invoice numbers`. If corrected_invoice_id is set, this field will be empty.",
          "items": {
            "type": "string"
          }
        },
        "totalTaxAmountMicros": {
          "type": "string",
          "format": "int64",
          "description": "The sum of all taxes in invoice, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar."
        },
        "name": {
          "description": "The resource name of the invoice.",
          "type": "string"
        },
        "correctedInvoiceId": {
          "description": "The ID of the original invoice being adjusted by this invoice, if applicable. May appear on the invoice PDF as `Reference invoice number`. If replaced_invoice_ids is set, this field will be empty.",
          "type": "string"
        },
        "pdfUrl": {
          "type": "string",
          "description": "The URL to download a PDF copy of the invoice. This URL is user specific and requires a valid OAuth 2.0 access token to access. The access token must be provided in an `Authorization: Bearer` HTTP header and be authorized for one of the following scopes: * `https://www.googleapis.com/auth/display-video-mediaplanning` * `https://www.googleapis.com/auth/display-video` The URL will be valid for 7 days after retrieval of this invoice object or until this invoice is retrieved again."
        }
      },
      "id": "Invoice",
      "description": "A single invoice.",
      "type": "object"
    },
    "ContentDurationAssignedTargetingOptionDetails": {
      "description": "Details for content duration assigned targeting option. This will be populated in the content_duration_details field when targeting_type is `TARGETING_TYPE_CONTENT_DURATION`. Explicitly targeting all options is not supported. Remove all content duration targeting options to achieve this effect.",
      "type": "object",
      "properties": {
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_DURATION`."
        },
        "contentDuration": {
          "enum": [
            "CONTENT_DURATION_UNSPECIFIED",
            "CONTENT_DURATION_UNKNOWN",
            "CONTENT_DURATION_0_TO_1_MIN",
            "CONTENT_DURATION_1_TO_5_MIN",
            "CONTENT_DURATION_5_TO_15_MIN",
            "CONTENT_DURATION_15_TO_30_MIN",
            "CONTENT_DURATION_30_TO_60_MIN",
            "CONTENT_DURATION_OVER_60_MIN"
          ],
          "enumDescriptions": [
            "Content duration is not specified in this version. This enum is a place holder for a default value and does not represent a real content duration.",
            "The content duration is unknown.",
            "Content is 0-1 minute long.",
            "Content is 1-5 minutes long.",
            "Content is 5-15 minutes long.",
            "Content is 15-30 minutes long.",
            "Content is 30-60 minutes long.",
            "Content is over 60 minutes long."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The content duration."
        }
      },
      "id": "ContentDurationAssignedTargetingOptionDetails"
    },
    "TargetingExpansionConfig": {
      "description": "Settings that control the targeting expansion of the line item. Targeting expansion allows the line item to reach a larger audience based on the original audience list and the targeting expansion level.",
      "type": "object",
      "id": "TargetingExpansionConfig",
      "properties": {
        "targetingExpansionLevel": {
          "enum": [
            "TARGETING_EXPANSION_LEVEL_UNSPECIFIED",
            "NO_EXPANSION",
            "LEAST_EXPANSION",
            "SOME_EXPANSION",
            "BALANCED_EXPANSION",
            "MORE_EXPANSION",
            "MOST_EXPANSION"
          ],
          "description": "Required. Magnitude of expansion for applicable targeting under this line item.",
          "enumDescriptions": [
            "Targeting expansion level is not specified or is unknown in this version.",
            "Targeting expansion off.",
            "Conservative targeting expansion, lowest reach.",
            "Moderately conservative targeting expansion, lower reach.",
            "Moderate targeting expansion, medium reach.",
            "Moderately aggressive targeting expansion, higher reach.",
            "Aggressive targeting expansion, highest reach."
          ],
          "type": "string"
        },
        "excludeFirstPartyAudience": {
          "description": "Required. Whether to exclude first party audiences from targeting. Similar audiences of the excluded first party lists will not be excluded. Only applicable when a first-party audience is positively targeted (directly or included in a combined audience), otherwise this selection will be ignored.",
          "type": "boolean"
        }
      }
    },
    "DigitalContentLabelTargetingOptionDetails": {
      "properties": {
        "contentRatingTier": {
          "enumDescriptions": [
            "Content label is not specified in this version. This enum is a place holder for a default value and does not represent a real content rating.",
            "Content that has not been labeled.",
            "Content suitable for general audiences.",
            "Content suitable for most audiences with parental guidance.",
            "Content suitable for teen and older audiences.",
            "Content suitable only for mature audiences.",
            "Content suitable for family audiences. It is a subset of CONTENT_RATING_TIER_GENERAL. Only applicable to YouTube and Partners line items."
          ],
          "type": "string",
          "enum": [
            "CONTENT_RATING_TIER_UNSPECIFIED",
            "CONTENT_RATING_TIER_UNRATED",
            "CONTENT_RATING_TIER_GENERAL",
            "CONTENT_RATING_TIER_PARENTAL_GUIDANCE",
            "CONTENT_RATING_TIER_TEENS",
            "CONTENT_RATING_TIER_MATURE",
            "CONTENT_RATING_TIER_FAMILIES"
          ],
          "description": "Output only. An enum for the content label brand safety tiers.",
          "readOnly": true
        }
      },
      "description": "Represents a targetable digital content label rating tier. This will be populated in the digital_content_label_details field of the TargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.",
      "id": "DigitalContentLabelTargetingOptionDetails",
      "type": "object"
    },
    "AppCategoryAssignedTargetingOptionDetails": {
      "description": "Details for assigned app category targeting option. This will be populated in the app_category_details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.",
      "type": "object",
      "id": "AppCategoryAssignedTargetingOptionDetails",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.",
          "type": "string"
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The display name of the app category."
        }
      }
    },
    "User": {
      "properties": {
        "assignedUserRoles": {
          "description": "The assigned user roles. Required in CreateUser. Output only in UpdateUser. Can only be updated through BulkEditAssignedUserRoles.",
          "type": "array",
          "items": {
            "$ref": "AssignedUserRole"
          }
        },
        "displayName": {
          "description": "Required. The display name of the user. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "userId": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The unique ID of the user. Assigned by the system.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the user.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Required. Immutable. The email address used to identify the user."
        }
      },
      "type": "object",
      "description": "A single user in Display & Video 360.",
      "id": "User"
    },
    "BudgetSummary": {
      "type": "object",
      "id": "BudgetSummary",
      "description": "Summarized information of an individual campaign budget.",
      "properties": {
        "preTaxAmountMicros": {
          "description": "The sum of charges made under this budget before taxes, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.",
          "format": "int64",
          "type": "string"
        },
        "taxAmountMicros": {
          "description": "The amount of tax applied to charges under this budget, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "totalAmountMicros": {
          "format": "int64",
          "description": "The total sum of charges made under this budget, including tax, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.",
          "type": "string"
        },
        "externalBudgetId": {
          "description": "Corresponds to the external_budget_id of a campaign budget. If the value is not set in the campaign budget, this field will be empty.",
          "type": "string"
        },
        "prismaCpeCode": {
          "$ref": "PrismaCpeCode",
          "description": "Relevant client, product, and estimate codes from the Mediaocean Prisma tool. Only applicable for campaign budgets with an external_budget_source of EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN."
        }
      }
    },
    "SdfConfig": {
      "properties": {
        "version": {
          "enum": [
            "SDF_VERSION_UNSPECIFIED",
            "SDF_VERSION_3_1",
            "SDF_VERSION_4",
            "SDF_VERSION_4_1",
            "SDF_VERSION_4_2",
            "SDF_VERSION_5",
            "SDF_VERSION_5_1",
            "SDF_VERSION_5_2",
            "SDF_VERSION_5_3",
            "SDF_VERSION_5_4",
            "SDF_VERSION_5_5"
          ],
          "type": "string",
          "description": "Required. The version of SDF being used.",
          "enumDescriptions": [
            "SDF version value is not specified or is unknown in this version.",
            "SDF version 3.1",
            "SDF version 4",
            "SDF version 4.1",
            "SDF version 4.2",
            "SDF version 5.",
            "SDF version 5.1",
            "SDF version 5.2",
            "SDF version 5.3",
            "SDF version 5.4",
            "SDF version 5.5"
          ]
        },
        "adminEmail": {
          "description": "An administrator email address to which the SDF processing status reports will be sent.",
          "type": "string"
        }
      },
      "description": "Structured Data File (SDF) related settings.",
      "type": "object",
      "id": "SdfConfig"
    },
    "BrowserTargetingOptionDetails": {
      "description": "Represents a targetable browser. This will be populated in the browser_details field when targeting_type is `TARGETING_TYPE_BROWSER`.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the browser.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "BrowserTargetingOptionDetails"
    },
    "BulkEditAdvertiserAssignedTargetingOptionsRequest": {
      "description": "Request message for BulkEditAdvertiserAssignedTargetingOptions.",
      "id": "BulkEditAdvertiserAssignedTargetingOptionsRequest",
      "properties": {
        "deleteRequests": {
          "description": "The assigned targeting options to delete in batch, specified as a list of `DeleteAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`",
          "type": "array",
          "items": {
            "$ref": "DeleteAssignedTargetingOptionsRequest"
          }
        },
        "createRequests": {
          "items": {
            "$ref": "CreateAssignedTargetingOptionsRequest"
          },
          "type": "array",
          "description": "The assigned targeting options to create in batch, specified as a list of `CreateAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`"
        }
      },
      "type": "object"
    },
    "InventorySourceAccessorsAdvertiserAccessors": {
      "type": "object",
      "properties": {
        "advertiserIds": {
          "description": "The IDs of the advertisers.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        }
      },
      "id": "InventorySourceAccessorsAdvertiserAccessors",
      "description": "The advertisers with access to the inventory source."
    },
    "GoogleAudienceGroup": {
      "id": "GoogleAudienceGroup",
      "description": "Details of Google audience group. All Google audience targeting settings are logically ‘OR’ of each other.",
      "properties": {
        "settings": {
          "type": "array",
          "description": "Required. All Google audience targeting settings in Google audience group. Repeated settings with same id will be ignored.",
          "items": {
            "$ref": "GoogleAudienceTargetingSetting"
          }
        }
      },
      "type": "object"
    },
    "ListInvoicesResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "description": "The list of invoices. This list will be absent if empty.",
          "items": {
            "$ref": "Invoice"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInvoices` method to retrieve the next page of results. This token will be absent if there are no more invoices to return.",
          "type": "string"
        }
      },
      "id": "ListInvoicesResponse"
    },
    "ContentGenreAssignedTargetingOptionDetails": {
      "id": "ContentGenreAssignedTargetingOptionDetails",
      "type": "object",
      "description": "Details for content genre assigned targeting option. This will be populated in the content_genre_details field when targeting_type is `TARGETING_TYPE_CONTENT_GENRE`. Explicitly targeting all options is not supported. Remove all content genre targeting options to achieve this effect.",
      "properties": {
        "displayName": {
          "readOnly": true,
          "description": "Output only. The display name of the content genre.",
          "type": "string"
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_GENRE`."
        }
      }
    },
    "PartnerCost": {
      "description": "Settings that control a partner cost. A partner cost is any type of expense involved in running a campaign, other than the costs of purchasing impressions (which is called the media cost) and using third-party audience segment data (data fee). Some examples of partner costs include the fees for using DV360, a third-party ad server, or a third-party ad serving verification service.",
      "properties": {
        "costType": {
          "description": "Required. The type of the partner cost.",
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The cost is charged for using Adloox.",
            "The cost is charged for using Adloox Pre-Bid.",
            "The cost is charged for using AdSafe.",
            "The cost is charged for using AdExpose.",
            "The cost is charged for using Aggregate Knowledge.",
            "The cost is charged for using an Agency Trading Desk.",
            "The cost is charged for using DV360.",
            "The cost is charged for using comScore vCE.",
            "The cost is charged for using a Data Management Platform.",
            "The default cost type.",
            "The cost is charged for using DoubleVerify.",
            "The cost is charged for using DoubleVerify Pre-Bid.",
            "The cost is charged for using Evidon.",
            "The cost is charged for using Integral Ad Science Video.",
            "The cost is charged for using Integral Ad Science Pre-Bid.",
            "The cost is charged for using media cost data.",
            "The cost is charged for using MOAT Video.",
            "The cost is charged for using Nielsen Digital Ad Ratings.",
            "The cost is charged for using ShopLocal.",
            "The cost is charged for using Teracent.",
            "The cost is charged for using a third-party ad server.",
            "The cost is charged for using TrustMetrics.",
            "The cost is charged for using Vizu.",
            "The cost is charged for using AdLingo.",
            "The cost is charged as custom fee 1.",
            "The cost is charged as custom fee 2.",
            "The cost is charged as custom fee 3.",
            "The cost is charged as custom fee 4.",
            "The cost is charged as custom fee 5."
          ],
          "enum": [
            "PARTNER_COST_TYPE_UNSPECIFIED",
            "PARTNER_COST_TYPE_ADLOOX",
            "PARTNER_COST_TYPE_ADLOOX_PREBID",
            "PARTNER_COST_TYPE_ADSAFE",
            "PARTNER_COST_TYPE_ADXPOSE",
            "PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE",
            "PARTNER_COST_TYPE_AGENCY_TRADING_DESK",
            "PARTNER_COST_TYPE_DV360_FEE",
            "PARTNER_COST_TYPE_COMSCORE_VCE",
            "PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM",
            "PARTNER_COST_TYPE_DEFAULT",
            "PARTNER_COST_TYPE_DOUBLE_VERIFY",
            "PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID",
            "PARTNER_COST_TYPE_EVIDON",
            "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO",
            "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID",
            "PARTNER_COST_TYPE_MEDIA_COST_DATA",
            "PARTNER_COST_TYPE_MOAT_VIDEO",
            "PARTNER_COST_TYPE_NIELSEN_DAR",
            "PARTNER_COST_TYPE_SHOP_LOCAL",
            "PARTNER_COST_TYPE_TERACENT",
            "PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER",
            "PARTNER_COST_TYPE_TRUST_METRICS",
            "PARTNER_COST_TYPE_VIZU",
            "PARTNER_COST_TYPE_ADLINGO_FEE",
            "PARTNER_COST_TYPE_CUSTOM_FEE_1",
            "PARTNER_COST_TYPE_CUSTOM_FEE_2",
            "PARTNER_COST_TYPE_CUSTOM_FEE_3",
            "PARTNER_COST_TYPE_CUSTOM_FEE_4",
            "PARTNER_COST_TYPE_CUSTOM_FEE_5"
          ]
        },
        "feePercentageMillis": {
          "format": "int64",
          "description": "The media fee percentage in millis (1/1000 of a percent). Applicable when the fee_type is `PARTNER_FEE_TYPE_MEDIA_FEE`. Must be greater than or equal to 0. For example: 100 represents 0.1%.",
          "type": "string"
        },
        "feeAmount": {
          "description": "The CPM fee amount in micros of advertiser's currency. Applicable when the fee_type is `PARTNER_FEE_TYPE_CPM_FEE`. Must be greater than or equal to 0. For example, for 1.5 standard unit of the advertiser's currency, set this field to 1500000.",
          "type": "string",
          "format": "int64"
        },
        "invoiceType": {
          "description": "The invoice type for this partner cost. * Required when cost_type is one of: - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` - `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Partner cost is billed through DV360.",
            "Partner cost is billed by the partner."
          ],
          "type": "string",
          "enum": [
            "PARTNER_COST_INVOICE_TYPE_UNSPECIFIED",
            "PARTNER_COST_INVOICE_TYPE_DV360",
            "PARTNER_COST_INVOICE_TYPE_PARTNER"
          ]
        },
        "feeType": {
          "description": "Required. The fee type for this partner cost.",
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "The partner cost is a fixed CPM fee. Not applicable when the partner cost cost_type is one of: * `PARTNER_COST_TYPE_MEDIA_COST_DATA` * `PARTNER_COST_TYPE_DV360_FEE`.",
            "The partner cost is a percentage surcharge based on the media cost. Not applicable when the partner cost_type is one of: * `PARTNER_COST_TYPE_SHOP_LOCAL` * `PARTNER_COST_TYPE_TRUST_METRICS` * `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO` * `PARTNER_COST_TYPE_MOAT_VIDEO`."
          ],
          "enum": [
            "PARTNER_COST_FEE_TYPE_UNSPECIFIED",
            "PARTNER_COST_FEE_TYPE_CPM_FEE",
            "PARTNER_COST_FEE_TYPE_MEDIA_FEE"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "PartnerCost"
    },
    "BusinessChainAssignedTargetingOptionDetails": {
      "description": "Details for assigned Business chain targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of a business chain, e.g. \"KFC\", \"Chase Bank\".",
          "type": "string",
          "readOnly": true
        },
        "proximityRadiusUnit": {
          "type": "string",
          "description": "Required. The unit of distance by which the targeting radius is measured.",
          "enum": [
            "DISTANCE_UNIT_UNSPECIFIED",
            "DISTANCE_UNIT_MILES",
            "DISTANCE_UNIT_KILOMETERS"
          ],
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Miles.",
            "Kilometers."
          ]
        },
        "proximityRadiusAmount": {
          "type": "number",
          "format": "double",
          "description": "Required. The radius of the area around the business chain that will be targeted. The units of the radius are specified by proximity_radius_unit. Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is `DISTANCE_UNIT_MILES`. The minimum increment for both cases is 0.1. Inputs will be rounded to the nearest acceptable value if it is too granular, e.g. 15.57 will become 15.6."
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_BUSINESS_CHAIN`. Accepted business chain targeting option IDs can be retrieved using SearchTargetingOptions.",
          "type": "string"
        }
      },
      "id": "BusinessChainAssignedTargetingOptionDetails"
    },
    "FixedBidStrategy": {
      "id": "FixedBidStrategy",
      "description": "A strategy that uses a fixed bidding price.",
      "type": "object",
      "properties": {
        "bidAmountMicros": {
          "format": "int64",
          "type": "string",
          "description": "The fixed bid amount, in micros of the advertiser's currency. For insertion order entity, bid_amount_micros should be set as 0. For line item entity, bid_amount_micros must be greater than or equal to billable unit of the given currency and smaller than or equal to the upper limit 1000000000. For example, 1500000 represents 1.5 standard units of the currency."
        }
      }
    },
    "ChannelAssignedTargetingOptionDetails": {
      "type": "object",
      "description": "Details for assigned channel targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_CHANNEL`.",
      "id": "ChannelAssignedTargetingOptionDetails",
      "properties": {
        "channelId": {
          "description": "Required. ID of the channel. Should refer to the channel ID field on a [Partner-owned channel](partners.channels#Channel.FIELDS.channel_id) or [advertiser-owned channel](advertisers.channels#Channel.FIELDS.channel_id) resource.",
          "format": "int64",
          "type": "string"
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted. For advertiser level assigned targeting option, this field must be true."
        }
      }
    },
    "OnScreenPositionTargetingOptionDetails": {
      "properties": {
        "onScreenPosition": {
          "description": "Output only. The on screen position.",
          "enumDescriptions": [
            "On screen position is not specified in this version. This enum is a place holder for a default value and does not represent a real on screen position.",
            "The ad position is unknown on the screen.",
            "The ad is located above the fold.",
            "The ad is located below the fold."
          ],
          "enum": [
            "ON_SCREEN_POSITION_UNSPECIFIED",
            "ON_SCREEN_POSITION_UNKNOWN",
            "ON_SCREEN_POSITION_ABOVE_THE_FOLD",
            "ON_SCREEN_POSITION_BELOW_THE_FOLD"
          ],
          "type": "string",
          "readOnly": true
        }
      },
      "id": "OnScreenPositionTargetingOptionDetails",
      "description": "Represents a targetable on screen position, which could be used by display and video ads. This will be populated in the on_screen_position_details field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.",
      "type": "object"
    },
    "AssetAssociation": {
      "id": "AssetAssociation",
      "type": "object",
      "description": "Asset association for the creative.",
      "properties": {
        "role": {
          "description": "The role of this asset for the creative.",
          "enumDescriptions": [
            "Asset role is not specified or is unknown in this version.",
            "The asset is the main asset of the creative.",
            "The asset is a backup asset of the creative.",
            "The asset is a polite load asset of the creative.",
            "Headline of a native creative. The content must be UTF-8 encoded with a length of no more than 25 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "Long headline of a native creative. The content must be UTF-8 encoded with a length of no more than 50 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "Body text of a native creative. The content must be UTF-8 encoded with a length of no more than 90 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "Long body text of a native creative. The content must be UTF-8 encoded with a length of no more than 150 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "A short, friendly version of the landing page URL to show in the creative. This URL gives people an idea of where they'll arrive after they click on the creative. The content must be UTF-8 encoded with a length of no more than 30 characters. For example, if the landing page URL is 'http://www.example.com/page', the caption URL can be 'example.com'. The protocol (http://) is optional, but the URL can't contain spaces or special characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "The text to use on the call-to-action button of a native creative. The content must be UTF-8 encoded with a length of no more than 15 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "The text that identifies the advertiser or brand name. The content must be UTF-8 encoded with a length of no more than 25 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "The purchase price of your app in the Google play store or iOS app store (for example, $5.99). Note that this value is not automatically synced with the actual value listed in the store. It will always be the one provided when save the creative. The content must be UTF-8 encoded with a length of no more than 15 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The ID of an Android app in the Google play store. You can find this ID in the App’s Google Play Store URL after ‘id’. For example, in https://play.google.com/store/apps/details?id=com.company.appname the identifier is com.company.appname. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The ID of an iOS app in the Apple app store. This ID number can be found in the Apple App Store URL as the string of numbers directly after \"id\". For example, in https://apps.apple.com/us/app/gmail-email-by-google/id422689480 the ID is 422689480. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The rating of an app in the Google play store or iOS app store. Note that this value is not automatically synced with the actual rating in the store. It will always be the one provided when save the creative. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The icon of a creative. This role is only supported and required in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The cover image of a native video creative. This role is only supported and required in following creative_type: * `CREATIVE_TYPE_VIDEO`"
          ],
          "enum": [
            "ASSET_ROLE_UNSPECIFIED",
            "ASSET_ROLE_MAIN",
            "ASSET_ROLE_BACKUP",
            "ASSET_ROLE_POLITE_LOAD",
            "ASSET_ROLE_HEADLINE",
            "ASSET_ROLE_LONG_HEADLINE",
            "ASSET_ROLE_BODY",
            "ASSET_ROLE_LONG_BODY",
            "ASSET_ROLE_CAPTION_URL",
            "ASSET_ROLE_CALL_TO_ACTION",
            "ASSET_ROLE_ADVERTISER_NAME",
            "ASSET_ROLE_PRICE",
            "ASSET_ROLE_ANDROID_APP_ID",
            "ASSET_ROLE_IOS_APP_ID",
            "ASSET_ROLE_RATING",
            "ASSET_ROLE_ICON",
            "ASSET_ROLE_COVER_IMAGE"
          ],
          "type": "string"
        },
        "asset": {
          "description": "The associated asset.",
          "$ref": "Asset"
        }
      }
    },
    "ReplaceSitesRequest": {
      "properties": {
        "partnerId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the partner that owns the parent channel."
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the advertiser that owns the parent channel."
        },
        "newSites": {
          "items": {
            "$ref": "Site"
          },
          "type": "array",
          "description": "The sites that will replace the existing sites assigned to the channel, specified as a list of Sites."
        }
      },
      "id": "ReplaceSitesRequest",
      "type": "object",
      "description": "Request message for SiteService.ReplaceSites."
    },
    "HouseholdIncomeTargetingOptionDetails": {
      "id": "HouseholdIncomeTargetingOptionDetails",
      "description": "Represents a targetable household income. This will be populated in the household_income_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.",
      "type": "object",
      "properties": {
        "householdIncome": {
          "type": "string",
          "enum": [
            "HOUSEHOLD_INCOME_UNSPECIFIED",
            "HOUSEHOLD_INCOME_UNKNOWN",
            "HOUSEHOLD_INCOME_LOWER_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT",
            "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT",
            "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT",
            "HOUSEHOLD_INCOME_TOP_10_PERCENT"
          ],
          "enumDescriptions": [
            "Default value when household income is not specified in this version. This enum is a placeholder for default value and does not represent a real household income option.",
            "The household income of the audience is unknown.",
            "The audience is in the lower 50% of U.S. household incomes.",
            "The audience is in the top 41-50% of U.S. household incomes.",
            "The audience is in the top 31-40% of U.S. household incomes.",
            "The audience is in the top 21-30% of U.S. household incomes.",
            "The audience is in the top 11-20% of U.S. household incomes.",
            "The audience is in the top 10% of U.S. household incomes."
          ],
          "readOnly": true,
          "description": "Output only. The household income of an audience."
        }
      }
    },
    "EnvironmentTargetingOptionDetails": {
      "description": "Represents a targetable environment. This will be populated in the environment_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_ENVIRONMENT`.",
      "id": "EnvironmentTargetingOptionDetails",
      "properties": {
        "environment": {
          "readOnly": true,
          "enumDescriptions": [
            "Default value when environment is not specified in this version. This enum is a placeholder for default value and does not represent a real environment option.",
            "Target inventory displayed in browsers. This includes inventory that was designed for the device it was viewed on, such as mobile websites viewed on a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted, should be deleted prior to the deletion of this targeting option.",
            "Target inventory displayed in browsers. This includes inventory that was not designed for the device but viewed on it, such as websites optimized for desktop but viewed on a mobile device. ENVIRONMENT_WEB_OPTIMIZED should be targeted prior to the addition of this targeting option.",
            "Target inventory displayed in apps."
          ],
          "type": "string",
          "description": "Output only. The serving environment.",
          "enum": [
            "ENVIRONMENT_UNSPECIFIED",
            "ENVIRONMENT_WEB_OPTIMIZED",
            "ENVIRONMENT_WEB_NOT_OPTIMIZED",
            "ENVIRONMENT_APP"
          ]
        }
      },
      "type": "object"
    },
    "EditGuaranteedOrderReadAccessorsRequest": {
      "type": "object",
      "id": "EditGuaranteedOrderReadAccessorsRequest",
      "description": "Request message for GuaranteedOrderService.EditGuaranteedOrderReadAccessors.",
      "properties": {
        "removedAdvertisers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The advertisers to remove as read accessors to the guaranteed order."
        },
        "partnerId": {
          "format": "int64",
          "type": "string",
          "description": "Required. The partner context in which the change is being made."
        },
        "readAccessInherited": {
          "type": "boolean",
          "description": "Whether to give all advertisers of the read/write accessor partner read access to the guaranteed order. Only applicable if read_write_partner_id is set in the guaranteed order."
        },
        "addedAdvertisers": {
          "type": "array",
          "description": "The advertisers to add as read accessors to the guaranteed order.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "NativeContentPositionTargetingOptionDetails": {
      "properties": {
        "contentPosition": {
          "readOnly": true,
          "enum": [
            "NATIVE_CONTENT_POSITION_UNSPECIFIED",
            "NATIVE_CONTENT_POSITION_UNKNOWN",
            "NATIVE_CONTENT_POSITION_IN_ARTICLE",
            "NATIVE_CONTENT_POSITION_IN_FEED",
            "NATIVE_CONTENT_POSITION_PERIPHERAL",
            "NATIVE_CONTENT_POSITION_RECOMMENDATION"
          ],
          "description": "Output only. The content position.",
          "type": "string",
          "enumDescriptions": [
            "Native content position is not specified in this version. This enum is a place holder for a default value and does not represent a real native content position.",
            "The native content position is unknown.",
            "Native content position is in-article, i.e., ads appear between the paragraphs of pages.",
            "Native content position is in-feed, i.e., ads appear in a scrollable stream of content. A feed is typically editorial (e.g. a list of articles or news) or listings (e.g. a list of products or services).",
            "Native content position is peripheral, i.e., ads appear outside of core content on pages, such as the right- or left-hand side of the page.",
            "Native content position is recommendation, i.e., ads appear in sections for recommended content."
          ]
        }
      },
      "description": "Represents a targetable native content position. This will be populated in the native_content_position_details field when targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`.",
      "id": "NativeContentPositionTargetingOptionDetails",
      "type": "object"
    },
    "SubExchangeAssignedTargetingOptionDetails": {
      "description": "Details for assigned sub-exchange targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`.",
      "type": "object",
      "id": "SubExchangeAssignedTargetingOptionDetails",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_SUB_EXCHANGE`.",
          "type": "string"
        }
      }
    },
    "CustomBiddingAlgorithm": {
      "type": "object",
      "id": "CustomBiddingAlgorithm",
      "description": "A single custom bidding algorithm.",
      "properties": {
        "displayName": {
          "description": "Required. The display name of the custom bidding algorithm. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "entityStatus": {
          "type": "string",
          "description": "Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED`",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ]
        },
        "name": {
          "description": "Output only. The resource name of the custom bidding algorithm.",
          "type": "string",
          "readOnly": true
        },
        "advertiserId": {
          "description": "Immutable. The unique ID of the advertiser that owns the custom bidding algorithm.",
          "type": "string",
          "format": "int64"
        },
        "sharedAdvertiserIds": {
          "description": "The IDs of the advertisers who have access to this algorithm. If advertiser_id is set, this field will only consist of that value. This field will not be set if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "partnerId": {
          "type": "string",
          "description": "Immutable. The unique ID of the partner that owns the custom bidding algorithm.",
          "format": "int64"
        },
        "modelDetails": {
          "items": {
            "$ref": "CustomBiddingModelDetails"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The details of custom bidding models for each advertiser who has access. This field may only include the details of the queried advertiser if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor)."
        },
        "customBiddingAlgorithmType": {
          "description": "Required. Immutable. The type of custom bidding algorithm.",
          "enumDescriptions": [
            "Algorithm type is not specified or is unknown in this version.",
            "Algorithm generated through customer-uploaded custom bidding script files.",
            "Algorithm created through Ads Data Hub product.",
            "Algorithm created through goal builder in DV3 UI."
          ],
          "type": "string",
          "enum": [
            "CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED",
            "SCRIPT_BASED",
            "ADS_DATA_HUB_BASED",
            "GOAL_BUILDER_BASED"
          ]
        },
        "customBiddingAlgorithmId": {
          "format": "int64",
          "description": "Output only. The unique ID of the custom bidding algorithm. Assigned by the system.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InventorySourceGroup": {
      "type": "object",
      "properties": {
        "inventorySourceGroupId": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. The unique ID of the inventory source group. Assigned by the system."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the inventory source group."
        },
        "displayName": {
          "description": "Required. The display name of the inventory source group. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        }
      },
      "description": "A collection of targetable inventory sources.",
      "id": "InventorySourceGroup"
    }
  },
  "mtlsRootUrl": "https://displayvideo.mtls.googleapis.com/",
  "canonicalName": "Display Video",
  "name": "displayvideo",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "resources": {
    "sdfdownloadtasks": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "description": "Gets the latest state of an asynchronous SDF download task operation. Clients should poll this method at intervals of 30 seconds.",
              "path": "v2/{+name}",
              "flatPath": "v2/sdfdownloadtasks/operations/{operationsId}",
              "response": {
                "$ref": "Operation"
              },
              "httpMethod": "GET",
              "id": "displayvideo.sdfdownloadtasks.operations.get",
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/doubleclickbidmanager"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "pattern": "^sdfdownloadtasks/operations/[^/]+$"
                }
              }
            }
          }
        }
      },
      "methods": {
        "create": {
          "request": {
            "$ref": "CreateSdfDownloadTaskRequest"
          },
          "parameterOrder": [],
          "description": "Creates an SDF Download Task. Returns an Operation. An SDF Download Task is a long-running, asynchronous operation. The metadata type of this operation is SdfDownloadTaskMetadata. If the request is successful, the response type of the operation is SdfDownloadTask. The response will not include the download files, which must be retrieved with media.download. The state of operation can be retrieved with sdfdownloadtask.operations.get. Any errors can be found in the error.message. Note that error.details is expected to be empty.",
          "parameters": {},
          "flatPath": "v2/sdfdownloadtasks",
          "response": {
            "$ref": "Operation"
          },
          "id": "displayvideo.sdfdownloadtasks.create",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "httpMethod": "POST",
          "path": "v2/sdfdownloadtasks"
        }
      }
    },
    "firstAndThirdPartyAudiences": {
      "methods": {
        "list": {
          "description": "Lists first and third party audiences. The order is defined by the order_by parameter.",
          "parameters": {
            "pageToken": {
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListFirstAndThirdPartyAudiences` method. If not specified, the first page of results will be returned.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "location": "query",
              "format": "int32",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "type": "integer"
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "Allows filtering by first and third party audience fields. Supported syntax: * Filter expressions for first and third party audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All first and third party audiences for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters."
            },
            "advertiserId": {
              "description": "The ID of the advertiser that has access to the fetched first and third party audiences.",
              "location": "query",
              "format": "int64",
              "type": "string"
            },
            "orderBy": {
              "description": "Field by which to sort the list. Acceptable values are: * `firstAndThirdPartyAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "location": "query",
              "type": "string"
            },
            "partnerId": {
              "description": "The ID of the partner that has access to the fetched first and third party audiences.",
              "format": "int64",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "path": "v2/firstAndThirdPartyAudiences",
          "flatPath": "v2/firstAndThirdPartyAudiences",
          "parameterOrder": [],
          "id": "displayvideo.firstAndThirdPartyAudiences.list",
          "response": {
            "$ref": "ListFirstAndThirdPartyAudiencesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        },
        "get": {
          "response": {
            "$ref": "FirstAndThirdPartyAudience"
          },
          "parameterOrder": [
            "firstAndThirdPartyAudienceId"
          ],
          "path": "v2/firstAndThirdPartyAudiences/{+firstAndThirdPartyAudienceId}",
          "httpMethod": "GET",
          "id": "displayvideo.firstAndThirdPartyAudiences.get",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "description": "Gets a first and third party audience.",
          "flatPath": "v2/firstAndThirdPartyAudiences/{firstAndThirdPartyAudiencesId}",
          "parameters": {
            "partnerId": {
              "location": "query",
              "type": "string",
              "description": "The ID of the partner that has access to the fetched first and third party audience.",
              "format": "int64"
            },
            "firstAndThirdPartyAudienceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Required. The ID of the first and third party audience to fetch.",
              "format": "int64",
              "pattern": "^[^/]+$"
            },
            "advertiserId": {
              "description": "The ID of the advertiser that has access to the fetched first and third party audience.",
              "type": "string",
              "location": "query",
              "format": "int64"
            }
          }
        },
        "create": {
          "response": {
            "$ref": "FirstAndThirdPartyAudience"
          },
          "flatPath": "v2/firstAndThirdPartyAudiences",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "httpMethod": "POST",
          "parameterOrder": [],
          "id": "displayvideo.firstAndThirdPartyAudiences.create",
          "path": "v2/firstAndThirdPartyAudiences",
          "request": {
            "$ref": "FirstAndThirdPartyAudience"
          },
          "parameters": {
            "advertiserId": {
              "location": "query",
              "format": "int64",
              "description": "Required. The ID of the advertiser under whom the FirstAndThirdPartyAudience will be created.",
              "type": "string"
            }
          },
          "description": "Creates a FirstAndThirdPartyAudience. Only supported for the following audience_type: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`"
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/firstAndThirdPartyAudiences/{firstAndThirdPartyAudiencesId}",
          "description": "Updates an existing FirstAndThirdPartyAudience. Only supported for the following audience_type: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`",
          "parameters": {
            "advertiserId": {
              "description": "Required. The ID of the owner advertiser of the updated FirstAndThirdPartyAudience.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "description": "Required. The mask to control which fields to update. Updates are only supported for the following fields: * `displayName` * `description` * `membershipDurationDays`",
              "location": "query"
            },
            "firstAndThirdPartyAudienceId": {
              "description": "Output only. The unique ID of the first and third party audience. Assigned by the system.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64",
              "pattern": "^[^/]+$"
            }
          },
          "request": {
            "$ref": "FirstAndThirdPartyAudience"
          },
          "response": {
            "$ref": "FirstAndThirdPartyAudience"
          },
          "id": "displayvideo.firstAndThirdPartyAudiences.patch",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "firstAndThirdPartyAudienceId"
          ],
          "path": "v2/firstAndThirdPartyAudiences/{+firstAndThirdPartyAudienceId}"
        },
        "editCustomerMatchMembers": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "description": "Updates the member list of a Customer Match audience. Only supported for the following audience_type: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`",
          "response": {
            "$ref": "EditCustomerMatchMembersResponse"
          },
          "parameterOrder": [
            "firstAndThirdPartyAudienceId"
          ],
          "path": "v2/firstAndThirdPartyAudiences/{+firstAndThirdPartyAudienceId}:editCustomerMatchMembers",
          "flatPath": "v2/firstAndThirdPartyAudiences/{firstAndThirdPartyAudiencesId}:editCustomerMatchMembers",
          "httpMethod": "POST",
          "id": "displayvideo.firstAndThirdPartyAudiences.editCustomerMatchMembers",
          "request": {
            "$ref": "EditCustomerMatchMembersRequest"
          },
          "parameters": {
            "firstAndThirdPartyAudienceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the Customer Match FirstAndThirdPartyAudience whose members will be edited.",
              "format": "int64"
            }
          }
        }
      }
    },
    "customLists": {
      "methods": {
        "list": {
          "id": "displayvideo.customLists.list",
          "httpMethod": "GET",
          "flatPath": "v2/customLists",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "filter": {
              "location": "query",
              "description": "Allows filtering by custom list fields. Supported syntax: * Filter expressions for custom lists currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All custom lists for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters.",
              "type": "string"
            },
            "pageSize": {
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "orderBy": {
              "type": "string",
              "description": "Field by which to sort the list. Acceptable values are: * `customListId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "location": "query"
            },
            "pageToken": {
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomLists` method. If not specified, the first page of results will be returned.",
              "location": "query",
              "type": "string"
            },
            "advertiserId": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "The ID of the DV360 advertiser that has access to the fetched custom lists."
            }
          },
          "response": {
            "$ref": "ListCustomListsResponse"
          },
          "path": "v2/customLists",
          "description": "Lists custom lists. The order is defined by the order_by parameter."
        },
        "get": {
          "description": "Gets a custom list.",
          "parameters": {
            "customListId": {
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "int64",
              "description": "Required. The ID of the custom list to fetch."
            },
            "advertiserId": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "The ID of the DV360 advertiser that has access to the fetched custom lists."
            }
          },
          "response": {
            "$ref": "CustomList"
          },
          "parameterOrder": [
            "customListId"
          ],
          "httpMethod": "GET",
          "id": "displayvideo.customLists.get",
          "flatPath": "v2/customLists/{customListsId}",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "path": "v2/customLists/{+customListId}"
        }
      }
    },
    "advertisers": {
      "resources": {
        "channels": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.channels.get",
              "path": "v2/advertisers/{+advertiserId}/channels/{+channelId}",
              "description": "Gets a channel for a partner or advertiser.",
              "flatPath": "v2/advertisers/{advertisersId}/channels/{channelsId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "advertiserId",
                "channelId"
              ],
              "response": {
                "$ref": "Channel"
              },
              "parameters": {
                "channelId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The ID of the channel to fetch.",
                  "format": "int64",
                  "location": "path"
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that owns the fetched channel.",
                  "type": "string",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path"
                },
                "partnerId": {
                  "description": "The ID of the partner that owns the fetched channel.",
                  "type": "string",
                  "format": "int64",
                  "location": "query"
                }
              }
            },
            "create": {
              "id": "displayvideo.advertisers.channels.create",
              "description": "Creates a new channel. Returns the newly created channel if successful.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId"
              ],
              "path": "v2/advertisers/{+advertiserId}/channels",
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "location": "path",
                  "description": "The ID of the advertiser that owns the created channel.",
                  "required": true
                },
                "partnerId": {
                  "format": "int64",
                  "location": "query",
                  "type": "string",
                  "description": "The ID of the partner that owns the created channel."
                }
              },
              "request": {
                "$ref": "Channel"
              },
              "httpMethod": "POST",
              "flatPath": "v2/advertisers/{advertisersId}/channels",
              "response": {
                "$ref": "Channel"
              }
            },
            "list": {
              "path": "v2/advertisers/{+advertiserId}/channels",
              "parameterOrder": [
                "advertiserId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListChannels` method. If not specified, the first page of results will be returned."
                },
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by channel fields. Supported syntax: * Filter expressions for channel currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All channels for which the display name contains \"google\": `displayName : \"google\"`. The length of this field should be no more than 500 characters.",
                  "location": "query"
                },
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `channelId` The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `displayName desc`.",
                  "type": "string",
                  "location": "query"
                },
                "partnerId": {
                  "type": "string",
                  "format": "int64",
                  "location": "query",
                  "description": "The ID of the partner that owns the channels."
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that owns the channels.",
                  "type": "string",
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "pattern": "^[^/]+$"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "format": "int32"
                }
              },
              "response": {
                "$ref": "ListChannelsResponse"
              },
              "flatPath": "v2/advertisers/{advertisersId}/channels",
              "description": "Lists channels for a partner or advertiser.",
              "id": "displayvideo.advertisers.channels.list",
              "httpMethod": "GET"
            },
            "patch": {
              "flatPath": "v2/advertisers/{advertisersId}/channels/{channelId}",
              "id": "displayvideo.advertisers.channels.patch",
              "response": {
                "$ref": "Channel"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v2/advertisers/{+advertiserId}/channels/{channelId}",
              "parameterOrder": [
                "advertiserId",
                "channelId"
              ],
              "request": {
                "$ref": "Channel"
              },
              "parameters": {
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the advertiser that owns the created channel."
                },
                "updateMask": {
                  "location": "query",
                  "description": "Required. The mask to control which fields to update.",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "channelId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Output only. The unique ID of the channel. Assigned by the system.",
                  "format": "int64"
                },
                "partnerId": {
                  "description": "The ID of the partner that owns the created channel.",
                  "type": "string",
                  "format": "int64",
                  "location": "query"
                }
              },
              "description": "Updates a channel. Returns the updated channel if successful."
            }
          },
          "resources": {
            "sites": {
              "methods": {
                "list": {
                  "description": "Lists sites in a channel.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "path": "v2/advertisers/{+advertiserId}/channels/{+channelId}/sites",
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field by which to sort the list. Acceptable values are: * `urlOrAppId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `urlOrAppId desc`."
                    },
                    "channelId": {
                      "required": true,
                      "format": "int64",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "description": "Required. The ID of the parent channel to which the requested sites belong."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListSites` method. If not specified, the first page of results will be returned."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Must be between `1` and `10000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "advertiserId": {
                      "format": "int64",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "pattern": "^[^/]+$"
                    },
                    "partnerId": {
                      "description": "The ID of the partner that owns the parent channel.",
                      "format": "int64",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows filtering by site fields. Supported syntax: * Filter expressions for site currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `urlOrAppId` Examples: * All sites for which the URL or app ID contains \"google\": `urlOrAppId : \"google\"`"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "displayvideo.advertisers.channels.sites.list",
                  "parameterOrder": [
                    "advertiserId",
                    "channelId"
                  ],
                  "flatPath": "v2/advertisers/{advertisersId}/channels/{channelsId}/sites",
                  "response": {
                    "$ref": "ListSitesResponse"
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "advertiserId",
                    "channelId",
                    "urlOrAppId"
                  ],
                  "parameters": {
                    "urlOrAppId": {
                      "location": "path",
                      "description": "Required. The URL or app ID of the site to delete.",
                      "type": "string",
                      "required": true,
                      "pattern": "^[^/]+$"
                    },
                    "partnerId": {
                      "location": "query",
                      "format": "int64",
                      "description": "The ID of the partner that owns the parent channel.",
                      "type": "string"
                    },
                    "advertiserId": {
                      "location": "path",
                      "format": "int64",
                      "required": true,
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "type": "string"
                    },
                    "channelId": {
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "description": "Required. The ID of the parent channel to which the site belongs.",
                      "type": "string",
                      "format": "int64",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a site from a channel.",
                  "path": "v2/advertisers/{advertiserId}/channels/{+channelId}/sites/{+urlOrAppId}",
                  "id": "displayvideo.advertisers.channels.sites.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v2/advertisers/{advertiserId}/channels/{channelsId}/sites/{sitesId}"
                },
                "replace": {
                  "request": {
                    "$ref": "ReplaceSitesRequest"
                  },
                  "id": "displayvideo.advertisers.channels.sites.replace",
                  "path": "v2/advertisers/{advertiserId}/channels/{+channelId}/sites:replace",
                  "response": {
                    "$ref": "ReplaceSitesResponse"
                  },
                  "flatPath": "v2/advertisers/{advertiserId}/channels/{channelsId}/sites:replace",
                  "parameters": {
                    "channelId": {
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "format": "int64",
                      "description": "Required. The ID of the parent channel whose sites will be replaced.",
                      "required": true,
                      "location": "path"
                    },
                    "advertiserId": {
                      "type": "string",
                      "format": "int64",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Replaces all of the sites under a single channel. The operation will replace the sites under a channel with the sites provided in ReplaceSitesRequest.new_sites.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "advertiserId",
                    "channelId"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "Site"
                  },
                  "parameters": {
                    "advertiserId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "format": "int64",
                      "description": "The ID of the advertiser that owns the parent channel."
                    },
                    "partnerId": {
                      "format": "int64",
                      "location": "query",
                      "description": "The ID of the partner that owns the parent channel.",
                      "type": "string"
                    },
                    "channelId": {
                      "required": true,
                      "description": "Required. The ID of the parent channel in which the site will be created.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "format": "int64"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "advertiserId",
                    "channelId"
                  ],
                  "path": "v2/advertisers/{advertiserId}/channels/{+channelId}/sites",
                  "id": "displayvideo.advertisers.channels.sites.create",
                  "flatPath": "v2/advertisers/{advertiserId}/channels/{channelsId}/sites",
                  "request": {
                    "$ref": "Site"
                  },
                  "description": "Creates a site in a channel.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ]
                },
                "bulkEdit": {
                  "response": {
                    "$ref": "BulkEditSitesResponse"
                  },
                  "request": {
                    "$ref": "BulkEditSitesRequest"
                  },
                  "parameters": {
                    "channelId": {
                      "format": "int64",
                      "required": true,
                      "description": "Required. The ID of the parent channel to which the sites belong.",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "advertiserId": {
                      "required": true,
                      "format": "int64",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "displayvideo.advertisers.channels.sites.bulkEdit",
                  "parameterOrder": [
                    "advertiserId",
                    "channelId"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/advertisers/{advertiserId}/channels/{channelsId}/sites:bulkEdit",
                  "description": "Bulk edits sites under a single channel. The operation will delete the sites provided in BulkEditSitesRequest.deleted_sites and then create the sites provided in BulkEditSitesRequest.created_sites.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "path": "v2/advertisers/{advertiserId}/channels/{+channelId}/sites:bulkEdit"
                }
              }
            }
          }
        },
        "campaigns": {
          "methods": {
            "patch": {
              "request": {
                "$ref": "Campaign"
              },
              "flatPath": "v2/advertisers/{advertisersId}/campaigns/{campaignsId}",
              "httpMethod": "PATCH",
              "parameters": {
                "campaignId": {
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "Output only. The unique ID of the campaign. Assigned by the system."
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Required. The mask to control which fields to update."
                },
                "advertiserId": {
                  "description": "Output only. The unique ID of the advertiser the campaign belongs to.",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "format": "int64",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "parameterOrder": [
                "advertiserId",
                "campaignId"
              ],
              "id": "displayvideo.advertisers.campaigns.patch",
              "description": "Updates an existing campaign. Returns the updated campaign if successful.",
              "response": {
                "$ref": "Campaign"
              },
              "path": "v2/advertisers/{+advertiserId}/campaigns/{+campaignId}"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/campaigns",
              "description": "Lists campaigns in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, campaigns with `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
              "response": {
                "$ref": "ListCampaignsResponse"
              },
              "path": "v2/advertisers/{+advertiserId}/campaigns",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCampaigns` method. If not specified, the first page of results will be returned.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "description": "Allows filtering by campaign properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (\u003e=)` or `LESS THAN OR EQUAL TO (\u003c=)`. * The operator must be `EQUALS (=)`. * Supported fields: - `campaignId` - `displayName` - `entityStatus` - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) Examples: * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` campaigns under an advertiser: `(entityStatus=\"ENTITY_STATUS_ACTIVE\" OR entityStatus=\"ENTITY_STATUS_PAUSED\")` * All campaigns with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003c=\"2020-11-04T18:54:47Z\"` * All campaigns with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003e=\"2020-11-04T18:54:47Z\"` The length of this field should be no more than 500 characters.",
                  "type": "string"
                },
                "advertiserId": {
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "The ID of the advertiser to list campaigns for."
                },
                "orderBy": {
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` * `updateTime` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.campaigns.list"
            },
            "get": {
              "response": {
                "$ref": "Campaign"
              },
              "flatPath": "v2/advertisers/{advertisersId}/campaigns/{campaignsId}",
              "parameters": {
                "advertiserId": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The ID of the advertiser this campaign belongs to.",
                  "format": "int64",
                  "type": "string",
                  "pattern": "^[^/]+$"
                },
                "campaignId": {
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the campaign to fetch.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$"
                }
              },
              "parameterOrder": [
                "advertiserId",
                "campaignId"
              ],
              "httpMethod": "GET",
              "id": "displayvideo.advertisers.campaigns.get",
              "description": "Gets a campaign.",
              "path": "v2/advertisers/{+advertiserId}/campaigns/{+campaignId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ]
            },
            "delete": {
              "parameterOrder": [
                "advertiserId",
                "campaignId"
              ],
              "httpMethod": "DELETE",
              "path": "v2/advertisers/{+advertiserId}/campaigns/{+campaignId}",
              "id": "displayvideo.advertisers.campaigns.delete",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "campaignId": {
                  "type": "string",
                  "description": "The ID of the campaign we need to delete.",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64"
                },
                "advertiserId": {
                  "location": "path",
                  "description": "The ID of the advertiser this campaign belongs to.",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "format": "int64"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "description": "Permanently deletes a campaign. A deleted campaign cannot be recovered. The campaign should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.",
              "flatPath": "v2/advertisers/{advertisersId}/campaigns/{campaignsId}"
            },
            "create": {
              "response": {
                "$ref": "Campaign"
              },
              "path": "v2/advertisers/{+advertiserId}/campaigns",
              "id": "displayvideo.advertisers.campaigns.create",
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "Output only. The unique ID of the advertiser the campaign belongs to."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "description": "Creates a new campaign. Returns the newly created campaign if successful.",
              "flatPath": "v2/advertisers/{advertisersId}/campaigns",
              "parameterOrder": [
                "advertiserId"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "Campaign"
              }
            },
            "listAssignedTargetingOptions": {
              "flatPath": "v2/advertisers/{advertisersId}/campaigns/{campaignsId}:listAssignedTargetingOptions",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The ID of the advertiser the campaign belongs to.",
                  "format": "int64",
                  "location": "path"
                },
                "pageSize": {
                  "description": "Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is `5000`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingType desc`.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR` on the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` - `inheritance` Examples: * AssignedTargetingOptions of targeting type TARGETING_TYPE_LANGUAGE or TARGETING_TYPE_GENDER `targetingType=\"TARGETING_TYPE_LANGUAGE\" OR targetingType=\"TARGETING_TYPE_GENDER\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListCampaignAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                },
                "campaignId": {
                  "type": "string",
                  "format": "int64",
                  "description": "Required. The ID of the campaign to list assigned targeting options for.",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "required": true
                }
              },
              "path": "v2/advertisers/{+advertiserId}/campaigns/{+campaignId}:listAssignedTargetingOptions",
              "httpMethod": "GET",
              "response": {
                "$ref": "BulkListCampaignAssignedTargetingOptionsResponse"
              },
              "parameterOrder": [
                "advertiserId",
                "campaignId"
              ],
              "id": "displayvideo.advertisers.campaigns.listAssignedTargetingOptions",
              "description": "Lists assigned targeting options of a campaign across targeting types."
            }
          },
          "resources": {
            "targetingTypes": {
              "resources": {
                "assignedTargetingOptions": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                          "location": "query",
                          "format": "int32"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` - `inheritance` Examples: * AssignedTargetingOptions with ID 1 or 2 `assignedTargetingOptionId=\"1\" OR assignedTargetingOptionId=\"2\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters.",
                          "type": "string"
                        },
                        "advertiserId": {
                          "location": "path",
                          "description": "Required. The ID of the advertiser the campaign belongs to.",
                          "format": "int64",
                          "type": "string",
                          "required": true,
                          "pattern": "^[^/]+$"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `assignedTargetingOptionId desc`."
                        },
                        "targetingType": {
                          "type": "string",
                          "pattern": "^[^/]+$",
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ],
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ],
                          "description": "Required. Identifies the type of assigned targeting options to list. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_INVENTORY_SOURCE` * `TARGETING_TYPE_INVENTORY_SOURCE_GROUP` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_THIRD_PARTY_VERIFIER` * `TARGETING_TYPE_VIEWABILITY`",
                          "required": true,
                          "location": "path"
                        },
                        "campaignId": {
                          "format": "int64",
                          "description": "Required. The ID of the campaign to list assigned targeting options for.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^[^/]+$"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCampaignAssignedTargetingOptions` method. If not specified, the first page of results will be returned.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "displayvideo.advertisers.campaigns.targetingTypes.assignedTargetingOptions.list",
                      "httpMethod": "GET",
                      "flatPath": "v2/advertisers/{advertisersId}/campaigns/{campaignsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                      "response": {
                        "$ref": "ListCampaignAssignedTargetingOptionsResponse"
                      },
                      "description": "Lists the targeting options assigned to a campaign for a specified targeting type.",
                      "parameterOrder": [
                        "advertiserId",
                        "campaignId",
                        "targetingType"
                      ],
                      "path": "v2/advertisers/{+advertiserId}/campaigns/{+campaignId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ]
                    },
                    "get": {
                      "parameterOrder": [
                        "advertiserId",
                        "campaignId",
                        "targetingType",
                        "assignedTargetingOptionId"
                      ],
                      "response": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "flatPath": "v2/advertisers/{advertisersId}/campaigns/{campaignsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                      "path": "v2/advertisers/{+advertiserId}/campaigns/{+campaignId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                      "description": "Gets a single targeting option assigned to a campaign.",
                      "id": "displayvideo.advertisers.campaigns.targetingTypes.assignedTargetingOptions.get",
                      "parameters": {
                        "advertiserId": {
                          "location": "path",
                          "required": true,
                          "format": "int64",
                          "pattern": "^[^/]+$",
                          "type": "string",
                          "description": "Required. The ID of the advertiser the campaign belongs to."
                        },
                        "campaignId": {
                          "required": true,
                          "location": "path",
                          "format": "int64",
                          "description": "Required. The ID of the campaign the assigned targeting option belongs to.",
                          "type": "string",
                          "pattern": "^[^/]+$"
                        },
                        "targetingType": {
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ],
                          "type": "string",
                          "location": "path",
                          "pattern": "^[^/]+$",
                          "required": true,
                          "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_INVENTORY_SOURCE` * `TARGETING_TYPE_INVENTORY_SOURCE_GROUP` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_THIRD_PARTY_VERIFIER` * `TARGETING_TYPE_VIEWABILITY`",
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ]
                        },
                        "assignedTargetingOptionId": {
                          "type": "string",
                          "description": "Required. An identifier unique to the targeting type in this campaign that identifies the assigned targeting option being requested.",
                          "required": true,
                          "location": "path",
                          "pattern": "^[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            }
          }
        },
        "assets": {
          "methods": {
            "upload": {
              "parameterOrder": [
                "advertiserId"
              ],
              "description": "Uploads an asset. Returns the ID of the newly uploaded asset if successful. The asset file size should be no more than 10 MB for images, 200 MB for ZIP files, and 1 GB for videos. Must be used within the [multipart media upload process](/display-video/api/guides/how-tos/upload#multipart). Examples using provided client libraries can be found in our [Creating Creatives guide](/display-video/api/guides/creating-creatives/overview#upload_an_asset).",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "POST",
              "path": "v2/advertisers/{+advertiserId}/assets",
              "mediaUpload": {
                "protocols": {
                  "simple": {
                    "path": "/upload/v2/advertisers/{+advertiserId}/assets",
                    "multipart": true
                  }
                },
                "accept": [
                  "*/*"
                ]
              },
              "flatPath": "v2/advertisers/{advertisersId}/assets",
              "id": "displayvideo.advertisers.assets.upload",
              "supportsMediaUpload": true,
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The ID of the advertiser this asset belongs to.",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "CreateAssetRequest"
              },
              "response": {
                "$ref": "CreateAssetResponse"
              }
            }
          }
        },
        "targetingTypes": {
          "resources": {
            "assignedTargetingOptions": {
              "methods": {
                "get": {
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "targetingType": {
                      "pattern": "^[^/]+$",
                      "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ]
                    },
                    "assignedTargetingOptionId": {
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "description": "Required. An identifier unique to the targeting type in this advertiser that identifies the assigned targeting option being requested.",
                      "required": true,
                      "type": "string"
                    },
                    "advertiserId": {
                      "pattern": "^[^/]+$",
                      "format": "int64",
                      "description": "Required. The ID of the advertiser.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Gets a single targeting option assigned to an advertiser.",
                  "path": "v2/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType",
                    "assignedTargetingOptionId"
                  ],
                  "response": {
                    "$ref": "AssignedTargetingOption"
                  },
                  "flatPath": "v2/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}"
                },
                "delete": {
                  "path": "v2/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes an assigned targeting option from an advertiser.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "flatPath": "v2/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                  "parameters": {
                    "targetingType": {
                      "location": "path",
                      "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`",
                      "required": true,
                      "pattern": "^[^/]+$",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ]
                    },
                    "advertiserId": {
                      "format": "int64",
                      "description": "Required. The ID of the advertiser.",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "assignedTargetingOptionId": {
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "description": "Required. The ID of the assigned targeting option to delete.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType",
                    "assignedTargetingOptionId"
                  ],
                  "httpMethod": "DELETE"
                },
                "list": {
                  "description": "Lists the targeting options assigned to an advertiser.",
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType"
                  ],
                  "flatPath": "v2/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                  "path": "v2/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.list",
                  "response": {
                    "$ref": "ListAdvertiserAssignedTargetingOptionsResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `assignedTargetingOptionId desc`."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAdvertiserAssignedTargetingOptions` method. If not specified, the first page of results will be returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "targetingType": {
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "pattern": "^[^/]+$",
                      "description": "Required. Identifies the type of assigned targeting options to list. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`",
                      "location": "path",
                      "required": true,
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ],
                      "type": "string"
                    },
                    "advertiserId": {
                      "description": "Required. The ID of the advertiser.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "format": "int64"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` Examples: * AssignedTargetingOption with ID 123456 `assignedTargetingOptionId=\"123456\"` The length of this field should be no more than 500 characters."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "format": "int32",
                      "location": "query"
                    }
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.create",
                  "flatPath": "v2/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType"
                  ],
                  "response": {
                    "$ref": "AssignedTargetingOption"
                  },
                  "parameters": {
                    "advertiserId": {
                      "description": "Required. The ID of the advertiser.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "format": "int64"
                    },
                    "targetingType": {
                      "pattern": "^[^/]+$",
                      "required": true,
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "type": "string",
                      "location": "path",
                      "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`",
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ]
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v2/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                  "request": {
                    "$ref": "AssignedTargetingOption"
                  },
                  "description": "Assigns a targeting option to an advertiser. Returns the assigned targeting option if successful."
                }
              }
            }
          }
        },
        "creatives": {
          "methods": {
            "patch": {
              "request": {
                "$ref": "Creative"
              },
              "path": "v2/advertisers/{+advertiserId}/creatives/{+creativeId}",
              "parameters": {
                "creativeId": {
                  "description": "Output only. The unique ID of the creative. Assigned by the system.",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "advertiserId": {
                  "format": "int64",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "Output only. The unique ID of the advertiser the creative belongs to.",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Required. The mask to control which fields to update.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId",
                "creativeId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/creatives/{creativesId}",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "Creative"
              },
              "description": "Updates an existing creative. Returns the updated creative if successful.",
              "id": "displayvideo.advertisers.creatives.patch"
            },
            "list": {
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "flatPath": "v2/advertisers/{advertisersId}/creatives",
              "description": "Lists creatives in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, creatives with `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.creatives.list",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v2/advertisers/{+advertiserId}/creatives",
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "description": "Required. The ID of the advertiser to list creatives for.",
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "pattern": "^[^/]+$"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "type": "integer",
                  "location": "query"
                },
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `creativeId` (default) * `createTime` * `mediaDuration` * `dimensions` (sorts by width first, then by height) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `createTime desc`."
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCreatives` method. If not specified, the first page of results will be returned.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by creative properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restriction for the same field must be combined by `OR`. * Restriction for different fields must be combined by `AND`. * Between `(` and `)` there can only be restrictions combined by `OR` for the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)` for the following fields: - `entityStatus` - `creativeType`. - `dimensions` - `minDuration` - `maxDuration` - `approvalStatus` - `exchangeReviewStatus` - `dynamic` - `creativeId` * The operator must be `HAS (:)` for the following fields: - `lineItemIds` * The operator must be `GREATER THAN OR EQUAL TO (\u003e=)` or `LESS THAN OR EQUAL TO (\u003c=)` for the following fields: - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) * For `entityStatus`, `minDuration`, `maxDuration`, `updateTime`, and `dynamic`, there may be at most one restriction. * For `dimensions`, the value is in the form of `\"{width}x{height}\"`. * For `exchangeReviewStatus`, the value is in the form of `{exchange}-{reviewStatus}`. * For `minDuration` and `maxDuration`, the value is in the form of `\"{duration}s\"`. Only seconds are supported with millisecond granularity. * For `updateTime`, a creative resource's field value reflects the last time that a creative has been updated, which includes updates made by the system (e.g. creative review updates). * There may be multiple `lineItemIds` restrictions in order to search against multiple possible line item IDs. * There may be multiple `creativeId` restrictions in order to search against multiple possible creative IDs. Examples: * All native creatives: `creativeType=\"CREATIVE_TYPE_NATIVE\"` * All active creatives with 300x400 or 50x100 dimensions: `entityStatus=\"ENTITY_STATUS_ACTIVE\" AND (dimensions=\"300x400\" OR dimensions=\"50x100\")` * All dynamic creatives that are approved by AdX or AppNexus, with a minimum duration of 5 seconds and 200ms. `dynamic=\"true\" AND minDuration=\"5.2s\" AND (exchangeReviewStatus=\"EXCHANGE_GOOGLE_AD_MANAGER-REVIEW_STATUS_APPROVED\" OR exchangeReviewStatus=\"EXCHANGE_APPNEXUS-REVIEW_STATUS_APPROVED\")` * All video creatives that are associated with line item ID 1 or 2: `creativeType=\"CREATIVE_TYPE_VIDEO\" AND (lineItemIds:1 OR lineItemIds:2)` * Find creatives by multiple creative IDs: `creativeId=1 OR creativeId=2` * All creatives with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003e=\"2020-11-04T18:54:47Z\"` The length of this field should be no more than 500 characters.",
                  "location": "query"
                }
              }
            },
            "get": {
              "description": "Gets a creative.",
              "response": {
                "$ref": "Creative"
              },
              "path": "v2/advertisers/{+advertiserId}/creatives/{+creativeId}",
              "flatPath": "v2/advertisers/{advertisersId}/creatives/{creativesId}",
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The ID of the advertiser this creative belongs to."
                },
                "creativeId": {
                  "required": true,
                  "description": "Required. The ID of the creative to fetch.",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "location": "path",
                  "format": "int64"
                }
              },
              "httpMethod": "GET",
              "id": "displayvideo.advertisers.creatives.get",
              "parameterOrder": [
                "advertiserId",
                "creativeId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            },
            "delete": {
              "path": "v2/advertisers/{+advertiserId}/creatives/{+creativeId}",
              "description": "Deletes a creative. Returns error code `NOT_FOUND` if the creative does not exist. The creative should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, before it can be deleted.",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v2/advertisers/{advertisersId}/creatives/{creativesId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.creatives.delete",
              "parameters": {
                "creativeId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The ID of the creative to be deleted."
                },
                "advertiserId": {
                  "location": "path",
                  "format": "int64",
                  "description": "The ID of the advertiser this creative belongs to.",
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$"
                }
              },
              "parameterOrder": [
                "advertiserId",
                "creativeId"
              ]
            },
            "create": {
              "response": {
                "$ref": "Creative"
              },
              "description": "Creates a new creative. Returns the newly created creative if successful.",
              "parameterOrder": [
                "advertiserId"
              ],
              "request": {
                "$ref": "Creative"
              },
              "httpMethod": "POST",
              "id": "displayvideo.advertisers.creatives.create",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "description": "Output only. The unique ID of the advertiser the creative belongs to."
                }
              },
              "path": "v2/advertisers/{+advertiserId}/creatives",
              "flatPath": "v2/advertisers/{advertisersId}/creatives"
            }
          }
        },
        "negativeKeywordLists": {
          "resources": {
            "negativeKeywords": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "path": "v2/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords",
                  "flatPath": "v2/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords",
                  "description": "Lists negative keywords in a negative keyword list.",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. Must be between `1` and `1000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows filtering by negative keyword fields. Supported syntax: * Filter expressions for negative keyword currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `keywordValue` Examples: * All negative keywords for which the keyword value contains \"google\": `keywordValue : \"google\"`"
                    },
                    "advertiserId": {
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "format": "int64"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListNegativeKeywords` method. If not specified, the first page of results will be returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "negativeKeywordListId": {
                      "type": "string",
                      "description": "Required. The ID of the parent negative keyword list to which the requested negative keywords belong.",
                      "format": "int64",
                      "required": true,
                      "location": "path",
                      "pattern": "^[^/]+$"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field by which to sort the list. Acceptable values are: * `keywordValue` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `keywordValue desc`."
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId"
                  ],
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.list",
                  "response": {
                    "$ref": "ListNegativeKeywordsResponse"
                  }
                },
                "create": {
                  "path": "v2/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords",
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.create",
                  "flatPath": "v2/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords",
                  "parameters": {
                    "negativeKeywordListId": {
                      "format": "int64",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "description": "Required. The ID of the parent negative keyword list in which the negative keyword will be created.",
                      "required": true
                    },
                    "advertiserId": {
                      "required": true,
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "format": "int64",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "request": {
                    "$ref": "NegativeKeyword"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId"
                  ],
                  "description": "Creates a negative keyword in a negative keyword list.",
                  "response": {
                    "$ref": "NegativeKeyword"
                  }
                },
                "replace": {
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.replace",
                  "description": "Replaces all negative keywords in a single negative keyword list. The operation will replace the keywords in a negative keyword list with keywords provided in ReplaceNegativeKeywordsRequest.new_negative_keywords.",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId"
                  ],
                  "parameters": {
                    "negativeKeywordListId": {
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The ID of the parent negative keyword list to which the negative keywords belong.",
                      "location": "path",
                      "format": "int64"
                    },
                    "advertiserId": {
                      "format": "int64",
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ReplaceNegativeKeywordsResponse"
                  },
                  "flatPath": "v2/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords:replace",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "POST",
                  "path": "v2/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords:replace",
                  "request": {
                    "$ref": "ReplaceNegativeKeywordsRequest"
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Deletes a negative keyword from a negative keyword list.",
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v2/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords/{+keywordValue}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId",
                    "keywordValue"
                  ],
                  "flatPath": "v2/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords/{negativeKeywordsId}",
                  "parameters": {
                    "advertiserId": {
                      "format": "int64",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "required": true
                    },
                    "keywordValue": {
                      "location": "path",
                      "required": true,
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "description": "Required. The keyword value of the negative keyword to delete."
                    },
                    "negativeKeywordListId": {
                      "format": "int64",
                      "type": "string",
                      "description": "Required. The ID of the parent negative keyword list to which the negative keyword belongs.",
                      "location": "path",
                      "required": true,
                      "pattern": "^[^/]+$"
                    }
                  }
                },
                "bulkEdit": {
                  "description": "Bulk edits negative keywords in a single negative keyword list. The operation will delete the negative keywords provided in BulkEditNegativeKeywordsRequest.deleted_negative_keywords and then create the negative keywords provided in BulkEditNegativeKeywordsRequest.created_negative_keywords. This operation is guaranteed to be atomic and will never result in a partial success or partial failure.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "BulkEditNegativeKeywordsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId"
                  ],
                  "path": "v2/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords:bulkEdit",
                  "flatPath": "v2/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords:bulkEdit",
                  "parameters": {
                    "advertiserId": {
                      "location": "path",
                      "type": "string",
                      "format": "int64",
                      "required": true,
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs."
                    },
                    "negativeKeywordListId": {
                      "type": "string",
                      "description": "Required. The ID of the parent negative keyword list to which the negative keywords belong.",
                      "format": "int64",
                      "required": true,
                      "pattern": "^[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.bulkEdit",
                  "response": {
                    "$ref": "BulkEditNegativeKeywordsResponse"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameterOrder": [
                "advertiserId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/negativeKeywordLists",
              "description": "Lists negative keyword lists based on a given advertiser id.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "ListNegativeKeywordListsResponse"
              },
              "httpMethod": "GET",
              "path": "v2/advertisers/{+advertiserId}/negativeKeywordLists",
              "id": "displayvideo.advertisers.negativeKeywordLists.list",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListNegativeKeywordLists` method. If not specified, the first page of results will be returned."
                },
                "advertiserId": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The ID of the DV360 advertiser to which the fetched negative keyword lists belong.",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Requested page size. Must be between `1` and `100`. Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "type": "integer",
                  "location": "query"
                }
              }
            },
            "delete": {
              "id": "displayvideo.advertisers.negativeKeywordLists.delete",
              "path": "v2/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}",
              "httpMethod": "DELETE",
              "description": "Deletes a negative keyword list given an advertiser ID and a negative keyword list ID.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListsId}",
              "parameterOrder": [
                "advertiserId",
                "negativeKeywordListId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The ID of the DV360 advertiser to which the negative keyword list belongs.",
                  "type": "string"
                },
                "negativeKeywordListId": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "type": "string",
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the negative keyword list to delete."
                }
              }
            },
            "patch": {
              "parameters": {
                "updateMask": {
                  "description": "Required. The mask to control which fields to update.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "negativeKeywordListId": {
                  "type": "string",
                  "format": "int64",
                  "required": true,
                  "description": "Output only. The unique ID of the negative keyword list. Assigned by the system.",
                  "location": "path"
                },
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The ID of the DV360 advertiser to which the negative keyword list belongs.",
                  "format": "int64"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId",
                "negativeKeywordListId"
              ],
              "description": "Updates a negative keyword list. Returns the updated negative keyword list if successful.",
              "httpMethod": "PATCH",
              "flatPath": "v2/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListId}",
              "path": "v2/advertisers/{+advertiserId}/negativeKeywordLists/{negativeKeywordListId}",
              "response": {
                "$ref": "NegativeKeywordList"
              },
              "id": "displayvideo.advertisers.negativeKeywordLists.patch",
              "request": {
                "$ref": "NegativeKeywordList"
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v2/advertisers/{+advertiserId}/negativeKeywordLists",
              "parameters": {
                "advertiserId": {
                  "description": "Required. The ID of the DV360 advertiser to which the negative keyword list will belong.",
                  "location": "path",
                  "type": "string",
                  "format": "int64",
                  "required": true,
                  "pattern": "^[^/]+$"
                }
              },
              "description": "Creates a new negative keyword list. Returns the newly created negative keyword list if successful.",
              "flatPath": "v2/advertisers/{advertisersId}/negativeKeywordLists",
              "id": "displayvideo.advertisers.negativeKeywordLists.create",
              "request": {
                "$ref": "NegativeKeywordList"
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "NegativeKeywordList"
              },
              "parameterOrder": [
                "advertiserId"
              ]
            },
            "get": {
              "id": "displayvideo.advertisers.negativeKeywordLists.get",
              "flatPath": "v2/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListsId}",
              "parameterOrder": [
                "advertiserId",
                "negativeKeywordListId"
              ],
              "response": {
                "$ref": "NegativeKeywordList"
              },
              "httpMethod": "GET",
              "path": "v2/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}",
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "description": "Required. The ID of the DV360 advertiser to which the fetched negative keyword list belongs.",
                  "location": "path"
                },
                "negativeKeywordListId": {
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the negative keyword list to fetch.",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "type": "string"
                }
              },
              "description": "Gets a negative keyword list given an advertiser ID and a negative keyword list ID.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            }
          }
        },
        "insertionOrders": {
          "methods": {
            "listAssignedTargetingOptions": {
              "description": "Lists assigned targeting options of an insertion order across targeting types.",
              "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}:listAssignedTargetingOptions",
              "httpMethod": "GET",
              "id": "displayvideo.advertisers.insertionOrders.listAssignedTargetingOptions",
              "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}:listAssignedTargetingOptions",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListInsertionOrderAssignedTargetingOptions` method. If not specified, the first page of results will be returned.",
                  "type": "string",
                  "location": "query"
                },
                "insertionOrderId": {
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the insertion order to list assigned targeting options for.",
                  "pattern": "^[^/]+$",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR` on the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` - `inheritance` Examples: * AssignedTargetingOptions of targeting type TARGETING_TYPE_PROXIMITY_LOCATION_LIST or TARGETING_TYPE_CHANNEL `targetingType=\"TARGETING_TYPE_PROXIMITY_LOCATION_LIST\" OR targetingType=\"TARGETING_TYPE_CHANNEL\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters.",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is `5000`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The ID of the advertiser the insertion order belongs to.",
                  "format": "int64",
                  "required": true
                },
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingType desc`.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "advertiserId",
                "insertionOrderId"
              ],
              "response": {
                "$ref": "BulkListInsertionOrderAssignedTargetingOptionsResponse"
              }
            },
            "create": {
              "description": "Creates a new insertion order. Returns the newly created insertion order if successful.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "InsertionOrder"
              },
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.insertionOrders.create",
              "path": "v2/advertisers/{+advertiserId}/insertionOrders",
              "request": {
                "$ref": "InsertionOrder"
              },
              "flatPath": "v2/advertisers/{advertisersId}/insertionOrders",
              "parameters": {
                "advertiserId": {
                  "required": true,
                  "type": "string",
                  "format": "int64",
                  "description": "Output only. The unique ID of the advertiser the insertion order belongs to.",
                  "pattern": "^[^/]+$",
                  "location": "path"
                }
              }
            },
            "list": {
              "response": {
                "$ref": "ListInsertionOrdersResponse"
              },
              "id": "displayvideo.advertisers.insertionOrders.list",
              "path": "v2/advertisers/{+advertiserId}/insertionOrders",
              "description": "Lists insertion orders in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, insertion orders with `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
              "parameterOrder": [
                "advertiserId"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/advertisers/{advertisersId}/insertionOrders",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the advertiser to list insertion orders for.",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "format": "int32",
                  "type": "integer"
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field by which to sort the list. Acceptable values are: * \"displayName\" (default) * \"entityStatus\" * \"updateTime\" The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInsertionOrders` method. If not specified, the first page of results will be returned.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by insertion order properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `budget.budget_segments.date_range.end_date` must be LESS THAN (\u003c). * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (\u003e=)` or `LESS THAN OR EQUAL TO (\u003c=)`. * The operators used on all other fields must be `EQUALS (=)`. * Supported fields: - `campaignId` - `displayName` - `entityStatus` - `budget.budget_segments.date_range.end_date` (input as YYYY-MM-DD) - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) Examples: * All insertion orders under a campaign: `campaignId=\"1234\"` * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` insertion orders under an advertiser: `(entityStatus=\"ENTITY_STATUS_ACTIVE\" OR entityStatus=\"ENTITY_STATUS_PAUSED\")` * All insertion orders whose budget segments' dates end before March 28, 2019: `budget.budget_segments.date_range.end_date\u003c\"2019-03-28\"` * All insertion orders with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003c=\"2020-11-04T18:54:47Z\"` * All insertion orders with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003e=\"2020-11-04T18:54:47Z\"` The length of this field should be no more than 500 characters.",
                  "location": "query"
                }
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId",
                "insertionOrderId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}",
              "id": "displayvideo.advertisers.insertionOrders.get",
              "parameters": {
                "advertiserId": {
                  "description": "Required. The ID of the advertiser this insertion order belongs to.",
                  "location": "path",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "required": true
                },
                "insertionOrderId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the insertion order to fetch."
                }
              },
              "response": {
                "$ref": "InsertionOrder"
              },
              "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}",
              "httpMethod": "GET",
              "description": "Gets an insertion order. Returns error code `NOT_FOUND` if the insertion order does not exist."
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "advertiserId",
                "insertionOrderId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.insertionOrders.delete",
              "description": "Deletes an insertion order. Returns error code `NOT_FOUND` if the insertion order does not exist. The insertion order should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.",
              "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}",
              "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}",
              "parameters": {
                "insertionOrderId": {
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "description": "The ID of the insertion order to delete.",
                  "pattern": "^[^/]+$",
                  "type": "string"
                },
                "advertiserId": {
                  "type": "string",
                  "description": "The ID of the advertiser this insertion order belongs to.",
                  "location": "path",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "format": "int64"
                }
              }
            },
            "patch": {
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "description": "Output only. The unique ID of the advertiser the insertion order belongs to.",
                  "pattern": "^[^/]+$",
                  "required": true
                },
                "insertionOrderId": {
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Output only. The unique ID of the insertion order. Assigned by the system.",
                  "pattern": "^[^/]+$"
                },
                "updateMask": {
                  "description": "Required. The mask to control which fields to update.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                }
              },
              "id": "displayvideo.advertisers.insertionOrders.patch",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "advertiserId",
                "insertionOrderId"
              ],
              "request": {
                "$ref": "InsertionOrder"
              },
              "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}",
              "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}",
              "response": {
                "$ref": "InsertionOrder"
              },
              "description": "Updates an existing insertion order. Returns the updated insertion order if successful.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            }
          },
          "resources": {
            "targetingTypes": {
              "resources": {
                "assignedTargetingOptions": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "advertiserId",
                        "insertionOrderId",
                        "targetingType"
                      ],
                      "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                      "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                      "id": "displayvideo.advertisers.insertionOrders.targetingTypes.assignedTargetingOptions.list",
                      "response": {
                        "$ref": "ListInsertionOrderAssignedTargetingOptionsResponse"
                      },
                      "description": "Lists the targeting options assigned to an insertion order.",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "advertiserId": {
                          "required": true,
                          "description": "Required. The ID of the advertiser the insertion order belongs to.",
                          "format": "int64",
                          "type": "string",
                          "pattern": "^[^/]+$",
                          "location": "path"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `assignedTargetingOptionId desc`.",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInsertionOrderAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                        },
                        "filter": {
                          "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` - `inheritance` Examples: * AssignedTargetingOptions with ID 1 or 2 `assignedTargetingOptionId=\"1\" OR assignedTargetingOptionId=\"2\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                          "location": "query"
                        },
                        "insertionOrderId": {
                          "format": "int64",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The ID of the insertion order to list assigned targeting options for.",
                          "required": true,
                          "pattern": "^[^/]+$"
                        },
                        "targetingType": {
                          "required": true,
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ],
                          "type": "string",
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ],
                          "location": "path",
                          "description": "Required. Identifies the type of assigned targeting options to list.",
                          "pattern": "^[^/]+$"
                        }
                      }
                    },
                    "delete": {
                      "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                      "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "description": "Deletes an assigned targeting option from an insertion order. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_KEYWORD` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_VIEWABILITY`",
                      "parameters": {
                        "targetingType": {
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ],
                          "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_KEYWORD` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_VIEWABILITY`",
                          "type": "string",
                          "location": "path",
                          "pattern": "^[^/]+$",
                          "required": true,
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ]
                        },
                        "insertionOrderId": {
                          "location": "path",
                          "format": "int64",
                          "type": "string",
                          "required": true,
                          "description": "Required. The ID of the insertion order the assigned targeting option belongs to.",
                          "pattern": "^[^/]+$"
                        },
                        "assignedTargetingOptionId": {
                          "type": "string",
                          "description": "Required. The ID of the assigned targeting option to delete.",
                          "location": "path",
                          "pattern": "^[^/]+$",
                          "required": true
                        },
                        "advertiserId": {
                          "required": true,
                          "type": "string",
                          "pattern": "^[^/]+$",
                          "location": "path",
                          "format": "int64",
                          "description": "Required. The ID of the advertiser the insertion order belongs to."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "parameterOrder": [
                        "advertiserId",
                        "insertionOrderId",
                        "targetingType",
                        "assignedTargetingOptionId"
                      ],
                      "httpMethod": "DELETE",
                      "id": "displayvideo.advertisers.insertionOrders.targetingTypes.assignedTargetingOptions.delete"
                    },
                    "get": {
                      "id": "displayvideo.advertisers.insertionOrders.targetingTypes.assignedTargetingOptions.get",
                      "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                      "parameterOrder": [
                        "advertiserId",
                        "insertionOrderId",
                        "targetingType",
                        "assignedTargetingOptionId"
                      ],
                      "response": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "parameters": {
                        "insertionOrderId": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The ID of the insertion order the assigned targeting option belongs to.",
                          "pattern": "^[^/]+$",
                          "format": "int64",
                          "required": true
                        },
                        "targetingType": {
                          "type": "string",
                          "description": "Required. Identifies the type of this assigned targeting option.",
                          "location": "path",
                          "pattern": "^[^/]+$",
                          "required": true,
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ],
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ]
                        },
                        "assignedTargetingOptionId": {
                          "required": true,
                          "description": "Required. An identifier unique to the targeting type in this insertion order that identifies the assigned targeting option being requested.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^[^/]+$"
                        },
                        "advertiserId": {
                          "format": "int64",
                          "location": "path",
                          "description": "Required. The ID of the advertiser the insertion order belongs to.",
                          "pattern": "^[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Gets a single targeting option assigned to an insertion order."
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "parameters": {
                        "insertionOrderId": {
                          "pattern": "^[^/]+$",
                          "format": "int64",
                          "description": "Required. The ID of the insertion order the assigned targeting option will belong to.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "targetingType": {
                          "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_KEYWORD` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_VIEWABILITY`",
                          "pattern": "^[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ],
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ]
                        },
                        "advertiserId": {
                          "type": "string",
                          "description": "Required. The ID of the advertiser the insertion order belongs to.",
                          "location": "path",
                          "required": true,
                          "pattern": "^[^/]+$",
                          "format": "int64"
                        }
                      },
                      "flatPath": "v2/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                      "path": "v2/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                      "parameterOrder": [
                        "advertiserId",
                        "insertionOrderId",
                        "targetingType"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "description": "Assigns a targeting option to an insertion order. Returns the assigned targeting option if successful. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_KEYWORD` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_VIEWABILITY`",
                      "id": "displayvideo.advertisers.insertionOrders.targetingTypes.assignedTargetingOptions.create",
                      "response": {
                        "$ref": "AssignedTargetingOption"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "locationLists": {
          "resources": {
            "assignedLocations": {
              "methods": {
                "bulkEdit": {
                  "description": "Bulk edits multiple assignments between locations and a single location list. The operation will delete the assigned locations provided in BulkEditAssignedLocationsRequest.deleted_assigned_locations and then create the assigned locations provided in BulkEditAssignedLocationsRequest.created_assigned_locations.",
                  "request": {
                    "$ref": "BulkEditAssignedLocationsRequest"
                  },
                  "response": {
                    "$ref": "BulkEditAssignedLocationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/advertisers/{advertiserId}/locationLists/{locationListsId}/assignedLocations:bulkEdit",
                  "parameters": {
                    "advertiserId": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                      "location": "path",
                      "format": "int64"
                    },
                    "locationListId": {
                      "description": "Required. The ID of the location list to which these assignments are assigned.",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true,
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "path": "v2/advertisers/{advertiserId}/locationLists/{+locationListId}/assignedLocations:bulkEdit",
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.bulkEdit"
                },
                "create": {
                  "path": "v2/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "flatPath": "v2/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "response": {
                    "$ref": "AssignedLocation"
                  },
                  "parameters": {
                    "locationListId": {
                      "description": "Required. The ID of the location list for which the assignment will be created.",
                      "required": true,
                      "type": "string",
                      "format": "int64",
                      "location": "path"
                    },
                    "advertiserId": {
                      "required": true,
                      "type": "string",
                      "format": "int64",
                      "location": "path",
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs."
                    }
                  },
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId"
                  ],
                  "description": "Creates an assignment between a location and a location list.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.create",
                  "request": {
                    "$ref": "AssignedLocation"
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListAssignedLocationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId"
                  ],
                  "description": "Lists locations assigned to a location list.",
                  "flatPath": "v2/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.list",
                  "httpMethod": "GET",
                  "path": "v2/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "parameters": {
                    "locationListId": {
                      "description": "Required. The ID of the location list to which these assignments are assigned.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "format": "int64"
                    },
                    "advertiserId": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                      "location": "path",
                      "format": "int64"
                    },
                    "pageSize": {
                      "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field by which to sort the list. Acceptable values are: * `assignedLocationId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `assignedLocationId desc`.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Allows filtering by location list assignment fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedLocationId` The length of this field should be no more than 500 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAssignedLocations` method. If not specified, the first page of results will be returned."
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes the assignment between a location and a location list.",
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "assignedLocationId": {
                      "format": "int64",
                      "type": "string",
                      "description": "Required. The ID of the assigned location to delete.",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "locationListId": {
                      "description": "Required. The ID of the location list to which this assignment is assigned.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "format": "int64"
                    },
                    "advertiserId": {
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                      "format": "int64",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v2/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations/{+assignedLocationId}",
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId",
                    "assignedLocationId"
                  ],
                  "flatPath": "v2/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations/{assignedLocationsId}"
                }
              }
            }
          },
          "methods": {
            "create": {
              "id": "displayvideo.advertisers.locationLists.create",
              "description": "Creates a new location list. Returns the newly created location list if successful.",
              "response": {
                "$ref": "LocationList"
              },
              "path": "v2/advertisers/{+advertiserId}/locationLists",
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "location": "path",
                  "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$"
                }
              },
              "request": {
                "$ref": "LocationList"
              },
              "parameterOrder": [
                "advertiserId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/locationLists",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            },
            "list": {
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.locationLists.list",
              "path": "v2/advertisers/{+advertiserId}/locationLists",
              "response": {
                "$ref": "ListLocationListsResponse"
              },
              "flatPath": "v2/advertisers/{advertisersId}/locationLists",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "advertiserId": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The ID of the DV360 advertiser to which the fetched location lists belong.",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "format": "int64"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLocationLists` method. If not specified, the first page of results will be returned.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows filtering by location list fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `locationType` Examples: * All regional location list: `locationType=\"TARGETING_LOCATION_TYPE_REGIONAL\"` * All proximity location list: `locationType=\"TARGETING_LOCATION_TYPE_PROXIMITY\"`"
                },
                "pageSize": {
                  "description": "Requested page size. Must be between `1` and `100`. Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `locationListId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`."
                }
              },
              "httpMethod": "GET",
              "description": "Lists location lists based on a given advertiser id."
            },
            "patch": {
              "flatPath": "v2/advertisers/{advertisersId}/locationLists/{locationListId}",
              "path": "v2/advertisers/{+advertiserId}/locationLists/{locationListId}",
              "request": {
                "$ref": "LocationList"
              },
              "id": "displayvideo.advertisers.locationLists.patch",
              "response": {
                "$ref": "LocationList"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Updates a location list. Returns the updated location list if successful.",
              "parameters": {
                "locationListId": {
                  "description": "Output only. The unique ID of the location list. Assigned by the system.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "format": "int64"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "Required. The mask to control which fields to update."
                },
                "advertiserId": {
                  "description": "Required. The ID of the DV360 advertiser to which the location lists belongs.",
                  "format": "int64",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$"
                }
              },
              "parameterOrder": [
                "advertiserId",
                "locationListId"
              ]
            },
            "get": {
              "parameterOrder": [
                "advertiserId",
                "locationListId"
              ],
              "response": {
                "$ref": "LocationList"
              },
              "id": "displayvideo.advertisers.locationLists.get",
              "parameters": {
                "locationListId": {
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "location": "path",
                  "format": "int64",
                  "description": "Required. The ID of the location list to fetch.",
                  "required": true
                },
                "advertiserId": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The ID of the DV360 advertiser to which the fetched location list belongs.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "location": "path"
                }
              },
              "description": "Gets a location list.",
              "httpMethod": "GET",
              "flatPath": "v2/advertisers/{advertisersId}/locationLists/{locationListsId}",
              "path": "v2/advertisers/{+advertiserId}/locationLists/{+locationListId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            }
          }
        },
        "invoices": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListInvoicesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInvoices` method. If not specified, the first page of results will be returned."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "issueMonth": {
                  "description": "The month to list the invoices for. If not set, the request will retrieve invoices for the previous month. Must be in the format YYYYMM.",
                  "type": "string",
                  "location": "query"
                },
                "loiSapinInvoiceType": {
                  "description": "Select type of invoice to retrieve for Loi Sapin advertisers. Only applicable to Loi Sapin advertisers. Will be ignored otherwise.",
                  "location": "query",
                  "type": "string",
                  "enumDescriptions": [
                    "Value is not specified.",
                    "Invoices with Media cost.",
                    "Invoices with Platform fee."
                  ],
                  "enum": [
                    "LOI_SAPIN_INVOICE_TYPE_UNSPECIFIED",
                    "LOI_SAPIN_INVOICE_TYPE_MEDIA",
                    "LOI_SAPIN_INVOICE_TYPE_PLATFORM"
                  ]
                },
                "advertiserId": {
                  "required": true,
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser to list invoices for.",
                  "type": "string",
                  "format": "int64",
                  "location": "path"
                }
              },
              "id": "displayvideo.advertisers.invoices.list",
              "flatPath": "v2/advertisers/{advertisersId}/invoices",
              "description": "Lists invoices posted for an advertiser in a given month. Invoices generated by billing profiles with a \"Partner\" invoice level are not retrievable through this method.",
              "parameterOrder": [
                "advertiserId"
              ],
              "httpMethod": "GET",
              "path": "v2/advertisers/{+advertiserId}/invoices"
            },
            "lookupInvoiceCurrency": {
              "path": "v2/advertisers/{+advertiserId}/invoices:lookupInvoiceCurrency",
              "parameters": {
                "invoiceMonth": {
                  "location": "query",
                  "description": "Month for which the currency is needed. If not set, the request will return existing currency settings for the advertiser. Must be in the format YYYYMM.",
                  "type": "string"
                },
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The ID of the advertiser to lookup currency for.",
                  "pattern": "^[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "response": {
                "$ref": "LookupInvoiceCurrencyResponse"
              },
              "id": "displayvideo.advertisers.invoices.lookupInvoiceCurrency",
              "httpMethod": "GET",
              "description": "Retrieves the invoice currency used by an advertiser in a given month.",
              "parameterOrder": [
                "advertiserId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/invoices:lookupInvoiceCurrency"
            }
          }
        },
        "lineItems": {
          "resources": {
            "targetingTypes": {
              "resources": {
                "assignedTargetingOptions": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.list",
                      "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                      "description": "Lists the targeting options assigned to a line item.",
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType"
                      ],
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                          "type": "integer"
                        },
                        "advertiserId": {
                          "required": true,
                          "pattern": "^[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The ID of the advertiser the line item belongs to.",
                          "format": "int64"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLineItemAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                        },
                        "orderBy": {
                          "description": "Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `assignedTargetingOptionId desc`.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` - `inheritance` Examples: * AssignedTargetingOptions with ID 1 or 2 `assignedTargetingOptionId=\"1\" OR assignedTargetingOptionId=\"2\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters.",
                          "type": "string"
                        },
                        "lineItemId": {
                          "type": "string",
                          "description": "Required. The ID of the line item to list assigned targeting options for.",
                          "location": "path",
                          "pattern": "^[^/]+$",
                          "format": "int64",
                          "required": true
                        },
                        "targetingType": {
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ],
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ],
                          "description": "Required. Identifies the type of assigned targeting options to list.",
                          "pattern": "^[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                      "response": {
                        "$ref": "ListLineItemAssignedTargetingOptionsResponse"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType",
                        "assignedTargetingOptionId"
                      ],
                      "description": "Deletes an assigned targeting option from a line item. Requests to this endpoint cannot be made concurrently with the following requests updating the same line item: * BulkEditLineItemAssignedTargetingOptions * UpdateLineItem * CreateLineItemAssignedTargetingOption * DeleteLineItemAssignedTargetingOption",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameters": {
                        "lineItemId": {
                          "pattern": "^[^/]+$",
                          "location": "path",
                          "format": "int64",
                          "description": "Required. The ID of the line item the assigned targeting option belongs to.",
                          "required": true,
                          "type": "string"
                        },
                        "targetingType": {
                          "description": "Required. Identifies the type of this assigned targeting option.",
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ],
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^[^/]+$",
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ]
                        },
                        "advertiserId": {
                          "pattern": "^[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The ID of the advertiser the line item belongs to.",
                          "format": "int64"
                        },
                        "assignedTargetingOptionId": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The ID of the assigned targeting option to delete.",
                          "type": "string",
                          "pattern": "^[^/]+$"
                        }
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                      "response": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType"
                      ],
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.create",
                      "description": "Assigns a targeting option to a line item. Returns the assigned targeting option if successful. Requests to this endpoint cannot be made concurrently with the following requests updating the same line item: * BulkEditLineItemAssignedTargetingOptions * UpdateLineItem * CreateLineItemAssignedTargetingOption * DeleteLineItemAssignedTargetingOption",
                      "parameters": {
                        "lineItemId": {
                          "location": "path",
                          "format": "int64",
                          "description": "Required. The ID of the line item the assigned targeting option will belong to.",
                          "type": "string",
                          "pattern": "^[^/]+$",
                          "required": true
                        },
                        "targetingType": {
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ],
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ],
                          "type": "string",
                          "required": true,
                          "description": "Required. Identifies the type of this assigned targeting option.",
                          "location": "path",
                          "pattern": "^[^/]+$"
                        },
                        "advertiserId": {
                          "required": true,
                          "description": "Required. The ID of the advertiser the line item belongs to.",
                          "type": "string",
                          "location": "path",
                          "format": "int64",
                          "pattern": "^[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ]
                    },
                    "get": {
                      "description": "Gets a single targeting option assigned to a line item.",
                      "parameters": {
                        "assignedTargetingOptionId": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. An identifier unique to the targeting type in this line item that identifies the assigned targeting option being requested.",
                          "pattern": "^[^/]+$"
                        },
                        "advertiserId": {
                          "pattern": "^[^/]+$",
                          "format": "int64",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The ID of the advertiser the line item belongs to."
                        },
                        "lineItemId": {
                          "required": true,
                          "type": "string",
                          "format": "int64",
                          "description": "Required. The ID of the line item the assigned targeting option belongs to.",
                          "location": "path",
                          "pattern": "^[^/]+$"
                        },
                        "targetingType": {
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE",
                            "TARGETING_TYPE_POI",
                            "TARGETING_TYPE_BUSINESS_CHAIN",
                            "TARGETING_TYPE_CONTENT_DURATION",
                            "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                            "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                            "TARGETING_TYPE_OMID",
                            "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                            "TARGETING_TYPE_CONTENT_GENRE"
                          ],
                          "location": "path",
                          "pattern": "^[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. Identifies the type of this assigned targeting option.",
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges.",
                            "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                            "Target ads around locations of a business chain within a specific geo region.",
                            "Target ads to a specific video content duration.",
                            "Target ads to a specific video content stream type.",
                            "Target ads to a specific native content position.",
                            "Target ads in an Open Measurement enabled inventory.",
                            "Target ads to a specific audio content type.",
                            "Target ads to a specific content genre."
                          ]
                        }
                      },
                      "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                      "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType",
                        "assignedTargetingOptionId"
                      ],
                      "response": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.get"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "delete": {
              "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}",
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "description": "Deletes a line item. Returns error code `NOT_FOUND` if the line item does not exist. The line item should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.",
              "parameters": {
                "lineItemId": {
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the line item to delete.",
                  "required": true
                },
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "description": "The ID of the advertiser this line item belongs to.",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "id": "displayvideo.advertisers.lineItems.delete",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            },
            "create": {
              "description": "Creates a new line item. Returns the newly created line item if successful.",
              "httpMethod": "POST",
              "id": "displayvideo.advertisers.lineItems.create",
              "request": {
                "$ref": "LineItem"
              },
              "response": {
                "$ref": "LineItem"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v2/advertisers/{+advertiserId}/lineItems",
              "parameters": {
                "advertiserId": {
                  "required": true,
                  "type": "string",
                  "description": "Output only. The unique ID of the advertiser the line item belongs to.",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2/advertisers/{advertisersId}/lineItems",
              "parameterOrder": [
                "advertiserId"
              ]
            },
            "bulkListAssignedTargetingOptions": {
              "parameterOrder": [
                "advertiserId"
              ],
              "path": "v2/advertisers/{+advertiserId}/lineItems:bulkListAssignedTargetingOptions",
              "description": "Lists assigned targeting options for multiple line items across targeting types.",
              "response": {
                "$ref": "BulkListAssignedTargetingOptionsResponse"
              },
              "flatPath": "v2/advertisers/{advertisersId}/lineItems:bulkListAssignedTargetingOptions",
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is '5000'. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to the `BulkListAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                },
                "advertiserId": {
                  "location": "path",
                  "description": "Required. The ID of the advertiser the line items belongs to.",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true
                },
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `lineItemId` (default) * `assignedTargetingOption.targetingType` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingType desc`.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR` on the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` - `inheritance` Examples: * AssignedTargetingOptions of targeting type TARGETING_TYPE_PROXIMITY_LOCATION_LIST or TARGETING_TYPE_CHANNEL `targetingType=\"TARGETING_TYPE_PROXIMITY_LOCATION_LIST\" OR targetingType=\"TARGETING_TYPE_CHANNEL\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters.",
                  "location": "query"
                },
                "lineItemIds": {
                  "location": "query",
                  "format": "int64",
                  "description": "Required. The IDs of the line items to list assigned targeting options for.",
                  "type": "string",
                  "repeated": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.lineItems.bulkListAssignedTargetingOptions"
            },
            "generateDefault": {
              "flatPath": "v2/advertisers/{advertisersId}/lineItems:generateDefault",
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "description": "Required. The ID of the advertiser this line item belongs to.",
                  "location": "path",
                  "pattern": "^[^/]+$"
                }
              },
              "request": {
                "$ref": "GenerateDefaultLineItemRequest"
              },
              "response": {
                "$ref": "LineItem"
              },
              "httpMethod": "POST",
              "id": "displayvideo.advertisers.lineItems.generateDefault",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Creates a new line item with settings (including targeting) inherited from the insertion order and an `ENTITY_STATUS_DRAFT` entity_status. Returns the newly created line item if successful. There are default values based on the three fields: * The insertion order's insertion_order_type * The insertion order's automation_type * The given line_item_type",
              "parameterOrder": [
                "advertiserId"
              ],
              "path": "v2/advertisers/{+advertiserId}/lineItems:generateDefault"
            },
            "bulkEditAssignedTargetingOptions": {
              "flatPath": "v2/advertisers/{advertisersId}/lineItems:bulkEditAssignedTargetingOptions",
              "request": {
                "$ref": "BulkEditAssignedTargetingOptionsRequest"
              },
              "path": "v2/advertisers/{+advertiserId}/lineItems:bulkEditAssignedTargetingOptions",
              "description": "Bulk edits targeting options under multiple line items. The operation will delete the assigned targeting options provided in BulkEditAssignedTargetingOptionsRequest.delete_requests and then create the assigned targeting options provided in BulkEditAssignedTargetingOptionsRequest.create_requests .",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "description": "Required. The ID of the advertiser the line items belong to.",
                  "location": "path",
                  "pattern": "^[^/]+$"
                }
              },
              "id": "displayvideo.advertisers.lineItems.bulkEditAssignedTargetingOptions",
              "parameterOrder": [
                "advertiserId"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "BulkEditAssignedTargetingOptionsResponse"
              }
            },
            "get": {
              "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}",
              "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}",
              "description": "Gets a line item.",
              "response": {
                "$ref": "LineItem"
              },
              "id": "displayvideo.advertisers.lineItems.get",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "lineItemId": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the line item to fetch.",
                  "required": true,
                  "format": "int64"
                },
                "advertiserId": {
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser this line item belongs to.",
                  "format": "int64",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "httpMethod": "GET"
            },
            "patch": {
              "response": {
                "$ref": "LineItem"
              },
              "id": "displayvideo.advertisers.lineItems.patch",
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}",
              "description": "Updates an existing line item. Returns the updated line item if successful. Requests to this endpoint cannot be made concurrently with the following requests updating the same line item: * BulkEditLineItemAssignedTargetingOptions * UpdateLineItem * CreateLineItemAssignedTargetingOption * DeleteLineItemAssignedTargetingOption",
              "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "LineItem"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "updateMask": {
                  "description": "Required. The mask to control which fields to update.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "lineItemId": {
                  "location": "path",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Output only. The unique ID of the line item. Assigned by the system."
                },
                "advertiserId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "Output only. The unique ID of the advertiser the line item belongs to.",
                  "format": "int64"
                }
              }
            },
            "list": {
              "description": "Lists line items in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, line items with `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
              "httpMethod": "GET",
              "path": "v2/advertisers/{+advertiserId}/lineItems",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "advertiserId": {
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "description": "Required. The ID of the advertiser to list line items for.",
                  "location": "path",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows filtering by line item properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `flight.dateRange.endDate` must be LESS THAN (\u003c). * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (\u003e=)` or `LESS THAN OR EQUAL TO (\u003c=)`. * The operator used on `warningMessages` must be `HAS (:)`. * The operators used on all other fields must be `EQUALS (=)`. * Supported properties: - `campaignId` - `displayName` - `insertionOrderId` - `entityStatus` - `lineItemId` - `lineItemType` - `flight.dateRange.endDate` (input formatted as YYYY-MM-DD) - `warningMessages` - `flight.triggerId` - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) - `targetedChannelId` - `targetedNegativeKeywordListId` Examples: * All line items under an insertion order: `insertionOrderId=\"1234\"` * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` and `LINE_ITEM_TYPE_DISPLAY_DEFAULT` line items under an advertiser: `(entityStatus=\"ENTITY_STATUS_ACTIVE\" OR entityStatus=\"ENTITY_STATUS_PAUSED\") AND lineItemType=\"LINE_ITEM_TYPE_DISPLAY_DEFAULT\"` * All line items whose flight dates end before March 28, 2019: `flight.dateRange.endDate\u003c\"2019-03-28\"` * All line items that have `NO_VALID_CREATIVE` in `warningMessages`: `warningMessages:\"NO_VALID_CREATIVE\"` * All line items with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003c=\"2020-11-04T18:54:47Z\"` * All line items with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003e=\"2020-11-04T18:54:47Z\"` * All line items that are using both the specified channel and specified negative keyword list in their targeting: `targetedNegativeKeywordListId=789 AND targetedChannelId=12345` The length of this field should be no more than 500 characters."
                },
                "orderBy": {
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` * `flight.dateRange.endDate` * `updateTime` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLineItems` method. If not specified, the first page of results will be returned."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/lineItems",
              "id": "displayvideo.advertisers.lineItems.list",
              "response": {
                "$ref": "ListLineItemsResponse"
              }
            },
            "duplicate": {
              "id": "displayvideo.advertisers.lineItems.duplicate",
              "response": {
                "$ref": "DuplicateLineItemResponse"
              },
              "path": "v2/advertisers/{+advertiserId}/lineItems/{+lineItemId}:duplicate",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Duplicates a line item. Returns the newly created line item id if successful.",
              "httpMethod": "POST",
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/lineItems/{lineItemsId}:duplicate",
              "parameters": {
                "advertiserId": {
                  "description": "Required. The ID of the advertiser this line item belongs to.",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "location": "path"
                },
                "lineItemId": {
                  "required": true,
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the line item to duplicate.",
                  "type": "string",
                  "format": "int64"
                }
              },
              "request": {
                "$ref": "DuplicateLineItemRequest"
              }
            },
            "bulkUpdate": {
              "response": {
                "$ref": "BulkUpdateLineItemsResponse"
              },
              "parameters": {
                "advertisersId": {
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "displayvideo.advertisers.lineItems.bulkUpdate",
              "path": "v2/advertisers/{advertisersId}/lineItems:bulkUpdate",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Updates multiple line items.",
              "parameterOrder": [
                "advertisersId"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/lineItems:bulkUpdate",
              "httpMethod": "POST",
              "request": {
                "$ref": "BulkUpdateLineItemsRequest"
              }
            }
          }
        },
        "manualTriggers": {
          "methods": {
            "get": {
              "path": "v2/advertisers/{+advertiserId}/manualTriggers/{+triggerId}",
              "flatPath": "v2/advertisers/{advertisersId}/manualTriggers/{manualTriggersId}",
              "parameterOrder": [
                "advertiserId",
                "triggerId"
              ],
              "description": "Gets a manual trigger.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "GET",
              "id": "displayvideo.advertisers.manualTriggers.get",
              "parameters": {
                "triggerId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64",
                  "description": "Required. The ID of the manual trigger to fetch.",
                  "location": "path",
                  "type": "string"
                },
                "advertiserId": {
                  "type": "string",
                  "description": "Required. The ID of the advertiser this manual trigger belongs to.",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64"
                }
              },
              "response": {
                "$ref": "ManualTrigger"
              }
            },
            "patch": {
              "httpMethod": "PATCH",
              "id": "displayvideo.advertisers.manualTriggers.patch",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Required. The mask to control which fields to update.",
                  "type": "string"
                },
                "triggerId": {
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "Output only. The unique ID of the manual trigger.",
                  "required": true,
                  "format": "int64",
                  "type": "string"
                },
                "advertiserId": {
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to.",
                  "pattern": "^[^/]+$"
                }
              },
              "response": {
                "$ref": "ManualTrigger"
              },
              "request": {
                "$ref": "ManualTrigger"
              },
              "parameterOrder": [
                "advertiserId",
                "triggerId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v2/advertisers/{advertisersId}/manualTriggers/{manualTriggersId}",
              "description": "Updates a manual trigger. Returns the updated manual trigger if successful.",
              "path": "v2/advertisers/{+advertiserId}/manualTriggers/{+triggerId}"
            },
            "deactivate": {
              "parameters": {
                "triggerId": {
                  "location": "path",
                  "description": "Required. The ID of the manual trigger to deactivate.",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "format": "int64",
                  "required": true
                },
                "advertiserId": {
                  "description": "Required. The ID of the advertiser that the manual trigger belongs.",
                  "location": "path",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "format": "int64"
                }
              },
              "id": "displayvideo.advertisers.manualTriggers.deactivate",
              "response": {
                "$ref": "ManualTrigger"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "advertiserId",
                "triggerId"
              ],
              "request": {
                "$ref": "DeactivateManualTriggerRequest"
              },
              "flatPath": "v2/advertisers/{advertisersId}/manualTriggers/{manualTriggersId}:deactivate",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Deactivates a manual trigger.",
              "path": "v2/advertisers/{+advertiserId}/manualTriggers/{+triggerId}:deactivate"
            },
            "create": {
              "path": "v2/advertisers/{+advertiserId}/manualTriggers",
              "id": "displayvideo.advertisers.manualTriggers.create",
              "request": {
                "$ref": "ManualTrigger"
              },
              "description": "Creates a new manual trigger. Returns the newly created manual trigger if successful.",
              "httpMethod": "POST",
              "response": {
                "$ref": "ManualTrigger"
              },
              "flatPath": "v2/advertisers/{advertisersId}/manualTriggers",
              "parameterOrder": [
                "advertiserId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "advertiserId": {
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "type": "string",
                  "format": "int64",
                  "description": "Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to."
                }
              }
            },
            "list": {
              "response": {
                "$ref": "ListManualTriggersResponse"
              },
              "id": "displayvideo.advertisers.manualTriggers.list",
              "parameterOrder": [
                "advertiserId"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/advertisers/{advertisersId}/manualTriggers",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Lists manual triggers that are accessible to the current user for a given advertiser ID. The order is defined by the order_by parameter. A single advertiser_id is required.",
              "path": "v2/advertisers/{+advertiserId}/manualTriggers",
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser that the fetched manual triggers belong to.",
                  "location": "path",
                  "format": "int64"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`."
                },
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `state` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListManualTriggers` method. If not specified, the first page of results will be returned."
                },
                "filter": {
                  "location": "query",
                  "description": "Allows filtering by manual trigger properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `displayName` - `state` Examples: * All active manual triggers under an advertiser: `state=\"ACTIVE\"` The length of this field should be no more than 500 characters.",
                  "type": "string"
                }
              }
            },
            "activate": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId",
                "triggerId"
              ],
              "response": {
                "$ref": "ManualTrigger"
              },
              "id": "displayvideo.advertisers.manualTriggers.activate",
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "description": "Required. The ID of the advertiser that the manual trigger belongs.",
                  "type": "string"
                },
                "triggerId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The ID of the manual trigger to activate.",
                  "format": "int64"
                }
              },
              "description": "Activates a manual trigger. Each activation of the manual trigger must be at least 5 minutes apart, otherwise an error will be returned.",
              "request": {
                "$ref": "ActivateManualTriggerRequest"
              },
              "httpMethod": "POST",
              "path": "v2/advertisers/{+advertiserId}/manualTriggers/{+triggerId}:activate",
              "flatPath": "v2/advertisers/{advertisersId}/manualTriggers/{manualTriggersId}:activate"
            }
          }
        }
      },
      "methods": {
        "create": {
          "path": "v2/advertisers",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {},
          "response": {
            "$ref": "Advertiser"
          },
          "description": "Creates a new advertiser. Returns the newly created advertiser if successful. This method can take up to 180 seconds to complete.",
          "flatPath": "v2/advertisers",
          "httpMethod": "POST",
          "id": "displayvideo.advertisers.create",
          "parameterOrder": [],
          "request": {
            "$ref": "Advertiser"
          }
        },
        "audit": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/advertisers/{advertisersId}:audit",
          "parameterOrder": [
            "advertiserId"
          ],
          "description": "Audits an advertiser. Returns the counts of used entities per resource type under the advertiser provided. Used entities count towards their respective resource limit. See https://support.google.com/displayvideo/answer/6071450.",
          "id": "displayvideo.advertisers.audit",
          "parameters": {
            "advertiserId": {
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the advertiser to audit.",
              "format": "int64",
              "type": "string"
            },
            "readMask": {
              "type": "string",
              "description": "Optional. The specific fields to return. If no mask is specified, all fields in the response proto will be filled. Valid values are: * usedLineItemsCount * usedInsertionOrdersCount * usedCampaignsCount * channelsCount * negativelyTargetedChannelsCount * negativeKeywordListsCount * adGroupCriteriaCount * campaignCriteriaCount",
              "location": "query",
              "format": "google-fieldmask"
            }
          },
          "path": "v2/advertisers/{+advertiserId}:audit",
          "response": {
            "$ref": "AuditAdvertiserResponse"
          }
        },
        "editAssignedTargetingOptions": {
          "description": "Edits targeting options under a single advertiser. The operation will delete the assigned targeting options provided in BulkEditAdvertiserAssignedTargetingOptionsRequest.delete_requests and then create the assigned targeting options provided in BulkEditAdvertiserAssignedTargetingOptionsRequest.create_requests .",
          "request": {
            "$ref": "BulkEditAdvertiserAssignedTargetingOptionsRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/advertisers/{advertisersId}:editAssignedTargetingOptions",
          "httpMethod": "POST",
          "response": {
            "$ref": "BulkEditAdvertiserAssignedTargetingOptionsResponse"
          },
          "parameters": {
            "advertiserId": {
              "format": "int64",
              "description": "Required. The ID of the advertiser.",
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$"
            }
          },
          "path": "v2/advertisers/{+advertiserId}:editAssignedTargetingOptions",
          "id": "displayvideo.advertisers.editAssignedTargetingOptions",
          "parameterOrder": [
            "advertiserId"
          ]
        },
        "list": {
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "ListAdvertisersResponse"
          },
          "parameters": {
            "filter": {
              "description": "Allows filtering by advertiser properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (\u003e=)` or `LESS THAN OR EQUAL TO (\u003c=)`. * The operator must be `EQUALS (=)`. * Supported fields: - `advertiserId` - `displayName` - `entityStatus` - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) Examples: * All active advertisers under a partner: `entityStatus=\"ENTITY_STATUS_ACTIVE\"` * All advertisers with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003c=\"2020-11-04T18:54:47Z\"` * All advertisers with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime\u003e=\"2020-11-04T18:54:47Z\"` The length of this field should be no more than 500 characters.",
              "type": "string",
              "location": "query"
            },
            "orderBy": {
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` * `updateTime` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`.",
              "type": "string",
              "location": "query"
            },
            "partnerId": {
              "description": "Required. The ID of the partner that the fetched advertisers should all belong to. The system only supports listing advertisers for one partner at a time.",
              "format": "int64",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAdvertisers` method. If not specified, the first page of results will be returned.",
              "location": "query"
            }
          },
          "description": "Lists advertisers that are accessible to the current user. The order is defined by the order_by parameter. A single partner_id is required. Cross-partner listing is not supported.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/advertisers",
          "path": "v2/advertisers",
          "id": "displayvideo.advertisers.list"
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "advertiserId": {
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "description": "The ID of the advertiser we need to delete."
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/advertisers/{advertisersId}",
          "parameterOrder": [
            "advertiserId"
          ],
          "description": "Deletes an advertiser. Deleting an advertiser will delete all of its child resources, for example, campaigns, insertion orders and line items. A deleted advertiser cannot be recovered.",
          "id": "displayvideo.advertisers.delete",
          "path": "v2/advertisers/{+advertiserId}"
        },
        "patch": {
          "request": {
            "$ref": "Advertiser"
          },
          "description": "Updates an existing advertiser. Returns the updated advertiser if successful.",
          "flatPath": "v2/advertisers/{advertisersId}",
          "response": {
            "$ref": "Advertiser"
          },
          "id": "displayvideo.advertisers.patch",
          "path": "v2/advertisers/{+advertiserId}",
          "parameters": {
            "advertiserId": {
              "location": "path",
              "description": "Output only. The unique ID of the advertiser. Assigned by the system.",
              "type": "string",
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true
            },
            "updateMask": {
              "format": "google-fieldmask",
              "description": "Required. The mask to control which fields to update.",
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameterOrder": [
            "advertiserId"
          ],
          "httpMethod": "PATCH"
        },
        "get": {
          "description": "Gets an advertiser.",
          "response": {
            "$ref": "Advertiser"
          },
          "flatPath": "v2/advertisers/{advertisersId}",
          "id": "displayvideo.advertisers.get",
          "parameters": {
            "advertiserId": {
              "type": "string",
              "description": "Required. The ID of the advertiser to fetch.",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "path": "v2/advertisers/{+advertiserId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "advertiserId"
          ]
        },
        "listAssignedTargetingOptions": {
          "path": "v2/advertisers/{+advertiserId}:listAssignedTargetingOptions",
          "id": "displayvideo.advertisers.listAssignedTargetingOptions",
          "flatPath": "v2/advertisers/{advertisersId}:listAssignedTargetingOptions",
          "parameters": {
            "advertiserId": {
              "type": "string",
              "required": true,
              "description": "Required. The ID of the advertiser the line item belongs to.",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$"
            },
            "pageToken": {
              "description": "A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListAdvertiserAssignedTargetingOptions` method. If not specified, the first page of results will be returned.",
              "location": "query",
              "type": "string"
            },
            "filter": {
              "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`.. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` Examples: * targetingType with value TARGETING_TYPE_CHANNEL `targetingType=\"TARGETING_TYPE_CHANNEL\"` The length of this field should be no more than 500 characters.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "description": "Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is '5000'. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "location": "query",
              "type": "integer"
            },
            "orderBy": {
              "type": "string",
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingType desc`."
            }
          },
          "parameterOrder": [
            "advertiserId"
          ],
          "httpMethod": "GET",
          "description": "Lists assigned targeting options of an advertiser across targeting types.",
          "response": {
            "$ref": "BulkListAdvertiserAssignedTargetingOptionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        }
      }
    },
    "googleAudiences": {
      "methods": {
        "get": {
          "id": "displayvideo.googleAudiences.get",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "path": "v2/googleAudiences/{+googleAudienceId}",
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleAudience"
          },
          "flatPath": "v2/googleAudiences/{googleAudiencesId}",
          "parameters": {
            "partnerId": {
              "description": "The ID of the partner that has access to the fetched Google audience.",
              "location": "query",
              "type": "string",
              "format": "int64"
            },
            "googleAudienceId": {
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "Required. The ID of the Google audience to fetch.",
              "format": "int64",
              "type": "string"
            },
            "advertiserId": {
              "description": "The ID of the advertiser that has access to the fetched Google audience.",
              "type": "string",
              "location": "query",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "googleAudienceId"
          ],
          "description": "Gets a Google audience."
        },
        "list": {
          "httpMethod": "GET",
          "parameters": {
            "orderBy": {
              "description": "Field by which to sort the list. Acceptable values are: * `googleAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "location": "query",
              "type": "string"
            },
            "partnerId": {
              "description": "The ID of the partner that has access to the fetched Google audiences.",
              "format": "int64",
              "type": "string",
              "location": "query"
            },
            "filter": {
              "location": "query",
              "type": "string",
              "description": "Allows filtering by Google audience fields. Supported syntax: * Filter expressions for Google audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All Google audiences for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters."
            },
            "advertiserId": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "The ID of the advertiser that has access to the fetched Google audiences."
            },
            "pageToken": {
              "type": "string",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListGoogleAudiences` method. If not specified, the first page of results will be returned.",
              "location": "query"
            },
            "pageSize": {
              "location": "query",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "type": "integer",
              "format": "int32"
            }
          },
          "id": "displayvideo.googleAudiences.list",
          "parameterOrder": [],
          "flatPath": "v2/googleAudiences",
          "description": "Lists Google audiences. The order is defined by the order_by parameter.",
          "path": "v2/googleAudiences",
          "response": {
            "$ref": "ListGoogleAudiencesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        }
      }
    },
    "floodlightGroups": {
      "methods": {
        "get": {
          "path": "v2/floodlightGroups/{+floodlightGroupId}",
          "parameters": {
            "floodlightGroupId": {
              "format": "int64",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the Floodlight group to fetch.",
              "location": "path"
            },
            "partnerId": {
              "location": "query",
              "format": "int64",
              "description": "Required. The partner context by which the Floodlight group is being accessed.",
              "type": "string"
            }
          },
          "flatPath": "v2/floodlightGroups/{floodlightGroupsId}",
          "response": {
            "$ref": "FloodlightGroup"
          },
          "httpMethod": "GET",
          "description": "Gets a Floodlight group.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.floodlightGroups.get",
          "parameterOrder": [
            "floodlightGroupId"
          ]
        },
        "patch": {
          "parameterOrder": [
            "floodlightGroupId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "description": "Updates an existing Floodlight group. Returns the updated Floodlight group if successful.",
          "response": {
            "$ref": "FloodlightGroup"
          },
          "request": {
            "$ref": "FloodlightGroup"
          },
          "flatPath": "v2/floodlightGroups/{floodlightGroupId}",
          "httpMethod": "PATCH",
          "path": "v2/floodlightGroups/{floodlightGroupId}",
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "description": "Required. The mask to control which fields to update.",
              "type": "string",
              "location": "query"
            },
            "partnerId": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "Required. The partner context by which the Floodlight group is being accessed."
            },
            "floodlightGroupId": {
              "format": "int64",
              "type": "string",
              "description": "Output only. The unique ID of the Floodlight group. Assigned by the system.",
              "required": true,
              "location": "path"
            }
          },
          "id": "displayvideo.floodlightGroups.patch"
        }
      }
    },
    "guaranteedOrders": {
      "methods": {
        "get": {
          "path": "v2/guaranteedOrders/{+guaranteedOrderId}",
          "id": "displayvideo.guaranteedOrders.get",
          "response": {
            "$ref": "GuaranteedOrder"
          },
          "parameterOrder": [
            "guaranteedOrderId"
          ],
          "flatPath": "v2/guaranteedOrders/{guaranteedOrdersId}",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "httpMethod": "GET",
          "parameters": {
            "partnerId": {
              "location": "query",
              "format": "int64",
              "description": "The ID of the partner that has access to the guaranteed order.",
              "type": "string"
            },
            "advertiserId": {
              "type": "string",
              "location": "query",
              "description": "The ID of the advertiser that has access to the guaranteed order.",
              "format": "int64"
            },
            "guaranteedOrderId": {
              "required": true,
              "location": "path",
              "description": "Required. The ID of the guaranteed order to fetch. The ID is of the format `{exchange}-{legacy_guaranteed_order_id}`",
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "description": "Gets a guaranteed order."
        },
        "editGuaranteedOrderReadAccessors": {
          "parameters": {
            "guaranteedOrderId": {
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the guaranteed order to edit. The ID is of the format `{exchange}-{legacy_guaranteed_order_id}`",
              "type": "string"
            }
          },
          "description": "Edits read advertisers of a guaranteed order.",
          "id": "displayvideo.guaranteedOrders.editGuaranteedOrderReadAccessors",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/guaranteedOrders/{guaranteedOrdersId}:editGuaranteedOrderReadAccessors",
          "response": {
            "$ref": "EditGuaranteedOrderReadAccessorsResponse"
          },
          "parameterOrder": [
            "guaranteedOrderId"
          ],
          "request": {
            "$ref": "EditGuaranteedOrderReadAccessorsRequest"
          },
          "httpMethod": "POST",
          "path": "v2/guaranteedOrders/{+guaranteedOrderId}:editGuaranteedOrderReadAccessors"
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/guaranteedOrders/{guaranteedOrdersId}",
          "request": {
            "$ref": "GuaranteedOrder"
          },
          "id": "displayvideo.guaranteedOrders.patch",
          "path": "v2/guaranteedOrders/{+guaranteedOrderId}",
          "description": "Updates an existing guaranteed order. Returns the updated guaranteed order if successful.",
          "httpMethod": "PATCH",
          "parameters": {
            "advertiserId": {
              "type": "string",
              "description": "The ID of the advertiser that the request is being made within.",
              "location": "query",
              "format": "int64"
            },
            "partnerId": {
              "format": "int64",
              "type": "string",
              "description": "The ID of the partner that the request is being made within.",
              "location": "query"
            },
            "updateMask": {
              "type": "string",
              "location": "query",
              "format": "google-fieldmask",
              "description": "Required. The mask to control which fields to update."
            },
            "guaranteedOrderId": {
              "pattern": "^[^/]+$",
              "description": "Output only. The unique identifier of the guaranteed order. The guaranteed order IDs have the format `{exchange}-{legacy_guaranteed_order_id}`.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "guaranteedOrderId"
          ],
          "response": {
            "$ref": "GuaranteedOrder"
          }
        },
        "create": {
          "id": "displayvideo.guaranteedOrders.create",
          "httpMethod": "POST",
          "request": {
            "$ref": "GuaranteedOrder"
          },
          "parameterOrder": [],
          "path": "v2/guaranteedOrders",
          "flatPath": "v2/guaranteedOrders",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "GuaranteedOrder"
          },
          "description": "Creates a new guaranteed order. Returns the newly created guaranteed order if successful.",
          "parameters": {
            "advertiserId": {
              "description": "The ID of the advertiser that the request is being made within.",
              "location": "query",
              "format": "int64",
              "type": "string"
            },
            "partnerId": {
              "format": "int64",
              "location": "query",
              "type": "string",
              "description": "The ID of the partner that the request is being made within."
            }
          }
        },
        "list": {
          "parameterOrder": [],
          "flatPath": "v2/guaranteedOrders",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "path": "v2/guaranteedOrders",
          "id": "displayvideo.guaranteedOrders.list",
          "response": {
            "$ref": "ListGuaranteedOrdersResponse"
          },
          "description": "Lists guaranteed orders that are accessible to the current user. The order is defined by the order_by parameter. If a filter by entity_status is not specified, guaranteed orders with entity status `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
          "parameters": {
            "filter": {
              "description": "Allows filtering by guaranteed order properties. * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `guaranteed_order_id` - `exchange` - `display_name` - `status.entityStatus` Examples: * All active guaranteed orders: `status.entityStatus=\"ENTITY_STATUS_ACTIVE\"` * Guaranteed orders belonging to Google Ad Manager or Rubicon exchanges: `exchange=\"EXCHANGE_GOOGLE_AD_MANAGER\" OR exchange=\"EXCHANGE_RUBICON\"` The length of this field should be no more than 500 characters.",
              "type": "string",
              "location": "query"
            },
            "partnerId": {
              "location": "query",
              "format": "int64",
              "description": "The ID of the partner that has access to the guaranteed order.",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified or greater than `100` will default to `100`.",
              "location": "query",
              "type": "integer"
            },
            "orderBy": {
              "location": "query",
              "type": "string",
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`."
            },
            "advertiserId": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "The ID of the advertiser that has access to the guaranteed order."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListGuaranteedOrders` method. If not specified, the first page of results will be returned."
            }
          }
        }
      }
    },
    "media": {
      "methods": {
        "download": {
          "description": "Downloads media. Download is supported on the URI `/download/{resource_name=**}?alt=media.` **Note**: Download requests will not be successful without including `alt=media` query string.",
          "flatPath": "download/{downloadId}",
          "id": "displayvideo.media.download",
          "httpMethod": "GET",
          "supportsMediaDownload": true,
          "parameterOrder": [
            "resourceName"
          ],
          "response": {
            "$ref": "GoogleBytestreamMedia"
          },
          "path": "download/{+resourceName}",
          "scopes": [
            "https://www.googleapis.com/auth/display-video",
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "parameters": {
            "resourceName": {
              "required": true,
              "description": "Name of the media that is being downloaded. See ReadRequest.resource_name.",
              "pattern": "^.*$",
              "location": "path",
              "type": "string"
            }
          }
        },
        "upload": {
          "id": "displayvideo.media.upload",
          "path": "media/{+resourceName}",
          "flatPath": "media/{mediaId}",
          "parameterOrder": [
            "resourceName"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/display-video",
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "supportsMediaUpload": true,
          "response": {
            "$ref": "GoogleBytestreamMedia"
          },
          "mediaUpload": {
            "accept": [
              "*/*"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/media/{+resourceName}"
              }
            }
          },
          "parameters": {
            "resourceName": {
              "pattern": "^.*$",
              "description": "Name of the media that is being downloaded. See ReadRequest.resource_name.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "request": {
            "$ref": "GoogleBytestreamMedia"
          },
          "description": "Uploads media. Upload is supported on the URI `/upload/media/{resource_name=**}?upload_type=media.` **Note**: Upload requests will not be successful without including `upload_type=media` query string."
        }
      }
    },
    "customBiddingAlgorithms": {
      "resources": {
        "scripts": {
          "methods": {
            "get": {
              "id": "displayvideo.customBiddingAlgorithms.scripts.get",
              "path": "v2/customBiddingAlgorithms/{+customBiddingAlgorithmId}/scripts/{+customBiddingScriptId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "CustomBiddingScript"
              },
              "parameterOrder": [
                "customBiddingAlgorithmId",
                "customBiddingScriptId"
              ],
              "description": "Gets a custom bidding script.",
              "flatPath": "v2/customBiddingAlgorithms/{customBiddingAlgorithmsId}/scripts/{scriptsId}",
              "httpMethod": "GET",
              "parameters": {
                "partnerId": {
                  "description": "The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.",
                  "format": "int64",
                  "type": "string",
                  "location": "query"
                },
                "customBiddingAlgorithmId": {
                  "location": "path",
                  "type": "string",
                  "format": "int64",
                  "description": "Required. The ID of the custom bidding algorithm owns the script.",
                  "required": true,
                  "pattern": "^[^/]+$"
                },
                "customBiddingScriptId": {
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the custom bidding script to fetch."
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that owns the parent custom bidding algorithm.",
                  "format": "int64",
                  "location": "query",
                  "type": "string"
                }
              }
            },
            "create": {
              "httpMethod": "POST",
              "flatPath": "v2/customBiddingAlgorithms/{customBiddingAlgorithmsId}/scripts",
              "id": "displayvideo.customBiddingAlgorithms.scripts.create",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "customBiddingAlgorithmId"
              ],
              "description": "Creates a new custom bidding script. Returns the newly created script if successful.",
              "request": {
                "$ref": "CustomBiddingScript"
              },
              "response": {
                "$ref": "CustomBiddingScript"
              },
              "parameters": {
                "customBiddingAlgorithmId": {
                  "description": "Required. The ID of the custom bidding algorithm that owns the script.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "format": "int64"
                },
                "partnerId": {
                  "format": "int64",
                  "type": "string",
                  "location": "query",
                  "description": "The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script."
                },
                "advertiserId": {
                  "format": "int64",
                  "location": "query",
                  "description": "The ID of the advertiser that owns the parent custom bidding algorithm.",
                  "type": "string"
                }
              },
              "path": "v2/customBiddingAlgorithms/{+customBiddingAlgorithmId}/scripts"
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "customBiddingAlgorithmId": {
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the custom bidding algorithm owns the script.",
                  "type": "string"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomBiddingScripts` method. If not specified, the first page of results will be returned.",
                  "location": "query",
                  "type": "string"
                },
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `createTime desc` (default) The default sorting order is descending. To specify ascending order for a field, the suffix \"desc\" should be removed. Example: `createTime`.",
                  "type": "string",
                  "location": "query"
                },
                "partnerId": {
                  "location": "query",
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script."
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that owns the parent custom bidding algorithm.",
                  "location": "query",
                  "type": "string",
                  "format": "int64"
                }
              },
              "description": "Lists custom bidding scripts that belong to the given algorithm. The order is defined by the order_by parameter.",
              "id": "displayvideo.customBiddingAlgorithms.scripts.list",
              "path": "v2/customBiddingAlgorithms/{+customBiddingAlgorithmId}/scripts",
              "response": {
                "$ref": "ListCustomBiddingScriptsResponse"
              },
              "parameterOrder": [
                "customBiddingAlgorithmId"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/customBiddingAlgorithms/{customBiddingAlgorithmsId}/scripts",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            }
          }
        }
      },
      "methods": {
        "patch": {
          "response": {
            "$ref": "CustomBiddingAlgorithm"
          },
          "parameters": {
            "updateMask": {
              "location": "query",
              "format": "google-fieldmask",
              "type": "string",
              "description": "Required. The mask to control which fields to update."
            },
            "customBiddingAlgorithmId": {
              "required": true,
              "type": "string",
              "format": "int64",
              "pattern": "^[^/]+$",
              "description": "Output only. The unique ID of the custom bidding algorithm. Assigned by the system.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "description": "Updates an existing custom bidding algorithm. Returns the updated custom bidding algorithm if successful.",
          "flatPath": "v2/customBiddingAlgorithms/{customBiddingAlgorithmsId}",
          "parameterOrder": [
            "customBiddingAlgorithmId"
          ],
          "httpMethod": "PATCH",
          "id": "displayvideo.customBiddingAlgorithms.patch",
          "path": "v2/customBiddingAlgorithms/{+customBiddingAlgorithmId}",
          "request": {
            "$ref": "CustomBiddingAlgorithm"
          }
        },
        "create": {
          "path": "v2/customBiddingAlgorithms",
          "id": "displayvideo.customBiddingAlgorithms.create",
          "request": {
            "$ref": "CustomBiddingAlgorithm"
          },
          "description": "Creates a new custom bidding algorithm. Returns the newly created custom bidding algorithm if successful.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/customBiddingAlgorithms",
          "response": {
            "$ref": "CustomBiddingAlgorithm"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "parameters": {}
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "customBiddingAlgorithmId"
          ],
          "description": "Gets a custom bidding algorithm.",
          "id": "displayvideo.customBiddingAlgorithms.get",
          "path": "v2/customBiddingAlgorithms/{+customBiddingAlgorithmId}",
          "flatPath": "v2/customBiddingAlgorithms/{customBiddingAlgorithmsId}",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "partnerId": {
              "format": "int64",
              "description": "The ID of the DV360 partner that has access to the custom bidding algorithm.",
              "location": "query",
              "type": "string"
            },
            "customBiddingAlgorithmId": {
              "description": "Required. The ID of the custom bidding algorithm to fetch.",
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string"
            },
            "advertiserId": {
              "location": "query",
              "type": "string",
              "description": "The ID of the DV360 partner that has access to the custom bidding algorithm.",
              "format": "int64"
            }
          },
          "response": {
            "$ref": "CustomBiddingAlgorithm"
          }
        },
        "list": {
          "description": "Lists custom bidding algorithms that are accessible to the current user and can be used in bidding stratgies. The order is defined by the order_by parameter.",
          "parameters": {
            "orderBy": {
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "type": "integer"
            },
            "pageToken": {
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomBiddingAlgorithms` method. If not specified, the first page of results will be returned.",
              "type": "string"
            },
            "filter": {
              "location": "query",
              "description": "Allows filtering by custom bidding algorithm fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND`. A sequence of restrictions * implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)` or `EQUALS (=)`. * The operator must be `CONTAINS (:)` for the following field: - `displayName` * The operator must be `EQUALS (=)` for the following field: - `customBiddingAlgorithmType` * For `displayName`, the value is a string. We return all custom bidding algorithms whose display_name contains such string. * For `customBiddingAlgorithmType`, the value is a string. We return all algorithms whose custom_bidding_algorithm_type is equal to the given type. Examples: * All custom bidding algorithms for which the display name contains \"politics\": `displayName:politics`. * All custom bidding algorithms for which the type is \"SCRIPT_BASED\": `customBiddingAlgorithmType=SCRIPT_BASED` The length of this field should be no more than 500 characters.",
              "type": "string"
            },
            "partnerId": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "The ID of the DV360 partner that has access to the custom bidding algorithm."
            },
            "advertiserId": {
              "description": "The ID of the DV360 advertiser that has access to the custom bidding algorithm.",
              "format": "int64",
              "type": "string",
              "location": "query"
            }
          },
          "path": "v2/customBiddingAlgorithms",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "ListCustomBiddingAlgorithmsResponse"
          },
          "flatPath": "v2/customBiddingAlgorithms",
          "id": "displayvideo.customBiddingAlgorithms.list",
          "httpMethod": "GET",
          "parameterOrder": []
        },
        "uploadScript": {
          "httpMethod": "GET",
          "parameterOrder": [
            "customBiddingAlgorithmId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "description": "Creates a custom bidding script reference object for a script file. The resulting reference object provides a resource path to which the script file should be uploaded. This reference object should be included in when creating a new custom bidding script object.",
          "path": "v2/customBiddingAlgorithms/{+customBiddingAlgorithmId}:uploadScript",
          "flatPath": "v2/customBiddingAlgorithms/{customBiddingAlgorithmsId}:uploadScript",
          "response": {
            "$ref": "CustomBiddingScriptRef"
          },
          "id": "displayvideo.customBiddingAlgorithms.uploadScript",
          "parameters": {
            "advertiserId": {
              "description": "The ID of the advertiser that owns the parent custom bidding algorithm.",
              "type": "string",
              "format": "int64",
              "location": "query"
            },
            "customBiddingAlgorithmId": {
              "location": "path",
              "description": "Required. The ID of the custom bidding algorithm owns the script.",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "format": "int64"
            },
            "partnerId": {
              "type": "string",
              "location": "query",
              "description": "The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.",
              "format": "int64"
            }
          }
        }
      }
    },
    "users": {
      "methods": {
        "list": {
          "parameterOrder": [],
          "path": "v2/users",
          "id": "displayvideo.users.list",
          "httpMethod": "GET",
          "description": "Lists users that are accessible to the current user. If two users have user roles on the same partner or advertiser, they can access each other.",
          "response": {
            "$ref": "ListUsersResponse"
          },
          "flatPath": "v2/users",
          "scopes": [
            "https://www.googleapis.com/auth/display-video-user-management"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListUsers` method. If not specified, the first page of results will be returned.",
              "location": "query"
            },
            "orderBy": {
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "filter": {
              "type": "string",
              "description": "Allows filtering by user properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)` or `EQUALS (=)`. * The operator must be `CONTAINS (:)` for the following fields: - `displayName` - `email` * The operator must be `EQUALS (=)` for the following fields: - `assignedUserRole.userRole` - `assignedUserRole.partnerId` - `assignedUserRole.advertiserId` - `assignedUserRole.entityType`: A synthetic field of AssignedUserRole used for filtering. Identifies the type of entity to which the user role is assigned. Valid values are `Partner` and `Advertiser`. - `assignedUserRole.parentPartnerId`: A synthetic field of AssignedUserRole used for filtering. Identifies the parent partner of the entity to which the user role is assigned.\" Examples: * The user with displayName containing `foo`: `displayName:\"foo\"` * The user with email containing `bar`: `email:\"bar\"` * All users with standard user roles: `assignedUserRole.userRole=\"STANDARD\"` * All users with user roles for partner 123: `assignedUserRole.partnerId=\"123\"` * All users with user roles for advertiser 123: `assignedUserRole.advertiserId=\"123\"` * All users with partner level user roles: `entityType=\"PARTNER\"` * All users with user roles for partner 123 and advertisers under partner 123: `parentPartnerId=\"123\"` The length of this field should be no more than 500 characters.",
              "location": "query"
            }
          }
        },
        "get": {
          "parameterOrder": [
            "userId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/display-video-user-management"
          ],
          "id": "displayvideo.users.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "User"
          },
          "parameters": {
            "userId": {
              "type": "string",
              "description": "Required. The ID of the user to fetch.",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path"
            }
          },
          "description": "Gets a user.",
          "path": "v2/users/{+userId}",
          "flatPath": "v2/users/{usersId}"
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video-user-management"
          ],
          "path": "v2/users/{+userId}",
          "id": "displayvideo.users.patch",
          "request": {
            "$ref": "User"
          },
          "parameters": {
            "userId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true,
              "type": "string",
              "description": "Output only. The unique ID of the user. Assigned by the system.",
              "location": "path"
            },
            "updateMask": {
              "description": "Required. The mask to control which fields to update.",
              "format": "google-fieldmask",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Updates an existing user. Returns the updated user if successful.",
          "response": {
            "$ref": "User"
          },
          "parameterOrder": [
            "userId"
          ],
          "flatPath": "v2/users/{usersId}",
          "httpMethod": "PATCH"
        },
        "create": {
          "description": "Creates a new user. Returns the newly created user if successful.",
          "id": "displayvideo.users.create",
          "parameterOrder": [],
          "request": {
            "$ref": "User"
          },
          "httpMethod": "POST",
          "flatPath": "v2/users",
          "path": "v2/users",
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video-user-management"
          ],
          "parameters": {}
        },
        "delete": {
          "parameters": {
            "userId": {
              "pattern": "^[^/]+$",
              "required": true,
              "description": "Required. The ID of the user to delete.",
              "type": "string",
              "format": "int64",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video-user-management"
          ],
          "parameterOrder": [
            "userId"
          ],
          "httpMethod": "DELETE",
          "id": "displayvideo.users.delete",
          "path": "v2/users/{+userId}",
          "description": "Deletes a user.",
          "flatPath": "v2/users/{usersId}"
        },
        "bulkEditAssignedUserRoles": {
          "path": "v2/users/{+userId}:bulkEditAssignedUserRoles",
          "response": {
            "$ref": "BulkEditAssignedUserRolesResponse"
          },
          "id": "displayvideo.users.bulkEditAssignedUserRoles",
          "parameterOrder": [
            "userId"
          ],
          "flatPath": "v2/users/{usersId}:bulkEditAssignedUserRoles",
          "parameters": {
            "userId": {
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the user to which the assigned user roles belong.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "int64"
            }
          },
          "request": {
            "$ref": "BulkEditAssignedUserRolesRequest"
          },
          "description": "Bulk edits user roles for a user. The operation will delete the assigned user roles provided in BulkEditAssignedUserRolesRequest.deletedAssignedUserRoles and then assign the user roles provided in BulkEditAssignedUserRolesRequest.createdAssignedUserRoles.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/display-video-user-management"
          ]
        }
      }
    },
    "partners": {
      "methods": {
        "get": {
          "parameterOrder": [
            "partnerId"
          ],
          "parameters": {
            "partnerId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "location": "path",
              "description": "Required. The ID of the partner to fetch.",
              "required": true
            }
          },
          "httpMethod": "GET",
          "flatPath": "v2/partners/{partnersId}",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.partners.get",
          "response": {
            "$ref": "Partner"
          },
          "description": "Gets a partner.",
          "path": "v2/partners/{+partnerId}"
        },
        "editAssignedTargetingOptions": {
          "parameters": {
            "partnerId": {
              "format": "int64",
              "location": "path",
              "description": "Required. The ID of the partner.",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "request": {
            "$ref": "BulkEditPartnerAssignedTargetingOptionsRequest"
          },
          "response": {
            "$ref": "BulkEditPartnerAssignedTargetingOptionsResponse"
          },
          "parameterOrder": [
            "partnerId"
          ],
          "path": "v2/partners/{+partnerId}:editAssignedTargetingOptions",
          "id": "displayvideo.partners.editAssignedTargetingOptions",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v2/partners/{partnersId}:editAssignedTargetingOptions",
          "httpMethod": "POST",
          "description": "Edits targeting options under a single partner. The operation will delete the assigned targeting options provided in BulkEditPartnerAssignedTargetingOptionsRequest.deleteRequests and then create the assigned targeting options provided in BulkEditPartnerAssignedTargetingOptionsRequest.createRequests ."
        },
        "list": {
          "id": "displayvideo.partners.list",
          "parameters": {
            "orderBy": {
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`.",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListPartners` method. If not specified, the first page of results will be returned.",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
              "type": "integer",
              "location": "query"
            },
            "filter": {
              "description": "Allows filtering by partner properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `entityStatus` Examples: * All active partners: `entityStatus=\"ENTITY_STATUS_ACTIVE\"` The length of this field should be no more than 500 characters.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "ListPartnersResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [],
          "description": "Lists partners that are accessible to the current user. The order is defined by the order_by parameter.",
          "flatPath": "v2/partners",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "path": "v2/partners"
        }
      },
      "resources": {
        "channels": {
          "resources": {
            "sites": {
              "methods": {
                "bulkEdit": {
                  "path": "v2/partners/{partnerId}/channels/{+channelId}/sites:bulkEdit",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "POST",
                  "description": "Bulk edits sites under a single channel. The operation will delete the sites provided in BulkEditSitesRequest.deleted_sites and then create the sites provided in BulkEditSitesRequest.created_sites.",
                  "parameterOrder": [
                    "partnerId",
                    "channelId"
                  ],
                  "id": "displayvideo.partners.channels.sites.bulkEdit",
                  "flatPath": "v2/partners/{partnerId}/channels/{channelsId}/sites:bulkEdit",
                  "response": {
                    "$ref": "BulkEditSitesResponse"
                  },
                  "parameters": {
                    "channelId": {
                      "format": "int64",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The ID of the parent channel to which the sites belong."
                    },
                    "partnerId": {
                      "required": true,
                      "description": "The ID of the partner that owns the parent channel.",
                      "type": "string",
                      "format": "int64",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "BulkEditSitesRequest"
                  }
                },
                "create": {
                  "description": "Creates a site in a channel.",
                  "response": {
                    "$ref": "Site"
                  },
                  "parameterOrder": [
                    "partnerId",
                    "channelId"
                  ],
                  "parameters": {
                    "partnerId": {
                      "format": "int64",
                      "required": true,
                      "description": "The ID of the partner that owns the parent channel.",
                      "type": "string",
                      "location": "path"
                    },
                    "advertiserId": {
                      "format": "int64",
                      "location": "query",
                      "type": "string",
                      "description": "The ID of the advertiser that owns the parent channel."
                    },
                    "channelId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The ID of the parent channel in which the site will be created.",
                      "pattern": "^[^/]+$",
                      "format": "int64"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "displayvideo.partners.channels.sites.create",
                  "flatPath": "v2/partners/{partnerId}/channels/{channelsId}/sites",
                  "request": {
                    "$ref": "Site"
                  },
                  "path": "v2/partners/{partnerId}/channels/{+channelId}/sites",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ]
                },
                "replace": {
                  "request": {
                    "$ref": "ReplaceSitesRequest"
                  },
                  "parameterOrder": [
                    "partnerId",
                    "channelId"
                  ],
                  "flatPath": "v2/partners/{partnerId}/channels/{channelsId}/sites:replace",
                  "parameters": {
                    "partnerId": {
                      "location": "path",
                      "description": "The ID of the partner that owns the parent channel.",
                      "type": "string",
                      "format": "int64",
                      "required": true
                    },
                    "channelId": {
                      "description": "Required. The ID of the parent channel whose sites will be replaced.",
                      "type": "string",
                      "format": "int64",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "path": "v2/partners/{partnerId}/channels/{+channelId}/sites:replace",
                  "id": "displayvideo.partners.channels.sites.replace",
                  "response": {
                    "$ref": "ReplaceSitesResponse"
                  },
                  "httpMethod": "POST",
                  "description": "Replaces all of the sites under a single channel. The operation will replace the sites under a channel with the sites provided in ReplaceSitesRequest.new_sites."
                },
                "list": {
                  "parameterOrder": [
                    "partnerId",
                    "channelId"
                  ],
                  "path": "v2/partners/{+partnerId}/channels/{+channelId}/sites",
                  "response": {
                    "$ref": "ListSitesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "id": "displayvideo.partners.channels.sites.list",
                  "httpMethod": "GET",
                  "flatPath": "v2/partners/{partnersId}/channels/{channelsId}/sites",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Must be between `1` and `10000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "location": "query",
                      "type": "integer"
                    },
                    "advertiserId": {
                      "format": "int64",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "type": "string",
                      "location": "query"
                    },
                    "channelId": {
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The ID of the parent channel to which the requested sites belong.",
                      "pattern": "^[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows filtering by site fields. Supported syntax: * Filter expressions for site currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `urlOrAppId` Examples: * All sites for which the URL or app ID contains \"google\": `urlOrAppId : \"google\"`"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListSites` method. If not specified, the first page of results will be returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field by which to sort the list. Acceptable values are: * `urlOrAppId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `urlOrAppId desc`.",
                      "location": "query",
                      "type": "string"
                    },
                    "partnerId": {
                      "required": true,
                      "description": "The ID of the partner that owns the parent channel.",
                      "location": "path",
                      "format": "int64",
                      "type": "string",
                      "pattern": "^[^/]+$"
                    }
                  },
                  "description": "Lists sites in a channel."
                },
                "delete": {
                  "parameters": {
                    "urlOrAppId": {
                      "description": "Required. The URL or app ID of the site to delete.",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "channelId": {
                      "type": "string",
                      "format": "int64",
                      "required": true,
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "description": "Required. The ID of the parent channel to which the site belongs."
                    },
                    "partnerId": {
                      "required": true,
                      "description": "The ID of the partner that owns the parent channel.",
                      "location": "path",
                      "format": "int64",
                      "type": "string"
                    },
                    "advertiserId": {
                      "format": "int64",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "partnerId",
                    "channelId",
                    "urlOrAppId"
                  ],
                  "description": "Deletes a site from a channel.",
                  "path": "v2/partners/{partnerId}/channels/{+channelId}/sites/{+urlOrAppId}",
                  "id": "displayvideo.partners.channels.sites.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v2/partners/{partnerId}/channels/{channelsId}/sites/{sitesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ]
                }
              }
            }
          },
          "methods": {
            "create": {
              "description": "Creates a new channel. Returns the newly created channel if successful.",
              "response": {
                "$ref": "Channel"
              },
              "parameters": {
                "partnerId": {
                  "description": "The ID of the partner that owns the created channel.",
                  "format": "int64",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$"
                },
                "advertiserId": {
                  "type": "string",
                  "location": "query",
                  "description": "The ID of the advertiser that owns the created channel.",
                  "format": "int64"
                }
              },
              "path": "v2/partners/{+partnerId}/channels",
              "flatPath": "v2/partners/{partnersId}/channels",
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "request": {
                "$ref": "Channel"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.partners.channels.create"
            },
            "list": {
              "description": "Lists channels for a partner or advertiser.",
              "flatPath": "v2/partners/{partnersId}/channels",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v2/partners/{+partnerId}/channels",
              "response": {
                "$ref": "ListChannelsResponse"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListChannels` method. If not specified, the first page of results will be returned."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "location": "query",
                  "format": "int32"
                },
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `channelId` The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `displayName desc`.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "description": "Allows filtering by channel fields. Supported syntax: * Filter expressions for channel currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All channels for which the display name contains \"google\": `displayName : \"google\"`. The length of this field should be no more than 500 characters.",
                  "location": "query",
                  "type": "string"
                },
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "location": "query",
                  "description": "The ID of the advertiser that owns the channels."
                },
                "partnerId": {
                  "location": "path",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "The ID of the partner that owns the channels."
                }
              },
              "id": "displayvideo.partners.channels.list"
            },
            "get": {
              "description": "Gets a channel for a partner or advertiser.",
              "flatPath": "v2/partners/{partnersId}/channels/{channelsId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.partners.channels.get",
              "response": {
                "$ref": "Channel"
              },
              "path": "v2/partners/{+partnerId}/channels/{+channelId}",
              "httpMethod": "GET",
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "description": "The ID of the partner that owns the fetched channel.",
                  "required": true,
                  "type": "string",
                  "format": "int64",
                  "pattern": "^[^/]+$"
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that owns the fetched channel.",
                  "format": "int64",
                  "type": "string",
                  "location": "query"
                },
                "channelId": {
                  "required": true,
                  "description": "Required. The ID of the channel to fetch.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "format": "int64"
                }
              },
              "parameterOrder": [
                "partnerId",
                "channelId"
              ]
            },
            "patch": {
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. The mask to control which fields to update.",
                  "type": "string"
                },
                "partnerId": {
                  "format": "int64",
                  "description": "The ID of the partner that owns the created channel.",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "location": "path"
                },
                "channelId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "format": "int64",
                  "description": "Output only. The unique ID of the channel. Assigned by the system."
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that owns the created channel.",
                  "type": "string",
                  "location": "query",
                  "format": "int64"
                }
              },
              "id": "displayvideo.partners.channels.patch",
              "request": {
                "$ref": "Channel"
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "Channel"
              },
              "description": "Updates a channel. Returns the updated channel if successful.",
              "parameterOrder": [
                "partnerId",
                "channelId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v2/partners/{+partnerId}/channels/{channelId}",
              "flatPath": "v2/partners/{partnersId}/channels/{channelId}"
            }
          }
        },
        "targetingTypes": {
          "resources": {
            "assignedTargetingOptions": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "partnerId",
                    "targetingType",
                    "assignedTargetingOptionId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Gets a single targeting option assigned to a partner.",
                  "response": {
                    "$ref": "AssignedTargetingOption"
                  },
                  "parameters": {
                    "assignedTargetingOptionId": {
                      "description": "Required. An identifier unique to the targeting type in this partner that identifies the assigned targeting option being requested.",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "targetingType": {
                      "pattern": "^[^/]+$",
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ],
                      "location": "path",
                      "type": "string",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL`",
                      "required": true
                    },
                    "partnerId": {
                      "type": "string",
                      "format": "int64",
                      "description": "Required. The ID of the partner.",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "required": true
                    }
                  },
                  "id": "displayvideo.partners.targetingTypes.assignedTargetingOptions.get",
                  "path": "v2/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                  "flatPath": "v2/partners/{partnersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}"
                },
                "list": {
                  "parameterOrder": [
                    "partnerId",
                    "targetingType"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "path": "v2/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                  "flatPath": "v2/partners/{partnersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                  "id": "displayvideo.partners.targetingTypes.assignedTargetingOptions.list",
                  "description": "Lists the targeting options assigned to a partner.",
                  "response": {
                    "$ref": "ListPartnerAssignedTargetingOptionsResponse"
                  },
                  "parameters": {
                    "partnerId": {
                      "required": true,
                      "description": "Required. The ID of the partner.",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "format": "int64"
                    },
                    "targetingType": {
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "description": "Required. Identifies the type of assigned targeting options to list. Supported targeting types: * `TARGETING_TYPE_CHANNEL`",
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ],
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `assignedTargetingOptionId desc`.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` Examples: * AssignedTargetingOption with ID 123456 `assignedTargetingOptionId=\"123456\"` The length of this field should be no more than 500 characters.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListPartnerAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                    }
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v2/partners/{partnersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Deletes an assigned targeting option from a partner.",
                  "parameterOrder": [
                    "partnerId",
                    "targetingType",
                    "assignedTargetingOptionId"
                  ],
                  "httpMethod": "DELETE",
                  "id": "displayvideo.partners.targetingTypes.assignedTargetingOptions.delete",
                  "path": "v2/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                  "parameters": {
                    "assignedTargetingOptionId": {
                      "description": "Required. The ID of the assigned targeting option to delete.",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "partnerId": {
                      "type": "string",
                      "description": "Required. The ID of the partner.",
                      "format": "int64",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "required": true
                    },
                    "targetingType": {
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ],
                      "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL`",
                      "required": true,
                      "pattern": "^[^/]+$",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "id": "displayvideo.partners.targetingTypes.assignedTargetingOptions.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "AssignedTargetingOption"
                  },
                  "parameterOrder": [
                    "partnerId",
                    "targetingType"
                  ],
                  "parameters": {
                    "targetingType": {
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges.",
                        "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                        "Target ads around locations of a business chain within a specific geo region.",
                        "Target ads to a specific video content duration.",
                        "Target ads to a specific video content stream type.",
                        "Target ads to a specific native content position.",
                        "Target ads in an Open Measurement enabled inventory.",
                        "Target ads to a specific audio content type.",
                        "Target ads to a specific content genre."
                      ],
                      "type": "string",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE",
                        "TARGETING_TYPE_POI",
                        "TARGETING_TYPE_BUSINESS_CHAIN",
                        "TARGETING_TYPE_CONTENT_DURATION",
                        "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                        "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                        "TARGETING_TYPE_OMID",
                        "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                        "TARGETING_TYPE_CONTENT_GENRE"
                      ],
                      "pattern": "^[^/]+$",
                      "description": "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL`",
                      "required": true,
                      "location": "path"
                    },
                    "partnerId": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The ID of the partner.",
                      "format": "int64",
                      "pattern": "^[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/partners/{partnersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                  "description": "Assigns a targeting option to a partner. Returns the assigned targeting option if successful.",
                  "path": "v2/partners/{+partnerId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                  "request": {
                    "$ref": "AssignedTargetingOption"
                  }
                }
              }
            }
          }
        }
      }
    },
    "inventorySources": {
      "methods": {
        "patch": {
          "httpMethod": "PATCH",
          "id": "displayvideo.inventorySources.patch",
          "flatPath": "v2/inventorySources/{inventorySourcesId}",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "partnerId": {
              "format": "int64",
              "location": "query",
              "type": "string",
              "description": "The ID of the partner that the request is being made within."
            },
            "updateMask": {
              "location": "query",
              "format": "google-fieldmask",
              "description": "Required. The mask to control which fields to update.",
              "type": "string"
            },
            "advertiserId": {
              "description": "The ID of the advertiser that the request is being made within.",
              "type": "string",
              "location": "query",
              "format": "int64"
            },
            "inventorySourceId": {
              "pattern": "^[^/]+$",
              "description": "Output only. The unique ID of the inventory source. Assigned by the system.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64"
            }
          },
          "response": {
            "$ref": "InventorySource"
          },
          "description": "Updates an existing inventory source. Returns the updated inventory source if successful.",
          "path": "v2/inventorySources/{+inventorySourceId}",
          "parameterOrder": [
            "inventorySourceId"
          ],
          "request": {
            "$ref": "InventorySource"
          }
        },
        "editInventorySourceReadWriteAccessors": {
          "request": {
            "$ref": "EditInventorySourceReadWriteAccessorsRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameterOrder": [
            "inventorySourceId"
          ],
          "flatPath": "v2/inventorySources/{inventorySourcesId}:editInventorySourceReadWriteAccessors",
          "description": "Edits read/write accessors of an inventory source. Returns the updated read_write_accessors for the inventory source.",
          "id": "displayvideo.inventorySources.editInventorySourceReadWriteAccessors",
          "httpMethod": "POST",
          "response": {
            "$ref": "InventorySourceAccessors"
          },
          "parameters": {
            "inventorySourceId": {
              "type": "string",
              "description": "Required. The ID of inventory source to update.",
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path",
              "format": "int64"
            }
          },
          "path": "v2/inventorySources/{+inventorySourceId}:editInventorySourceReadWriteAccessors"
        },
        "list": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "ListInventorySourcesResponse"
          },
          "flatPath": "v2/inventorySources",
          "description": "Lists inventory sources that are accessible to the current user. The order is defined by the order_by parameter. If a filter by entity_status is not specified, inventory sources with entity status `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
          "parameterOrder": [],
          "id": "displayvideo.inventorySources.list",
          "path": "v2/inventorySources",
          "parameters": {
            "partnerId": {
              "description": "The ID of the partner that has access to the inventory source.",
              "type": "string",
              "format": "int64",
              "location": "query"
            },
            "advertiserId": {
              "location": "query",
              "format": "int64",
              "description": "The ID of the advertiser that has access to the inventory source.",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInventorySources` method. If not specified, the first page of results will be returned."
            },
            "orderBy": {
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`.",
              "location": "query",
              "type": "string"
            },
            "filter": {
              "location": "query",
              "description": "Allows filtering by inventory source properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `status.entityStatus` - `commitment` - `deliveryMethod` - `rateDetails.rateType` - `exchange` Examples: * All active inventory sources: `status.entityStatus=\"ENTITY_STATUS_ACTIVE\"` * Inventory sources belonging to Google Ad Manager or Rubicon exchanges: `exchange=\"EXCHANGE_GOOGLE_AD_MANAGER\" OR exchange=\"EXCHANGE_RUBICON\"` The length of this field should be no more than 500 characters.",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`."
            }
          }
        },
        "create": {
          "request": {
            "$ref": "InventorySource"
          },
          "parameterOrder": [],
          "parameters": {
            "advertiserId": {
              "type": "string",
              "format": "int64",
              "description": "The ID of the advertiser that the request is being made within.",
              "location": "query"
            },
            "partnerId": {
              "type": "string",
              "location": "query",
              "description": "The ID of the partner that the request is being made within.",
              "format": "int64"
            }
          },
          "path": "v2/inventorySources",
          "flatPath": "v2/inventorySources",
          "httpMethod": "POST",
          "response": {
            "$ref": "InventorySource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.inventorySources.create",
          "description": "Creates a new inventory source. Returns the newly created inventory source if successful."
        },
        "get": {
          "httpMethod": "GET",
          "description": "Gets an inventory source.",
          "parameterOrder": [
            "inventorySourceId"
          ],
          "id": "displayvideo.inventorySources.get",
          "path": "v2/inventorySources/{+inventorySourceId}",
          "response": {
            "$ref": "InventorySource"
          },
          "flatPath": "v2/inventorySources/{inventorySourcesId}",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "partnerId": {
              "description": "Required. The ID of the DV360 partner to which the fetched inventory source is permissioned.",
              "type": "string",
              "format": "int64",
              "location": "query"
            },
            "inventorySourceId": {
              "format": "int64",
              "description": "Required. The ID of the inventory source to fetch.",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path"
            }
          }
        }
      }
    },
    "targetingTypes": {
      "resources": {
        "targetingOptions": {
          "methods": {
            "search": {
              "flatPath": "v2/targetingTypes/{targetingTypesId}/targetingOptions:search",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "SearchTargetingOptionsResponse"
              },
              "parameters": {
                "targetingType": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "Required. The type of targeting options to retrieve. Accepted values are: * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_POI` * `TARGETING_TYPE_BUSINESS_CHAIN`",
                  "required": true,
                  "enumDescriptions": [
                    "Default value when type is not specified or is unknown in this version.",
                    "Target a channel (a custom group of related websites or apps).",
                    "Target an app category (for example, education or puzzle games).",
                    "Target a specific app (for example, Angry Birds).",
                    "Target a specific url (for example, quora.com).",
                    "Target ads during a chosen time period on a specific day.",
                    "Target ads to a specific age range (for example, 18-24).",
                    "Target ads to the specified regions on a regional location list.",
                    "Target ads to the specified points of interest on a proximity location list.",
                    "Target ads to a specific gender (for example, female or male).",
                    "Target a specific video player size for video ads.",
                    "Target user rewarded content for video ads.",
                    "Target ads to a specific parental status (for example, parent or not a parent).",
                    "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                    "Target ads in a specific content outstream position.",
                    "Target ads to a specific device type (for example, tablet or connected TV).",
                    "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                    "Target ads to specific web browsers (for example, Chrome).",
                    "Target ads to a specific household income range (for example, top 10%).",
                    "Target ads in a specific on screen position.",
                    "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                    "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                    "Filter website content by sensitive categories (for example, adult).",
                    "Target ads to a specific environment (for example, web or app).",
                    "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                    "Target ads to a specific operating system (for example, macOS).",
                    "Target ads to a specific device make or model (for example, Roku or Samsung).",
                    "Target ads to a specific keyword (for example, dog or retriever).",
                    "Target ads to a specific negative keyword list.",
                    "Target ads to a specific viewability (for example, 80% viewable).",
                    "Target ads to a specific content category (for example, arts & entertainment).",
                    "Purchase impressions from specific deals and auction packages.",
                    "Target ads to a specific language (for example, English or Japanese).",
                    "Target ads to ads.txt authorized sellers.",
                    "Target ads to a specific regional location (for example, a city or state).",
                    "Purchase impressions from a group of deals and auction packages.",
                    "Purchase impressions from specific exchanges.",
                    "Purchase impressions from specific sub-exchanges.",
                    "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                    "Target ads around locations of a business chain within a specific geo region.",
                    "Target ads to a specific video content duration.",
                    "Target ads to a specific video content stream type.",
                    "Target ads to a specific native content position.",
                    "Target ads in an Open Measurement enabled inventory.",
                    "Target ads to a specific audio content type.",
                    "Target ads to a specific content genre."
                  ],
                  "enum": [
                    "TARGETING_TYPE_UNSPECIFIED",
                    "TARGETING_TYPE_CHANNEL",
                    "TARGETING_TYPE_APP_CATEGORY",
                    "TARGETING_TYPE_APP",
                    "TARGETING_TYPE_URL",
                    "TARGETING_TYPE_DAY_AND_TIME",
                    "TARGETING_TYPE_AGE_RANGE",
                    "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                    "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                    "TARGETING_TYPE_GENDER",
                    "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                    "TARGETING_TYPE_USER_REWARDED_CONTENT",
                    "TARGETING_TYPE_PARENTAL_STATUS",
                    "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                    "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                    "TARGETING_TYPE_DEVICE_TYPE",
                    "TARGETING_TYPE_AUDIENCE_GROUP",
                    "TARGETING_TYPE_BROWSER",
                    "TARGETING_TYPE_HOUSEHOLD_INCOME",
                    "TARGETING_TYPE_ON_SCREEN_POSITION",
                    "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                    "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                    "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                    "TARGETING_TYPE_ENVIRONMENT",
                    "TARGETING_TYPE_CARRIER_AND_ISP",
                    "TARGETING_TYPE_OPERATING_SYSTEM",
                    "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                    "TARGETING_TYPE_KEYWORD",
                    "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                    "TARGETING_TYPE_VIEWABILITY",
                    "TARGETING_TYPE_CATEGORY",
                    "TARGETING_TYPE_INVENTORY_SOURCE",
                    "TARGETING_TYPE_LANGUAGE",
                    "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                    "TARGETING_TYPE_GEO_REGION",
                    "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                    "TARGETING_TYPE_EXCHANGE",
                    "TARGETING_TYPE_SUB_EXCHANGE",
                    "TARGETING_TYPE_POI",
                    "TARGETING_TYPE_BUSINESS_CHAIN",
                    "TARGETING_TYPE_CONTENT_DURATION",
                    "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                    "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                    "TARGETING_TYPE_OMID",
                    "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                    "TARGETING_TYPE_CONTENT_GENRE"
                  ],
                  "type": "string"
                }
              },
              "parameterOrder": [
                "targetingType"
              ],
              "description": "Searches for targeting options of a given type based on the given search terms.",
              "request": {
                "$ref": "SearchTargetingOptionsRequest"
              },
              "id": "displayvideo.targetingTypes.targetingOptions.search",
              "httpMethod": "POST",
              "path": "v2/targetingTypes/{+targetingType}/targetingOptions:search"
            },
            "get": {
              "path": "v2/targetingTypes/{+targetingType}/targetingOptions/{+targetingOptionId}",
              "flatPath": "v2/targetingTypes/{targetingTypesId}/targetingOptions/{targetingOptionsId}",
              "parameterOrder": [
                "targetingType",
                "targetingOptionId"
              ],
              "parameters": {
                "advertiserId": {
                  "description": "Required. The Advertiser this request is being made in the context of.",
                  "type": "string",
                  "location": "query",
                  "format": "int64"
                },
                "targetingType": {
                  "enum": [
                    "TARGETING_TYPE_UNSPECIFIED",
                    "TARGETING_TYPE_CHANNEL",
                    "TARGETING_TYPE_APP_CATEGORY",
                    "TARGETING_TYPE_APP",
                    "TARGETING_TYPE_URL",
                    "TARGETING_TYPE_DAY_AND_TIME",
                    "TARGETING_TYPE_AGE_RANGE",
                    "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                    "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                    "TARGETING_TYPE_GENDER",
                    "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                    "TARGETING_TYPE_USER_REWARDED_CONTENT",
                    "TARGETING_TYPE_PARENTAL_STATUS",
                    "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                    "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                    "TARGETING_TYPE_DEVICE_TYPE",
                    "TARGETING_TYPE_AUDIENCE_GROUP",
                    "TARGETING_TYPE_BROWSER",
                    "TARGETING_TYPE_HOUSEHOLD_INCOME",
                    "TARGETING_TYPE_ON_SCREEN_POSITION",
                    "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                    "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                    "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                    "TARGETING_TYPE_ENVIRONMENT",
                    "TARGETING_TYPE_CARRIER_AND_ISP",
                    "TARGETING_TYPE_OPERATING_SYSTEM",
                    "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                    "TARGETING_TYPE_KEYWORD",
                    "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                    "TARGETING_TYPE_VIEWABILITY",
                    "TARGETING_TYPE_CATEGORY",
                    "TARGETING_TYPE_INVENTORY_SOURCE",
                    "TARGETING_TYPE_LANGUAGE",
                    "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                    "TARGETING_TYPE_GEO_REGION",
                    "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                    "TARGETING_TYPE_EXCHANGE",
                    "TARGETING_TYPE_SUB_EXCHANGE",
                    "TARGETING_TYPE_POI",
                    "TARGETING_TYPE_BUSINESS_CHAIN",
                    "TARGETING_TYPE_CONTENT_DURATION",
                    "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                    "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                    "TARGETING_TYPE_OMID",
                    "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                    "TARGETING_TYPE_CONTENT_GENRE"
                  ],
                  "type": "string",
                  "description": "Required. The type of targeting option to retrieve. Accepted values are: * `TARGETING_TYPE_APP_CATEGORY` * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_VIDEO_PLAYER_SIZE` * `TARGETING_TYPE_USER_REWARDED_CONTENT` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DEVICE_TYPE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_CARRIER_AND_ISP` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_VIEWABILITY` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_NATIVE_CONTENT_POSITION` * `TARGETING_TYPE_OMID`",
                  "pattern": "^[^/]+$",
                  "enumDescriptions": [
                    "Default value when type is not specified or is unknown in this version.",
                    "Target a channel (a custom group of related websites or apps).",
                    "Target an app category (for example, education or puzzle games).",
                    "Target a specific app (for example, Angry Birds).",
                    "Target a specific url (for example, quora.com).",
                    "Target ads during a chosen time period on a specific day.",
                    "Target ads to a specific age range (for example, 18-24).",
                    "Target ads to the specified regions on a regional location list.",
                    "Target ads to the specified points of interest on a proximity location list.",
                    "Target ads to a specific gender (for example, female or male).",
                    "Target a specific video player size for video ads.",
                    "Target user rewarded content for video ads.",
                    "Target ads to a specific parental status (for example, parent or not a parent).",
                    "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                    "Target ads in a specific content outstream position.",
                    "Target ads to a specific device type (for example, tablet or connected TV).",
                    "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                    "Target ads to specific web browsers (for example, Chrome).",
                    "Target ads to a specific household income range (for example, top 10%).",
                    "Target ads in a specific on screen position.",
                    "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                    "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                    "Filter website content by sensitive categories (for example, adult).",
                    "Target ads to a specific environment (for example, web or app).",
                    "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                    "Target ads to a specific operating system (for example, macOS).",
                    "Target ads to a specific device make or model (for example, Roku or Samsung).",
                    "Target ads to a specific keyword (for example, dog or retriever).",
                    "Target ads to a specific negative keyword list.",
                    "Target ads to a specific viewability (for example, 80% viewable).",
                    "Target ads to a specific content category (for example, arts & entertainment).",
                    "Purchase impressions from specific deals and auction packages.",
                    "Target ads to a specific language (for example, English or Japanese).",
                    "Target ads to ads.txt authorized sellers.",
                    "Target ads to a specific regional location (for example, a city or state).",
                    "Purchase impressions from a group of deals and auction packages.",
                    "Purchase impressions from specific exchanges.",
                    "Purchase impressions from specific sub-exchanges.",
                    "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                    "Target ads around locations of a business chain within a specific geo region.",
                    "Target ads to a specific video content duration.",
                    "Target ads to a specific video content stream type.",
                    "Target ads to a specific native content position.",
                    "Target ads in an Open Measurement enabled inventory.",
                    "Target ads to a specific audio content type.",
                    "Target ads to a specific content genre."
                  ],
                  "required": true,
                  "location": "path"
                },
                "targetingOptionId": {
                  "required": true,
                  "description": "Required. The ID of the of targeting option to retrieve.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$"
                }
              },
              "id": "displayvideo.targetingTypes.targetingOptions.get",
              "httpMethod": "GET",
              "description": "Gets a single targeting option.",
              "response": {
                "$ref": "TargetingOption"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            },
            "list": {
              "parameters": {
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `targetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingOptionId desc`."
                },
                "targetingType": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "Required. The type of targeting option to be listed. Accepted values are: * `TARGETING_TYPE_APP_CATEGORY` * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_VIDEO_PLAYER_SIZE` * `TARGETING_TYPE_USER_REWARDED_CONTENT` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DEVICE_TYPE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_CARRIER_AND_ISP` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_VIEWABILITY` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_NATIVE_CONTENT_POSITION` * `TARGETING_TYPE_OMID`",
                  "enumDescriptions": [
                    "Default value when type is not specified or is unknown in this version.",
                    "Target a channel (a custom group of related websites or apps).",
                    "Target an app category (for example, education or puzzle games).",
                    "Target a specific app (for example, Angry Birds).",
                    "Target a specific url (for example, quora.com).",
                    "Target ads during a chosen time period on a specific day.",
                    "Target ads to a specific age range (for example, 18-24).",
                    "Target ads to the specified regions on a regional location list.",
                    "Target ads to the specified points of interest on a proximity location list.",
                    "Target ads to a specific gender (for example, female or male).",
                    "Target a specific video player size for video ads.",
                    "Target user rewarded content for video ads.",
                    "Target ads to a specific parental status (for example, parent or not a parent).",
                    "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                    "Target ads in a specific content outstream position.",
                    "Target ads to a specific device type (for example, tablet or connected TV).",
                    "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                    "Target ads to specific web browsers (for example, Chrome).",
                    "Target ads to a specific household income range (for example, top 10%).",
                    "Target ads in a specific on screen position.",
                    "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                    "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                    "Filter website content by sensitive categories (for example, adult).",
                    "Target ads to a specific environment (for example, web or app).",
                    "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                    "Target ads to a specific operating system (for example, macOS).",
                    "Target ads to a specific device make or model (for example, Roku or Samsung).",
                    "Target ads to a specific keyword (for example, dog or retriever).",
                    "Target ads to a specific negative keyword list.",
                    "Target ads to a specific viewability (for example, 80% viewable).",
                    "Target ads to a specific content category (for example, arts & entertainment).",
                    "Purchase impressions from specific deals and auction packages.",
                    "Target ads to a specific language (for example, English or Japanese).",
                    "Target ads to ads.txt authorized sellers.",
                    "Target ads to a specific regional location (for example, a city or state).",
                    "Purchase impressions from a group of deals and auction packages.",
                    "Purchase impressions from specific exchanges.",
                    "Purchase impressions from specific sub-exchanges.",
                    "Target ads around a specific point of interest, such as a notable building, a street address, or latitude/longitude coordinates.",
                    "Target ads around locations of a business chain within a specific geo region.",
                    "Target ads to a specific video content duration.",
                    "Target ads to a specific video content stream type.",
                    "Target ads to a specific native content position.",
                    "Target ads in an Open Measurement enabled inventory.",
                    "Target ads to a specific audio content type.",
                    "Target ads to a specific content genre."
                  ],
                  "required": true,
                  "type": "string",
                  "enum": [
                    "TARGETING_TYPE_UNSPECIFIED",
                    "TARGETING_TYPE_CHANNEL",
                    "TARGETING_TYPE_APP_CATEGORY",
                    "TARGETING_TYPE_APP",
                    "TARGETING_TYPE_URL",
                    "TARGETING_TYPE_DAY_AND_TIME",
                    "TARGETING_TYPE_AGE_RANGE",
                    "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                    "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                    "TARGETING_TYPE_GENDER",
                    "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                    "TARGETING_TYPE_USER_REWARDED_CONTENT",
                    "TARGETING_TYPE_PARENTAL_STATUS",
                    "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                    "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                    "TARGETING_TYPE_DEVICE_TYPE",
                    "TARGETING_TYPE_AUDIENCE_GROUP",
                    "TARGETING_TYPE_BROWSER",
                    "TARGETING_TYPE_HOUSEHOLD_INCOME",
                    "TARGETING_TYPE_ON_SCREEN_POSITION",
                    "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                    "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                    "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                    "TARGETING_TYPE_ENVIRONMENT",
                    "TARGETING_TYPE_CARRIER_AND_ISP",
                    "TARGETING_TYPE_OPERATING_SYSTEM",
                    "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                    "TARGETING_TYPE_KEYWORD",
                    "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                    "TARGETING_TYPE_VIEWABILITY",
                    "TARGETING_TYPE_CATEGORY",
                    "TARGETING_TYPE_INVENTORY_SOURCE",
                    "TARGETING_TYPE_LANGUAGE",
                    "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                    "TARGETING_TYPE_GEO_REGION",
                    "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                    "TARGETING_TYPE_EXCHANGE",
                    "TARGETING_TYPE_SUB_EXCHANGE",
                    "TARGETING_TYPE_POI",
                    "TARGETING_TYPE_BUSINESS_CHAIN",
                    "TARGETING_TYPE_CONTENT_DURATION",
                    "TARGETING_TYPE_CONTENT_STREAM_TYPE",
                    "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
                    "TARGETING_TYPE_OMID",
                    "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
                    "TARGETING_TYPE_CONTENT_GENRE"
                  ]
                },
                "advertiserId": {
                  "description": "Required. The Advertiser this request is being made in the context of.",
                  "format": "int64",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `OR` logical operators. * A restriction has the form of `{field} {operator} {value}`. * The operator must be \"=\" (equal sign). * Supported fields: - `carrierAndIspDetails.type` - `geoRegionDetails.geoRegionType` - `targetingOptionId` Examples: * All `GEO REGION` targeting options that belong to sub type `GEO_REGION_TYPE_COUNTRY` or `GEO_REGION_TYPE_STATE`: `geoRegionDetails.geoRegionType=\"GEO_REGION_TYPE_COUNTRY\" OR geoRegionDetails.geoRegionType=\"GEO_REGION_TYPE_STATE\"` * All `CARRIER AND ISP` targeting options that belong to sub type `CARRIER_AND_ISP_TYPE_CARRIER`: `carrierAndIspDetails.type=\"CARRIER_AND_ISP_TYPE_CARRIER\"`. The length of this field should be no more than 500 characters.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListTargetingOptions` method. If not specified, the first page of results will be returned.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "format": "int32"
                }
              },
              "response": {
                "$ref": "ListTargetingOptionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v2/targetingTypes/{targetingTypesId}/targetingOptions",
              "parameterOrder": [
                "targetingType"
              ],
              "id": "displayvideo.targetingTypes.targetingOptions.list",
              "httpMethod": "GET",
              "description": "Lists targeting options of a given type.",
              "path": "v2/targetingTypes/{+targetingType}/targetingOptions"
            }
          }
        }
      }
    },
    "combinedAudiences": {
      "methods": {
        "get": {
          "description": "Gets a combined audience.",
          "parameterOrder": [
            "combinedAudienceId"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "CombinedAudience"
          },
          "id": "displayvideo.combinedAudiences.get",
          "flatPath": "v2/combinedAudiences/{combinedAudiencesId}",
          "path": "v2/combinedAudiences/{+combinedAudienceId}",
          "parameters": {
            "combinedAudienceId": {
              "location": "path",
              "description": "Required. The ID of the combined audience to fetch.",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            },
            "advertiserId": {
              "description": "The ID of the advertiser that has access to the fetched combined audience.",
              "type": "string",
              "location": "query",
              "format": "int64"
            },
            "partnerId": {
              "format": "int64",
              "description": "The ID of the partner that has access to the fetched combined audience.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        },
        "list": {
          "path": "v2/combinedAudiences",
          "httpMethod": "GET",
          "description": "Lists combined audiences. The order is defined by the order_by parameter.",
          "response": {
            "$ref": "ListCombinedAudiencesResponse"
          },
          "flatPath": "v2/combinedAudiences",
          "parameterOrder": [],
          "parameters": {
            "pageSize": {
              "location": "query",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "format": "int32",
              "type": "integer"
            },
            "filter": {
              "description": "Allows filtering by combined audience fields. Supported syntax: * Filter expressions for combined audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All combined audiences for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCombinedAudiences` method. If not specified, the first page of results will be returned.",
              "type": "string"
            },
            "partnerId": {
              "description": "The ID of the partner that has access to the fetched combined audiences.",
              "type": "string",
              "format": "int64",
              "location": "query"
            },
            "advertiserId": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "The ID of the advertiser that has access to the fetched combined audiences."
            },
            "orderBy": {
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `combinedAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.combinedAudiences.list"
        }
      }
    },
    "inventorySourceGroups": {
      "methods": {
        "patch": {
          "httpMethod": "PATCH",
          "flatPath": "v2/inventorySourceGroups/{inventorySourceGroupId}",
          "description": "Updates an inventory source group. Returns the updated inventory source group if successful.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "inventorySourceGroupId": {
              "description": "Output only. The unique ID of the inventory source group. Assigned by the system.",
              "required": true,
              "format": "int64",
              "location": "path",
              "type": "string"
            },
            "partnerId": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "The ID of the partner that owns the inventory source group. Only this partner has write access to this group."
            },
            "advertiserId": {
              "format": "int64",
              "type": "string",
              "description": "The ID of the advertiser that owns the inventory source group. The parent partner does not have access to this group.",
              "location": "query"
            },
            "updateMask": {
              "type": "string",
              "location": "query",
              "description": "Required. The mask to control which fields to update.",
              "format": "google-fieldmask"
            }
          },
          "response": {
            "$ref": "InventorySourceGroup"
          },
          "path": "v2/inventorySourceGroups/{inventorySourceGroupId}",
          "id": "displayvideo.inventorySourceGroups.patch",
          "request": {
            "$ref": "InventorySourceGroup"
          },
          "parameterOrder": [
            "inventorySourceGroupId"
          ]
        },
        "list": {
          "flatPath": "v2/inventorySourceGroups",
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "ListInventorySourceGroupsResponse"
          },
          "path": "v2/inventorySourceGroups",
          "description": "Lists inventory source groups that are accessible to the current user. The order is defined by the order_by parameter.",
          "id": "displayvideo.inventorySourceGroups.list",
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInventorySources` method. If not specified, the first page of results will be returned.",
              "type": "string"
            },
            "pageSize": {
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
              "type": "integer",
              "format": "int32",
              "location": "query"
            },
            "filter": {
              "description": "Allows filtering by inventory source group properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `inventorySourceGroupId` The length of this field should be no more than 500 characters.",
              "type": "string",
              "location": "query"
            },
            "advertiserId": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group."
            },
            "orderBy": {
              "location": "query",
              "type": "string",
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `inventorySourceGroupId` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`."
            },
            "partnerId": {
              "type": "string",
              "description": "The ID of the partner that has access to the inventory source group. A partner cannot access advertiser-owned inventory source groups.",
              "format": "int64",
              "location": "query"
            }
          }
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "inventorySourceGroupId"
          ],
          "flatPath": "v2/inventorySourceGroups/{inventorySourceGroupsId}",
          "description": "Gets an inventory source group.",
          "path": "v2/inventorySourceGroups/{+inventorySourceGroupId}",
          "id": "displayvideo.inventorySourceGroups.get",
          "parameters": {
            "inventorySourceGroupId": {
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "format": "int64",
              "required": true,
              "description": "Required. The ID of the inventory source group to fetch."
            },
            "partnerId": {
              "description": "The ID of the partner that has access to the inventory source group. A partner cannot access an advertiser-owned inventory source group.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "advertiserId": {
              "type": "string",
              "format": "int64",
              "description": "The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group.",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "InventorySourceGroup"
          }
        },
        "create": {
          "response": {
            "$ref": "InventorySourceGroup"
          },
          "request": {
            "$ref": "InventorySourceGroup"
          },
          "parameters": {
            "partnerId": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "The ID of the partner that owns the inventory source group. Only this partner will have write access to this group. Only advertisers to which this group is explicitly shared will have read access to this group."
            },
            "advertiserId": {
              "format": "int64",
              "location": "query",
              "type": "string",
              "description": "The ID of the advertiser that owns the inventory source group. The parent partner will not have access to this group."
            }
          },
          "path": "v2/inventorySourceGroups",
          "description": "Creates a new inventory source group. Returns the newly created inventory source group if successful.",
          "flatPath": "v2/inventorySourceGroups",
          "parameterOrder": [],
          "httpMethod": "POST",
          "id": "displayvideo.inventorySourceGroups.create",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        },
        "delete": {
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "partnerId": {
              "description": "The ID of the partner that owns the inventory source group. Only this partner has write access to this group.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "advertiserId": {
              "format": "int64",
              "location": "query",
              "description": "The ID of the advertiser that owns the inventory source group. The parent partner does not have access to this group.",
              "type": "string"
            },
            "inventorySourceGroupId": {
              "location": "path",
              "description": "Required. The ID of the inventory source group to delete.",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "description": "Deletes an inventory source group.",
          "id": "displayvideo.inventorySourceGroups.delete",
          "flatPath": "v2/inventorySourceGroups/{inventorySourceGroupsId}",
          "httpMethod": "DELETE",
          "path": "v2/inventorySourceGroups/{+inventorySourceGroupId}",
          "parameterOrder": [
            "inventorySourceGroupId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        }
      },
      "resources": {
        "assignedInventorySources": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "inventorySourceGroupId",
                "assignedInventorySourceId"
              ],
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "description": "The ID of the advertiser that owns the parent inventory source group. The parent partner does not have access to this assigned inventory source.",
                  "location": "query",
                  "format": "int64"
                },
                "assignedInventorySourceId": {
                  "required": true,
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "type": "string",
                  "description": "Required. The ID of the assigned inventory source to delete."
                },
                "partnerId": {
                  "description": "The ID of the partner that owns the parent inventory source group. Only this partner has write access to this assigned inventory source.",
                  "format": "int64",
                  "type": "string",
                  "location": "query"
                },
                "inventorySourceGroupId": {
                  "format": "int64",
                  "location": "path",
                  "description": "Required. The ID of the inventory source group to which this assignment is assigned.",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$"
                }
              },
              "flatPath": "v2/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources/{assignedInventorySourcesId}",
              "description": "Deletes the assignment between an inventory source and an inventory source group.",
              "response": {
                "$ref": "Empty"
              },
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.delete",
              "path": "v2/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources/{+assignedInventorySourceId}"
            },
            "list": {
              "path": "v2/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources",
              "flatPath": "v2/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources",
              "httpMethod": "GET",
              "parameterOrder": [
                "inventorySourceGroupId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "ListAssignedInventorySourcesResponse"
              },
              "description": "Lists inventory sources assigned to an inventory source group.",
              "parameters": {
                "partnerId": {
                  "type": "string",
                  "description": "The ID of the partner that has access to the assignment. If the parent inventory source group is advertiser-owned, the assignment cannot be accessed via a partner.",
                  "format": "int64",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAssignedInventorySources` method. If not specified, the first page of results will be returned.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows filtering by assigned inventory source fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedInventorySourceId` The length of this field should be no more than 500 characters."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "location": "query",
                  "format": "int32"
                },
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `assignedInventorySourceId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `assignedInventorySourceId desc`."
                },
                "inventorySourceGroupId": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the inventory source group to which these assignments are assigned.",
                  "format": "int64",
                  "required": true
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that has access to the assignment. If the parent inventory source group is partner-owned, only advertisers to which the parent group is explicitly shared can access the assigned inventory source.",
                  "location": "query",
                  "format": "int64",
                  "type": "string"
                }
              },
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.list"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "request": {
                "$ref": "AssignedInventorySource"
              },
              "parameters": {
                "partnerId": {
                  "location": "query",
                  "format": "int64",
                  "type": "string",
                  "description": "The ID of the partner that owns the parent inventory source group. Only this partner will have write access to this assigned inventory source."
                },
                "inventorySourceGroupId": {
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the inventory source group to which the assignment will be assigned.",
                  "pattern": "^[^/]+$",
                  "type": "string"
                },
                "advertiserId": {
                  "location": "query",
                  "format": "int64",
                  "type": "string",
                  "description": "The ID of the advertiser that owns the parent inventory source group. The parent partner will not have access to this assigned inventory source."
                }
              },
              "description": "Creates an assignment between an inventory source and an inventory source group.",
              "parameterOrder": [
                "inventorySourceGroupId"
              ],
              "path": "v2/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources",
              "flatPath": "v2/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources",
              "httpMethod": "POST",
              "response": {
                "$ref": "AssignedInventorySource"
              },
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.create"
            },
            "bulkEdit": {
              "request": {
                "$ref": "BulkEditAssignedInventorySourcesRequest"
              },
              "response": {
                "$ref": "BulkEditAssignedInventorySourcesResponse"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "inventorySourceGroupId"
              ],
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.bulkEdit",
              "path": "v2/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources:bulkEdit",
              "parameters": {
                "inventorySourceGroupId": {
                  "required": true,
                  "format": "int64",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The ID of the inventory source group to which the assignments are assigned.",
                  "pattern": "^[^/]+$"
                }
              },
              "flatPath": "v2/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources:bulkEdit",
              "description": "Bulk edits multiple assignments between inventory sources and a single inventory source group. The operation will delete the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.deleted_assigned_inventory_sources and then create the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.created_assigned_inventory_sources.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "version": "v2",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "displayvideo:v2",
  "protocol": "rest",
  "description": "Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.",
  "baseUrl": "https://displayvideo.googleapis.com/"
}
