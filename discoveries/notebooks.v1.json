{
  "canonicalName": "AI Platform Notebooks",
  "documentationLink": "https://cloud.google.com/notebooks/docs/",
  "title": "Notebooks API",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://notebooks.mtls.googleapis.com/",
  "schemas": {
    "RuntimeMetrics": {
      "description": "Contains runtime daemon metrics, such as OS and kernels and sessions stats.",
      "type": "object",
      "id": "RuntimeMetrics",
      "properties": {
        "systemMetrics": {
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. The system metrics.",
          "type": "object"
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      }
    },
    "Instance": {
      "description": "The definition of a notebook instance.",
      "id": "Instance",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTING",
            "PROVISIONING",
            "ACTIVE",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPGRADING",
            "INITIALIZING",
            "REGISTERING",
            "SUSPENDING",
            "SUSPENDED"
          ],
          "description": "Output only. The state of this instance.",
          "enumDescriptions": [
            "State is not specified.",
            "The control logic is starting the instance.",
            "The control logic is installing required frameworks and registering the instance with notebook proxy",
            "The instance is running.",
            "The control logic is stopping the instance.",
            "The instance is stopped.",
            "The instance is deleted.",
            "The instance is upgrading.",
            "The instance is being created.",
            "The instance is getting registered.",
            "The instance is suspending.",
            "The instance is suspended."
          ],
          "readOnly": true,
          "type": "string"
        },
        "network": {
          "description": "The name of the VPC that this instance is in. Format: `projects/{project_id}/global/networks/{network_id}`",
          "type": "string"
        },
        "diskEncryption": {
          "enumDescriptions": [
            "Disk encryption is not specified.",
            "Use Google managed encryption keys to encrypt the boot disk.",
            "Use customer managed encryption keys to encrypt the boot disk."
          ],
          "description": "Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.",
          "enum": [
            "DISK_ENCRYPTION_UNSPECIFIED",
            "GMEK",
            "CMEK"
          ],
          "type": "string"
        },
        "machineType": {
          "description": "Required. The [Compute Engine machine type](/compute/docs/machine-types) of this instance.",
          "type": "string"
        },
        "vmImage": {
          "$ref": "VmImage",
          "description": "Use a Compute Engine VM image to start the notebook instance."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Instance update time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "Custom metadata to apply to this instance.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "customGpuDriverPath": {
          "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
          "type": "string"
        },
        "serviceAccountScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. If not specified, the following [scopes](https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam) are defined: - https://www.googleapis.com/auth/cloud-platform - https://www.googleapis.com/auth/userinfo.email If not using default scopes, you need at least: https://www.googleapis.com/auth/compute"
        },
        "postStartupScript": {
          "type": "string",
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`)."
        },
        "instanceOwners": {
          "type": "array",
          "description": "Input only. The owner of this instance after creation. Format: `alias@example.com` Currently supports one owner only. If not specified, all of the service account users of your VM instance's service account can use the instance.",
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. Instance creation time.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account on this instance, giving access to other Google Cloud services. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used."
        },
        "disks": {
          "items": {
            "$ref": "Disk"
          },
          "type": "array",
          "description": "Output only. Attached disks to notebook instance.",
          "readOnly": true
        },
        "bootDiskType": {
          "description": "Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).",
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "type": "string",
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ]
        },
        "creator": {
          "readOnly": true,
          "description": "Output only. Email address of entity that sent original CreateInstance request.",
          "type": "string"
        },
        "proxyUri": {
          "description": "Output only. The proxy endpoint that is used to access the Jupyter notebook.",
          "readOnly": true,
          "type": "string"
        },
        "nicType": {
          "enum": [
            "UNSPECIFIED_NIC_TYPE",
            "VIRTIO_NET",
            "GVNIC"
          ],
          "enumDescriptions": [
            "No type specified.",
            "VIRTIO",
            "GVNIC"
          ],
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
          "type": "string"
        },
        "upgradeHistory": {
          "items": {
            "$ref": "UpgradeHistoryEntry"
          },
          "description": "The upgrade history of this instance.",
          "type": "array"
        },
        "tags": {
          "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kmsKey": {
          "description": "Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about [using your own encryption keys](/kms/docs/quickstart).",
          "type": "string"
        },
        "bootDiskSizeGb": {
          "format": "int64",
          "type": "string",
          "description": "Input only. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not specified, this defaults to 100."
        },
        "acceleratorConfig": {
          "description": "The hardware accelerator used on this instance. If you use accelerators, make sure that your configuration has [enough vCPUs and memory to support the `machine_type` you have selected](/compute/docs/gpus/#gpus-list).",
          "$ref": "AcceleratorConfig"
        },
        "noProxyAccess": {
          "description": "If true, the notebook instance will not register with the proxy.",
          "type": "boolean"
        },
        "noPublicIp": {
          "type": "boolean",
          "description": "If true, no public IP will be assigned to this instance."
        },
        "shieldedInstanceConfig": {
          "description": "Optional. Shielded VM configuration. [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).",
          "$ref": "ShieldedInstanceConfig"
        },
        "noRemoveDataDisk": {
          "type": "boolean",
          "description": "Input only. If true, the data disk will not be auto deleted when deleting the instance."
        },
        "dataDiskSizeGb": {
          "description": "Input only. The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100.",
          "type": "string",
          "format": "int64"
        },
        "containerImage": {
          "description": "Use a container image to start the notebook instance.",
          "$ref": "ContainerImage"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to this instance. These can be later modified by the setLabels method."
        },
        "installGpuDriver": {
          "description": "Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to false, the GPU driver won't be installed. Only applicable to instances with GPUs.",
          "type": "boolean"
        },
        "reservationAffinity": {
          "description": "Optional. The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this notebook instance.",
          "$ref": "ReservationAffinity"
        },
        "dataDiskType": {
          "type": "string",
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ],
          "description": "Input only. The type of the data disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`)."
        },
        "subnet": {
          "description": "The name of the subnet that this instance is in. Format: `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
        },
        "canIpForward": {
          "description": "Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward",
          "type": "boolean"
        }
      }
    },
    "DiagnosticConfig": {
      "type": "object",
      "properties": {
        "repairFlagEnabled": {
          "type": "boolean",
          "description": "Optional. Enables flag to repair service for instance"
        },
        "relativePath": {
          "type": "string",
          "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (gs://$GCS_BUCKET/$DATE_$TIME.tar.gz) Example of full path where Log file will be written: gs://$GCS_BUCKET/$RELATIVE_PATH/"
        },
        "packetCaptureFlagEnabled": {
          "description": "Optional. Enables flag to capture packets from the instance for 30 seconds",
          "type": "boolean"
        },
        "gcsBucket": {
          "description": "Required. User Cloud Storage bucket location (REQUIRED) ## Must be formatted with path prefix (gs://$GCS_BUCKET) Permissions: User Managed Notebooks: - storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: - storage.buckets.writer: Must be given to the project's service account or ## user credentials attached to VM depending on authentication mode. Cloud Storage bucket Log file will be written to gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz",
          "type": "string"
        },
        "copyHomeFilesFlagEnabled": {
          "description": "Optional. Enables flag to copy all `/home/jupyter` folder contents",
          "type": "boolean"
        }
      },
      "description": "Defines flags that are used to run the diagnostic tool",
      "id": "DiagnosticConfig"
    },
    "RuntimeShieldedInstanceConfig": {
      "id": "RuntimeShieldedInstanceConfig",
      "properties": {
        "enableSecureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default."
        },
        "enableVtpm": {
          "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
          "type": "boolean"
        },
        "enableIntegrityMonitoring": {
          "type": "boolean",
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default."
        }
      },
      "description": "A set of Shielded Instance options. Check [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.",
      "type": "object"
    },
    "TriggerScheduleRequest": {
      "description": "Request for created scheduled notebooks",
      "id": "TriggerScheduleRequest",
      "properties": {},
      "type": "object"
    },
    "UpgradeHistoryEntry": {
      "description": "The entry of VM image upgrade history.",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time that this instance upgrade history entry is created."
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "The instance upgrade is started.",
            "The instance upgrade is succeeded.",
            "The instance upgrade is failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string",
          "description": "The state of this instance upgrade history entry."
        },
        "version": {
          "type": "string",
          "description": "The version of the notebook instance before this upgrade."
        },
        "snapshot": {
          "description": "The snapshot of the boot disk of this notebook instance before upgrade.",
          "type": "string"
        },
        "targetVersion": {
          "type": "string",
          "description": "Target VM Version, like m63."
        },
        "targetImage": {
          "description": "Target VM Image. Format: ainotebooks-vm/project/image-name/name.",
          "type": "string"
        },
        "vmImage": {
          "type": "string",
          "description": "The VM image before this instance upgrade."
        },
        "containerImage": {
          "description": "The container image before this instance upgrade.",
          "type": "string"
        },
        "action": {
          "enum": [
            "ACTION_UNSPECIFIED",
            "UPGRADE",
            "ROLLBACK"
          ],
          "description": "Action. Rolloback or Upgrade.",
          "enumDescriptions": [
            "Operation is not specified.",
            "Upgrade.",
            "Rollback."
          ],
          "type": "string"
        },
        "framework": {
          "type": "string",
          "description": "The framework of this notebook instance."
        }
      },
      "id": "UpgradeHistoryEntry"
    },
    "StopRuntimeRequest": {
      "properties": {
        "requestId": {
          "description": "Idempotent request UUID.",
          "type": "string"
        }
      },
      "id": "StopRuntimeRequest",
      "description": "Request for stopping a Managed Notebook Runtime.",
      "type": "object"
    },
    "ReportInstanceInfoRequest": {
      "type": "object",
      "id": "ReportInstanceInfoRequest",
      "properties": {
        "vmId": {
          "type": "string",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The metadata reported to Notebooks API. This will be merged to the instance metadata store"
        }
      },
      "description": "Request for notebook instances to report information to Notebooks API."
    },
    "RollbackInstanceRequest": {
      "description": "Request for rollbacking a notebook instance",
      "properties": {
        "targetSnapshot": {
          "description": "Required. The snapshot for rollback. Example: \"projects/test-project/global/snapshots/krwlzipynril\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RollbackInstanceRequest"
    },
    "Disk": {
      "id": "Disk",
      "description": "An instance-attached disk resource.",
      "type": "object",
      "properties": {
        "licenses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of publicly visible licenses. Reserved for Google's use. A License represents billing and aggregate usage data for public and marketplace images."
        },
        "index": {
          "type": "string",
          "description": "A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
          "format": "int64"
        },
        "mode": {
          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode. Valid values: * READ_ONLY * READ_WRITE",
          "type": "string"
        },
        "deviceName": {
          "type": "string",
          "description": "Indicates a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine.This field is only applicable for persistent disks."
        },
        "interface": {
          "description": "Indicates the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Type of the resource. Always compute#attachedDisk for attached disks."
        },
        "type": {
          "description": "Indicates the type of the disk, either SCRATCH or PERSISTENT. Valid values: * PERSISTENT * SCRATCH",
          "type": "string"
        },
        "guestOsFeatures": {
          "description": "Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.",
          "items": {
            "$ref": "GuestOsFeature"
          },
          "type": "array"
        },
        "boot": {
          "type": "boolean",
          "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
        },
        "source": {
          "description": "Indicates a valid partial or full URL to an existing Persistent Disk resource.",
          "type": "string"
        },
        "diskSizeGb": {
          "type": "string",
          "format": "int64",
          "description": "Indicates the size of the disk in base-2 GB."
        },
        "autoDelete": {
          "description": "Indicates whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
          "type": "boolean"
        }
      }
    },
    "ShieldedInstanceConfig": {
      "type": "object",
      "description": "A set of Shielded Instance options. Check [Images using supported Shielded VM features] Not all combinations are valid.",
      "properties": {
        "enableSecureBoot": {
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
          "type": "boolean"
        },
        "enableIntegrityMonitoring": {
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
          "type": "boolean"
        },
        "enableVtpm": {
          "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
          "type": "boolean"
        }
      },
      "id": "ShieldedInstanceConfig"
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "type": "object",
      "description": "Request message for `TestIamPermissions` method."
    },
    "SchedulerAcceleratorConfig": {
      "id": "SchedulerAcceleratorConfig",
      "type": "object",
      "properties": {
        "coreCount": {
          "format": "int64",
          "description": "Count of cores of this accelerator.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified accelerator type. Default to no GPU.",
            "Nvidia Tesla K80 GPU.",
            "Nvidia Tesla P100 GPU.",
            "Nvidia Tesla V100 GPU.",
            "Nvidia Tesla P4 GPU.",
            "Nvidia Tesla T4 GPU.",
            "Nvidia Tesla A100 GPU.",
            "TPU v2.",
            "TPU v3."
          ],
          "type": "string",
          "enum": [
            "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "TPU_V2",
            "TPU_V3"
          ],
          "description": "Type of this accelerator."
        }
      },
      "description": "Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus) to find a valid combination. TPUs are not supported."
    },
    "UpdateInstanceMetadataItemsResponse": {
      "type": "object",
      "id": "UpdateInstanceMetadataItemsResponse",
      "properties": {
        "items": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of items that were added/updated to/in the metadata.",
          "type": "object"
        }
      },
      "description": "Response for adding/changing metadata items for an instance."
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        }
      },
      "id": "Policy",
      "type": "object"
    },
    "Runtime": {
      "properties": {
        "name": {
          "description": "Output only. The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtimeId}`",
          "type": "string",
          "readOnly": true
        },
        "accessConfig": {
          "description": "The config settings for accessing runtime.",
          "$ref": "RuntimeAccessConfig"
        },
        "softwareConfig": {
          "$ref": "RuntimeSoftwareConfig",
          "description": "The config settings for software inside the runtime."
        },
        "metrics": {
          "$ref": "RuntimeMetrics",
          "readOnly": true,
          "description": "Output only. Contains Runtime daemon metrics such as Service status and JupyterLab stats."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Runtime state.",
          "enumDescriptions": [
            "State is not specified.",
            "The compute layer is starting the runtime. It is not ready for use.",
            "The compute layer is installing required frameworks and registering the runtime with notebook proxy. It cannot be used.",
            "The runtime is currently running. It is ready for use.",
            "The control logic is stopping the runtime. It cannot be used.",
            "The runtime is stopped. It cannot be used.",
            "The runtime is being deleted. It cannot be used.",
            "The runtime is upgrading. It cannot be used.",
            "The runtime is being created and set up. It is not ready for use."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTING",
            "PROVISIONING",
            "ACTIVE",
            "STOPPING",
            "STOPPED",
            "DELETING",
            "UPGRADING",
            "INITIALIZING"
          ]
        },
        "healthState": {
          "enumDescriptions": [
            "The runtime substate is unknown.",
            "The runtime is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.",
            "The runtime is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.",
            "The runtime has not installed health monitoring agent. Applies to ACTIVE state.",
            "The runtime health monitoring agent is not running. Applies to ACTIVE state."
          ],
          "description": "Output only. Runtime health_state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "HEALTH_STATE_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "AGENT_NOT_INSTALLED",
            "AGENT_NOT_RUNNING"
          ]
        },
        "updateTime": {
          "description": "Output only. Runtime update time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "virtualMachine": {
          "$ref": "VirtualMachine",
          "description": "Use a Compute Engine VM image to start the managed notebook instance."
        },
        "createTime": {
          "description": "Output only. Runtime creation time.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "The definition of a Runtime for a managed notebook instance.",
      "id": "Runtime",
      "type": "object"
    },
    "ListEnvironmentsResponse": {
      "id": "ListEnvironmentsResponse",
      "description": "Response for listing environments.",
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A page token that can be used to continue listing from the last result in the next list call.",
          "type": "string"
        },
        "environments": {
          "items": {
            "$ref": "Environment"
          },
          "type": "array",
          "description": "A list of returned environments."
        }
      }
    },
    "GuestOsFeature": {
      "id": "GuestOsFeature",
      "description": "Guest OS features for boot disk.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The ID of a supported feature. Read Enabling guest operating system features to see a list of available options. Valid values: * FEATURE_TYPE_UNSPECIFIED * MULTI_IP_SUBNET * SECURE_BOOT * UEFI_COMPATIBLE * VIRTIO_SCSI_MULTIQUEUE * WINDOWS"
        }
      }
    },
    "StartInstanceRequest": {
      "properties": {},
      "description": "Request for starting a notebook instance",
      "id": "StartInstanceRequest",
      "type": "object"
    },
    "Status": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object"
    },
    "UpgradeInstanceInternalRequest": {
      "properties": {
        "vmId": {
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
          "type": "string"
        },
        "type": {
          "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.",
          "enumDescriptions": [
            "Upgrade type is not specified.",
            "Upgrade ML framework.",
            "Upgrade Operating System.",
            "Upgrade CUDA.",
            "Upgrade All (OS, Framework and CUDA)."
          ],
          "enum": [
            "UPGRADE_TYPE_UNSPECIFIED",
            "UPGRADE_FRAMEWORK",
            "UPGRADE_OS",
            "UPGRADE_CUDA",
            "UPGRADE_ALL"
          ],
          "type": "string"
        }
      },
      "id": "UpgradeInstanceInternalRequest",
      "description": "Request for upgrading a notebook instance from within the VM",
      "type": "object"
    },
    "RefreshRuntimeTokenInternalResponse": {
      "type": "object",
      "id": "RefreshRuntimeTokenInternalResponse",
      "description": "Response with a new access token.",
      "properties": {
        "accessToken": {
          "description": "The OAuth 2.0 access token.",
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Token expiration time.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "RuntimeGuestOsFeature": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The ID of a supported feature. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options. Valid values: * FEATURE_TYPE_UNSPECIFIED * MULTI_IP_SUBNET * SECURE_BOOT * UEFI_COMPATIBLE * VIRTIO_SCSI_MULTIQUEUE * WINDOWS"
        }
      },
      "description": "Optional. A list of features to enable on the guest operating system. Applicable only for bootable images. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options. Guest OS features for boot disk.",
      "type": "object",
      "id": "RuntimeGuestOsFeature"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object"
    },
    "InstanceConfig": {
      "type": "object",
      "id": "InstanceConfig",
      "description": "Notebook instance configurations that can be updated.",
      "properties": {
        "enableHealthMonitoring": {
          "type": "boolean",
          "description": "Verifies core internal services are running."
        },
        "notebookUpgradeSchedule": {
          "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).",
          "type": "string"
        }
      }
    },
    "StopInstanceRequest": {
      "properties": {},
      "description": "Request for stopping a notebook instance",
      "id": "StopInstanceRequest",
      "type": "object"
    },
    "UpdateInstanceConfigRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "InstanceConfig",
          "description": "The instance configurations to be updated."
        }
      },
      "id": "UpdateInstanceConfigRequest",
      "description": "Request for updating instance configurations."
    },
    "SwitchRuntimeRequest": {
      "id": "SwitchRuntimeRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Idempotent request UUID."
        },
        "machineType": {
          "type": "string",
          "description": "machine type."
        },
        "acceleratorConfig": {
          "$ref": "RuntimeAcceleratorConfig",
          "description": "accelerator config."
        }
      },
      "type": "object",
      "description": "Request for switching a Managed Notebook Runtime."
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "SetInstanceAcceleratorRequest": {
      "id": "SetInstanceAcceleratorRequest",
      "type": "object",
      "properties": {
        "coreCount": {
          "type": "string",
          "format": "int64",
          "description": "Required. Count of cores of this accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported."
        },
        "type": {
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "NVIDIA_TESLA_T4_VWS",
            "NVIDIA_TESLA_P100_VWS",
            "NVIDIA_TESLA_P4_VWS",
            "TPU_V2",
            "TPU_V3"
          ],
          "description": "Required. Type of this accelerator.",
          "type": "string",
          "enumDescriptions": [
            "Accelerator type is not specified.",
            "Accelerator type is Nvidia Tesla K80.",
            "Accelerator type is Nvidia Tesla P100.",
            "Accelerator type is Nvidia Tesla V100.",
            "Accelerator type is Nvidia Tesla P4.",
            "Accelerator type is Nvidia Tesla T4.",
            "Accelerator type is Nvidia Tesla A100.",
            "Accelerator type is NVIDIA Tesla T4 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P100 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P4 Virtual Workstations.",
            "(Coming soon) Accelerator type is TPU V2.",
            "(Coming soon) Accelerator type is TPU V3."
          ]
        }
      },
      "description": "Request for setting instance accelerator."
    },
    "DiagnoseRuntimeRequest": {
      "id": "DiagnoseRuntimeRequest",
      "description": "Request for creating a notebook instance diagnostic file.",
      "properties": {
        "diagnosticConfig": {
          "$ref": "DiagnosticConfig",
          "description": "Required. Defines flags that are used to run the diagnostic tool"
        }
      },
      "type": "object"
    },
    "Event": {
      "type": "object",
      "description": "The definition of an Event for a managed / semi-managed notebook instance.",
      "id": "Event",
      "properties": {
        "reportTime": {
          "description": "Event report time.",
          "type": "string",
          "format": "google-datetime"
        },
        "details": {
          "type": "object",
          "description": "Optional. Event details. This field is used to pass event information.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "IDLE",
            "HEARTBEAT",
            "HEALTH",
            "MAINTENANCE"
          ],
          "description": "Event type.",
          "enumDescriptions": [
            "Event is not specified.",
            "The instance / runtime is idle",
            "The instance / runtime is available. This event indicates that instance / runtime underlying compute is operational.",
            "The instance / runtime health is available. This event indicates that instance / runtime health information.",
            "The instance / runtime is available. This event allows instance / runtime to send Host maintenance information to Control Plane. https://cloud.google.com/compute/docs/gpus/gpu-host-maintenance"
          ],
          "type": "string"
        }
      }
    },
    "RefreshRuntimeTokenInternalRequest": {
      "type": "object",
      "description": "Request for getting a new access token.",
      "id": "RefreshRuntimeTokenInternalRequest",
      "properties": {
        "vmId": {
          "type": "string",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        }
      }
    },
    "OperationMetadata": {
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint name of this operation."
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "target": {
          "type": "string",
          "description": "Server-defined resource path for the target of the operation."
        },
        "apiVersion": {
          "description": "API version used to start the operation.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was created.",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Name of the verb executed by the operation."
        },
        "requestedCancellation": {
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "type": "object"
    },
    "GetInstanceHealthResponse": {
      "id": "GetInstanceHealthResponse",
      "description": "Response for checking if a notebook instance is healthy.",
      "properties": {
        "healthInfo": {
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "type": "object",
          "description": "Output only. Additional information about instance health. Example: healthInfo\": { \"docker_proxy_agent_status\": \"1\", \"docker_status\": \"1\", \"jupyterlab_api_status\": \"-1\", \"jupyterlab_status\": \"-1\", \"updated\": \"2020-10-18 09:40:03.573409\" }"
        },
        "healthState": {
          "enum": [
            "HEALTH_STATE_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "AGENT_NOT_INSTALLED",
            "AGENT_NOT_RUNNING"
          ],
          "description": "Output only. Runtime health_state.",
          "enumDescriptions": [
            "The instance substate is unknown.",
            "The instance is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.",
            "The instance is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.",
            "The instance has not installed health monitoring agent. Applies to ACTIVE state.",
            "The instance health monitoring agent is not running. Applies to ACTIVE state."
          ],
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ListExecutionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Page token that can be used to continue listing from the last result in the next list call.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Executions IDs that could not be reached. For example: ['projects/{project_id}/location/{location}/executions/imagenet_test1', 'projects/{project_id}/location/{location}/executions/classifier_train1']",
          "type": "array"
        },
        "executions": {
          "description": "A list of returned instances.",
          "items": {
            "$ref": "Execution"
          },
          "type": "array"
        }
      },
      "description": "Response for listing scheduled notebook executions",
      "id": "ListExecutionsResponse",
      "type": "object"
    },
    "ReportRuntimeEventRequest": {
      "description": "Request for reporting a Managed Notebook Event.",
      "id": "ReportRuntimeEventRequest",
      "properties": {
        "event": {
          "description": "Required. The Event to be reported.",
          "$ref": "Event"
        },
        "vmId": {
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        }
      },
      "id": "Expr",
      "type": "object"
    },
    "EncryptionConfig": {
      "type": "object",
      "properties": {
        "kmsKey": {
          "description": "The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`",
          "type": "string"
        }
      },
      "id": "EncryptionConfig",
      "description": "Represents a custom encryption key configuration that can be applied to a resource. This will encrypt all disks in Virtual Machine."
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListSchedulesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "unreachable": {
          "description": "Schedules that could not be reached. For example: ['projects/{project_id}/location/{location}/schedules/monthly_digest', 'projects/{project_id}/location/{location}/schedules/weekly_sentiment']",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "Schedule"
          },
          "description": "A list of returned instances."
        }
      },
      "id": "ListSchedulesResponse",
      "description": "Response for listing scheduled notebook job.",
      "type": "object"
    },
    "DataprocParameters": {
      "description": "Parameters used in Dataproc JobType executions.",
      "id": "DataprocParameters",
      "properties": {
        "cluster": {
          "description": "URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpgradeInstanceRequest": {
      "description": "Request for upgrading a notebook instance",
      "properties": {
        "type": {
          "enum": [
            "UPGRADE_TYPE_UNSPECIFIED",
            "UPGRADE_FRAMEWORK",
            "UPGRADE_OS",
            "UPGRADE_CUDA",
            "UPGRADE_ALL"
          ],
          "enumDescriptions": [
            "Upgrade type is not specified.",
            "Upgrade ML framework.",
            "Upgrade Operating System.",
            "Upgrade CUDA.",
            "Upgrade All (OS, Framework and CUDA)."
          ],
          "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.",
          "type": "string"
        }
      },
      "id": "UpgradeInstanceRequest",
      "type": "object"
    },
    "Execution": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created and processing has not yet begun.",
            "The service is preparing to execution the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed. `error_message` should contain the details of the failure.",
            "The job is being cancelled. `error_message` should describe the reason for the cancellation.",
            "The job has been cancelled. `error_message` should describe the reason for the cancellation.",
            "The job has become expired (relevant to Vertex AI jobs) https://cloud.google.com/vertex-ai/docs/reference/rest/v1/JobState",
            "The Execution is being created."
          ],
          "readOnly": true,
          "description": "Output only. State of the underlying AI Platform job.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "QUEUED",
            "PREPARING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLING",
            "CANCELLED",
            "EXPIRED",
            "INITIALIZING"
          ]
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'."
        },
        "outputNotebookFile": {
          "description": "Output notebook file generated by this execution",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Time the Execution was last updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "A brief description of this execution."
        },
        "name": {
          "description": "Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`",
          "readOnly": true,
          "type": "string"
        },
        "jobUri": {
          "type": "string",
          "description": "Output only. The URI of the external job used to execute the notebook.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time the Execution was instantiated.",
          "readOnly": true
        },
        "executionTemplate": {
          "$ref": "ExecutionTemplate",
          "description": "execute metadata including name, hardware spec, region, labels, etc."
        }
      },
      "id": "Execution",
      "type": "object",
      "description": "The definition of a single executed notebook."
    },
    "ContainerImage": {
      "id": "ContainerImage",
      "type": "object",
      "description": "Definition of a container image for starting a notebook instance with the environment installed in a container.",
      "properties": {
        "repository": {
          "description": "Required. The path to the container image repository. For example: `gcr.io/{project_id}/{image_name}`",
          "type": "string"
        },
        "tag": {
          "type": "string",
          "description": "The tag of the container image. If not specified, this defaults to the latest tag."
        }
      }
    },
    "ResetRuntimeRequest": {
      "properties": {
        "requestId": {
          "description": "Idempotent request UUID.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ResetRuntimeRequest",
      "description": "Request for resetting a Managed Notebook Runtime."
    },
    "BootImage": {
      "properties": {},
      "id": "BootImage",
      "type": "object",
      "description": "Definition of the boot image used by the Runtime. Used to facilitate runtime upgradeability."
    },
    "ResetInstanceRequest": {
      "type": "object",
      "id": "ResetInstanceRequest",
      "properties": {},
      "description": "Request for resetting a notebook instance"
    },
    "AcceleratorConfig": {
      "id": "AcceleratorConfig",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Accelerator type is not specified.",
            "Accelerator type is Nvidia Tesla K80.",
            "Accelerator type is Nvidia Tesla P100.",
            "Accelerator type is Nvidia Tesla V100.",
            "Accelerator type is Nvidia Tesla P4.",
            "Accelerator type is Nvidia Tesla T4.",
            "Accelerator type is Nvidia Tesla A100.",
            "Accelerator type is NVIDIA Tesla T4 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P100 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P4 Virtual Workstations.",
            "(Coming soon) Accelerator type is TPU V2.",
            "(Coming soon) Accelerator type is TPU V3."
          ],
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "NVIDIA_TESLA_T4_VWS",
            "NVIDIA_TESLA_P100_VWS",
            "NVIDIA_TESLA_P4_VWS",
            "TPU_V2",
            "TPU_V3"
          ],
          "type": "string",
          "description": "Type of this accelerator."
        },
        "coreCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of cores of this accelerator."
        }
      },
      "description": "Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported."
    },
    "RegisterInstanceRequest": {
      "type": "object",
      "id": "RegisterInstanceRequest",
      "properties": {
        "instanceId": {
          "description": "Required. User defined unique ID of this instance. The `instance_id` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
          "type": "string"
        }
      },
      "description": "Request for registering a notebook instance."
    },
    "VirtualMachineConfig": {
      "description": "The config settings for virtual machine.",
      "type": "object",
      "id": "VirtualMachineConfig",
      "properties": {
        "acceleratorConfig": {
          "description": "Optional. The Compute Engine accelerator configuration for this runtime.",
          "$ref": "RuntimeAcceleratorConfig"
        },
        "guestAttributes": {
          "description": "Output only. The Compute Engine guest attributes. (see [Project and instance guest attributes](https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes)).",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dataDisk": {
          "$ref": "LocalDisk",
          "description": "Required. Data disk option configuration settings."
        },
        "internalIpOnly": {
          "description": "Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.",
          "type": "boolean"
        },
        "containerImages": {
          "description": "Optional. Use a list of container images to use as Kernels in the notebook instance.",
          "items": {
            "$ref": "ContainerImage"
          },
          "type": "array"
        },
        "network": {
          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither `network` nor `subnet` is specified, the \"default\" network of the project is used, if it exists. A full URL or partial URI. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default` * `projects/[project_id]/global/networks/default` Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations: * Google Managed Network (Network & subnet are empty) * Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. * Shared VPC (network & subnet are required). Requires configuring Private Service Access.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata))."
        },
        "nicType": {
          "type": "string",
          "enum": [
            "UNSPECIFIED_NIC_TYPE",
            "VIRTIO_NET",
            "GVNIC"
          ],
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
          "enumDescriptions": [
            "No type specified.",
            "VIRTIO",
            "GVNIC"
          ]
        },
        "reservedIpRange": {
          "description": "Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned. Example: managed-notebooks-range-c PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \\ --global \\ --prefix-length=24 \\ --description=\"Google Cloud Managed Notebooks Range 24 c\" \\ --network=$NETWORK \\ --addresses=192.168.0.0 \\ --purpose=VPC_PEERING Field value will be: `managed-notebooks-range-c`",
          "type": "string"
        },
        "subnet": {
          "type": "string",
          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0`"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster."
        },
        "bootImage": {
          "description": "Optional. Boot image metadata used for runtime upgradeability.",
          "$ref": "BootImage"
        },
        "encryptionConfig": {
          "$ref": "EncryptionConfig",
          "description": "Optional. Encryption settings for virtual machine data disk."
        },
        "machineType": {
          "description": "Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples: * `n1-standard-2` * `e2-standard-8`",
          "type": "string"
        },
        "shieldedInstanceConfig": {
          "description": "Optional. Shielded VM Instance configuration settings.",
          "$ref": "RuntimeShieldedInstanceConfig"
        },
        "zone": {
          "description": "Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example: * `us-central1-b`",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
          "type": "array"
        }
      }
    },
    "UpgradeRuntimeRequest": {
      "id": "UpgradeRuntimeRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Idempotent request UUID."
        }
      },
      "description": "Request for upgrading a Managed Notebook Runtime to the latest version. option (google.api.message_visibility).restriction = \"TRUSTED_TESTER,SPECIAL_TESTER\";",
      "type": "object"
    },
    "UpdateInstanceMetadataItemsRequest": {
      "id": "UpdateInstanceMetadataItemsRequest",
      "description": "Request for adding/changing metadata items for an instance.",
      "properties": {
        "items": {
          "description": "Metadata items to add/update for the instance.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RuntimeAccessConfig": {
      "description": "Specifies the login configuration for Runtime",
      "type": "object",
      "id": "RuntimeAccessConfig",
      "properties": {
        "proxyUri": {
          "readOnly": true,
          "description": "Output only. The proxy endpoint that is used to access the runtime.",
          "type": "string"
        },
        "accessType": {
          "description": "The type of access mode this instance.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified access.",
            "Single user login.",
            "Service Account mode. In Service Account mode, Runtime creator will specify a SA that exists in the consumer project. Using Runtime Service Account field. Users accessing the Runtime need ActAs (Service Account User) permission."
          ],
          "enum": [
            "RUNTIME_ACCESS_TYPE_UNSPECIFIED",
            "SINGLE_USER",
            "SERVICE_ACCOUNT"
          ]
        },
        "runtimeOwner": {
          "type": "string",
          "description": "The owner of this runtime after creation. Format: `alias@example.com` Currently supports one owner only."
        }
      }
    },
    "VertexAIParameters": {
      "properties": {
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables. At most 100 environment variables can be specified and unique. Example: GCP_BUCKET=gs://my-bucket/samples/",
          "type": "object"
        },
        "network": {
          "description": "The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Parameters used in Vertex AI JobType executions.",
      "id": "VertexAIParameters"
    },
    "LocalDisk": {
      "description": "A Local attached disk resource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Output only. Type of the resource. Always compute#attachedDisk for attached disks.",
          "readOnly": true
        },
        "initializeParams": {
          "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.",
          "$ref": "LocalDiskInitializeParams"
        },
        "licenses": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Any valid publicly visible licenses.",
          "type": "array",
          "readOnly": true
        },
        "interface": {
          "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT. Valid values: * PERSISTENT * SCRATCH",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "description": "Output only. A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number."
        },
        "autoDelete": {
          "readOnly": true,
          "description": "Optional. Output only. Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
          "type": "boolean"
        },
        "mode": {
          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode. Valid values: * READ_ONLY * READ_WRITE",
          "type": "string"
        },
        "guestOsFeatures": {
          "readOnly": true,
          "description": "Output only. Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.",
          "type": "array",
          "items": {
            "$ref": "RuntimeGuestOsFeature"
          }
        },
        "source": {
          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource.",
          "type": "string"
        },
        "boot": {
          "type": "boolean",
          "readOnly": true,
          "description": "Optional. Output only. Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
        },
        "deviceName": {
          "readOnly": true,
          "type": "string",
          "description": "Optional. Output only. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
        }
      },
      "type": "object",
      "id": "LocalDisk"
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListInstancesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached. For example, ['us-west1-a', 'us-central1-b']. A ListInstancesResponse will only contain either instances or unreachables,",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "instances": {
          "description": "A list of returned instances.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        }
      },
      "id": "ListInstancesResponse",
      "description": "Response for listing notebook instances.",
      "type": "object"
    },
    "IsInstanceUpgradeableResponse": {
      "description": "Response for checking if a notebook instance is upgradeable.",
      "id": "IsInstanceUpgradeableResponse",
      "properties": {
        "upgradeable": {
          "type": "boolean",
          "description": "If an instance is upgradeable."
        },
        "upgradeImage": {
          "description": "The new image self link this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true.",
          "type": "string"
        },
        "upgradeInfo": {
          "description": "Additional information about upgrade.",
          "type": "string"
        },
        "upgradeVersion": {
          "type": "string",
          "description": "The version this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        }
      },
      "type": "object"
    },
    "VmImage": {
      "properties": {
        "project": {
          "type": "string",
          "description": "Required. The name of the Google Cloud project that this VM image belongs to. Format: `{project_id}`"
        },
        "imageName": {
          "type": "string",
          "description": "Use VM image name to find the image."
        },
        "imageFamily": {
          "description": "Use this VM image family to find the image; the newest image in this family will be used.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.",
      "id": "VmImage"
    },
    "RuntimeSoftwareConfig": {
      "description": "Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`",
      "type": "object",
      "id": "RuntimeSoftwareConfig",
      "properties": {
        "installGpuDriver": {
          "description": "Install Nvidia Driver automatically. Default: True",
          "type": "boolean"
        },
        "enableHealthMonitoring": {
          "type": "boolean",
          "description": "Verifies core internal services are running. Default: True"
        },
        "idleShutdownTimeout": {
          "type": "integer",
          "description": "Time in minutes to wait before shutting down runtime. Default: 180 minutes",
          "format": "int32"
        },
        "upgradeable": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Bool indicating whether an newer image is available in an image family."
        },
        "customGpuDriverPath": {
          "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
          "type": "string"
        },
        "idleShutdown": {
          "type": "boolean",
          "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True"
        },
        "postStartupScript": {
          "type": "string",
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`)."
        },
        "kernels": {
          "description": "Optional. Use a list of container images to use as Kernels in the notebook instance.",
          "type": "array",
          "items": {
            "$ref": "ContainerImage"
          }
        },
        "disableTerminal": {
          "type": "boolean",
          "description": "Bool indicating whether JupyterLab terminal will be available or not. Default: False"
        },
        "notebookUpgradeSchedule": {
          "type": "string",
          "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron)."
        },
        "postStartupScriptBehavior": {
          "enumDescriptions": [
            "Unspecified post startup script behavior. Will run only once at creation.",
            "Runs the post startup script provided during creation at every start.",
            "Downloads and runs the provided post startup script at every start."
          ],
          "description": "Behavior for the post startup script.",
          "enum": [
            "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED",
            "RUN_EVERY_START",
            "DOWNLOAD_AND_RUN_EVERY_START"
          ],
          "type": "string"
        }
      }
    },
    "SetInstanceMachineTypeRequest": {
      "id": "SetInstanceMachineTypeRequest",
      "type": "object",
      "description": "Request for setting instance machine type.",
      "properties": {
        "machineType": {
          "description": "Required. The [Compute Engine machine type](https://cloud.google.com/compute/docs/machine-types).",
          "type": "string"
        }
      }
    },
    "DiagnoseInstanceRequest": {
      "id": "DiagnoseInstanceRequest",
      "properties": {
        "diagnosticConfig": {
          "description": "Required. Defines flags that are used to run the diagnostic tool",
          "$ref": "DiagnosticConfig"
        }
      },
      "type": "object",
      "description": "Request for creating a notebook instance diagnostic file."
    },
    "VirtualMachine": {
      "type": "object",
      "properties": {
        "virtualMachineConfig": {
          "$ref": "VirtualMachineConfig",
          "description": "Virtual Machine configuration settings."
        },
        "instanceId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Managed Compute Engine instance.",
          "readOnly": true
        },
        "instanceName": {
          "type": "string",
          "description": "Output only. The user-friendly name of the Managed Compute Engine instance.",
          "readOnly": true
        }
      },
      "description": "Runtime using Virtual Machine for computing.",
      "id": "VirtualMachine"
    },
    "ExecutionTemplate": {
      "description": "The description a notebook execution workload.",
      "properties": {
        "jobType": {
          "enumDescriptions": [
            "No type specified.",
            "Custom Job in `aiplatform.googleapis.com`. Default value for an execution.",
            "Run execution on a cluster with Dataproc as a job. https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs"
          ],
          "type": "string",
          "description": "The type of Job to be used on this execution.",
          "enum": [
            "JOB_TYPE_UNSPECIFIED",
            "VERTEX_AI",
            "DATAPROC"
          ]
        },
        "paramsYamlFile": {
          "description": "Parameters to be overridden in the notebook during execution. Ref https://papermill.readthedocs.io/en/latest/usage-parameterize.html on how to specifying parameters in the input notebook and pass them here in an YAML file. Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook_params.yaml`",
          "type": "string"
        },
        "scaleTier": {
          "enum": [
            "SCALE_TIER_UNSPECIFIED",
            "BASIC",
            "STANDARD_1",
            "PREMIUM_1",
            "BASIC_GPU",
            "BASIC_TPU",
            "CUSTOM"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified Scale Tier.",
            "A single worker instance. This tier is suitable for learning how to use Cloud ML, and for experimenting with new models using small datasets.",
            "Many workers and a few parameter servers.",
            "A large number of workers with many parameter servers.",
            "A single worker instance with a K80 GPU.",
            "A single worker instance with a Cloud TPU.",
            "The CUSTOM tier is not a set tier, but rather enables you to use your own cluster specification. When you use this tier, set values to configure your processing cluster according to these guidelines: * You _must_ set `ExecutionTemplate.masterType` to specify the type of machine to use for your master node. This is the only required setting."
          ],
          "description": "Required. Scale tier of the hardware used for notebook execution. DEPRECATED Will be discontinued. As right now only CUSTOM is supported."
        },
        "parameters": {
          "type": "string",
          "description": "Parameters used within the 'input_notebook_file' notebook."
        },
        "vertexAiParameters": {
          "$ref": "VertexAIParameters",
          "description": "Parameters used in Vertex AI JobType executions."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels for execution. If execution is scheduled, a field included will be 'nbs-scheduled'. Otherwise, it is an immediate execution, and an included field will be 'nbs-immediate'. Use fields to efficiently index between various types of executions."
        },
        "kernelSpec": {
          "description": "Name of the kernel spec to use. This must be specified if the kernel spec name on the execution target does not match the name in the input notebook file.",
          "type": "string"
        },
        "outputNotebookFolder": {
          "description": "Path to the notebook folder to write to. Must be in a Google Cloud Storage bucket path. Format: `gs://{bucket_name}/{folder}` Ex: `gs://notebook_user/scheduled_notebooks`",
          "type": "string"
        },
        "masterType": {
          "description": "Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. The following types are supported: - `n1-standard-4` - `n1-standard-8` - `n1-standard-16` - `n1-standard-32` - `n1-standard-64` - `n1-standard-96` - `n1-highmem-2` - `n1-highmem-4` - `n1-highmem-8` - `n1-highmem-16` - `n1-highmem-32` - `n1-highmem-64` - `n1-highmem-96` - `n1-highcpu-16` - `n1-highcpu-32` - `n1-highcpu-64` - `n1-highcpu-96` Alternatively, you can use the following legacy machine types: - `standard` - `large_model` - `complex_model_s` - `complex_model_m` - `complex_model_l` - `standard_gpu` - `complex_model_m_gpu` - `complex_model_l_gpu` - `standard_p100` - `complex_model_m_p100` - `standard_v100` - `large_model_v100` - `complex_model_m_v100` - `complex_model_l_v100` Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPU](https://cloud.google.com/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).",
          "type": "string"
        },
        "tensorboard": {
          "type": "string",
          "description": "The name of a Vertex AI [Tensorboard] resource to which this execution will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
        },
        "dataprocParameters": {
          "description": "Parameters used in Dataproc JobType executions.",
          "$ref": "DataprocParameters"
        },
        "acceleratorConfig": {
          "$ref": "SchedulerAcceleratorConfig",
          "description": "Configuration (count and accelerator type) for hardware running notebook execution."
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email address of a service account to use when running the execution. You must have the `iam.serviceAccounts.actAs` permission for the specified service account."
        },
        "containerImageUri": {
          "description": "Container Image URI to a DLVM Example: 'gcr.io/deeplearning-platform-release/base-cu100' More examples can be found at: https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container",
          "type": "string"
        },
        "inputNotebookFile": {
          "type": "string",
          "description": "Path to the notebook file to execute. Must be in a Google Cloud Storage bucket. Format: `gs://{bucket_name}/{folder}/{notebook_file_name}` Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook.ipynb`"
        }
      },
      "type": "object",
      "id": "ExecutionTemplate"
    },
    "RuntimeAcceleratorConfig": {
      "type": "object",
      "description": "Definition of the types of hardware accelerators that can be used. Definition of the types of hardware accelerators that can be used. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `nvidia-tesla-k80` * `nvidia-tesla-p100` * `nvidia-tesla-v100` * `nvidia-tesla-p4` * `nvidia-tesla-t4` * `nvidia-tesla-a100`",
      "properties": {
        "coreCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of cores of this accelerator."
        },
        "type": {
          "description": "Accelerator model.",
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "TPU_V2",
            "TPU_V3",
            "NVIDIA_TESLA_T4_VWS",
            "NVIDIA_TESLA_P100_VWS",
            "NVIDIA_TESLA_P4_VWS"
          ],
          "enumDescriptions": [
            "Accelerator type is not specified.",
            "Accelerator type is Nvidia Tesla K80.",
            "Accelerator type is Nvidia Tesla P100.",
            "Accelerator type is Nvidia Tesla V100.",
            "Accelerator type is Nvidia Tesla P4.",
            "Accelerator type is Nvidia Tesla T4.",
            "Accelerator type is Nvidia Tesla A100.",
            "(Coming soon) Accelerator type is TPU V2.",
            "(Coming soon) Accelerator type is TPU V3.",
            "Accelerator type is NVIDIA Tesla T4 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P100 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P4 Virtual Workstations."
          ],
          "type": "string"
        }
      },
      "id": "RuntimeAcceleratorConfig"
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "Schedule": {
      "properties": {
        "name": {
          "description": "Output only. The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`",
          "readOnly": true,
          "type": "string"
        },
        "timeZone": {
          "description": "Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT).",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens '-', and underscores '_'.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time the schedule was last updated.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "PAUSED",
            "DISABLED",
            "UPDATE_FAILED",
            "INITIALIZING",
            "DELETING"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "The job is executing normally.",
            "The job is paused by the user. It will not execute. A user can intentionally pause the job using PauseJobRequest.",
            "The job is disabled by the system due to error. The user cannot directly set a job to be disabled.",
            "The job state resulting from a failed CloudScheduler.UpdateJob operation. To recover a job from this state, retry CloudScheduler.UpdateJob until a successful response is received.",
            "The schedule resource is being created.",
            "The schedule resource is being deleted."
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of this environment."
        },
        "cronSchedule": {
          "description": "Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. 0 0 * * WED = every Wednesday More examples: https://crontab.guru/examples.html",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Time the schedule was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "recentExecutions": {
          "readOnly": true,
          "items": {
            "$ref": "Execution"
          },
          "description": "Output only. The most recent execution names triggered from this schedule and their corresponding states.",
          "type": "array"
        },
        "executionTemplate": {
          "$ref": "ExecutionTemplate",
          "description": "Notebook Execution Template corresponding to this schedule."
        }
      },
      "description": "The definition of a schedule.",
      "id": "Schedule",
      "type": "object"
    },
    "Environment": {
      "type": "object",
      "id": "Environment",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this environment was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "postStartupScript": {
          "type": "string",
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path. Example: `\"gs://path-to-file/file-name\"`"
        },
        "vmImage": {
          "$ref": "VmImage",
          "description": "Use a Compute Engine VM image to start the notebook instance."
        },
        "containerImage": {
          "$ref": "ContainerImage",
          "description": "Use a container image to start the notebook instance."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of this environment. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`"
        },
        "description": {
          "type": "string",
          "description": "A brief description of this environment."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of this environment for the UI."
        }
      },
      "description": "Definition of a software environment that is used to start a notebook instance."
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "LocalDiskInitializeParams": {
      "properties": {
        "diskName": {
          "type": "string",
          "description": "Optional. Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated."
        },
        "diskSizeGb": {
          "type": "string",
          "format": "int64",
          "description": "Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks."
        },
        "diskType": {
          "type": "string",
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ],
          "description": "Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`)."
        },
        "description": {
          "description": "Optional. Provide this property when creating the disk.",
          "type": "string"
        }
      },
      "id": "LocalDiskInitializeParams",
      "type": "object",
      "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new runtime. This property is mutually exclusive with the source property; you can only define one or the other, but not both."
    },
    "StartRuntimeRequest": {
      "id": "StartRuntimeRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Idempotent request UUID."
        }
      },
      "description": "Request for starting a Managed Notebook Runtime."
    },
    "UpdateShieldedInstanceConfigRequest": {
      "type": "object",
      "properties": {
        "shieldedInstanceConfig": {
          "$ref": "ShieldedInstanceConfig",
          "description": "ShieldedInstance configuration to be updated."
        }
      },
      "description": "Request for updating the Shielded Instance config for a notebook instance. You can only use this method on a stopped instance",
      "id": "UpdateShieldedInstanceConfigRequest"
    },
    "ListRuntimesResponse": {
      "description": "Response for listing Managed Notebook Runtimes.",
      "id": "ListRuntimesResponse",
      "properties": {
        "runtimes": {
          "description": "A list of returned Runtimes.",
          "items": {
            "$ref": "Runtime"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached. For example, ['us-west1', 'us-central1']. A ListRuntimesResponse will only contain either runtimes or unreachables,",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        }
      },
      "type": "object"
    },
    "ReservationAffinity": {
      "id": "ReservationAffinity",
      "description": "Reservation Affinity for consuming Zonal reservation.",
      "properties": {
        "consumeReservationType": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "NO_RESERVATION",
            "ANY_RESERVATION",
            "SPECIFIC_RESERVATION"
          ],
          "description": "Optional. Type of reservation to consume",
          "enumDescriptions": [
            "Default type.",
            "Do not consume from any allocated capacity.",
            "Consume any reservation available.",
            "Must consume from a specific reservation. Must specify key value fields for specifying the reservations."
          ],
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "Optional. Corresponds to the label key of reservation resource."
        },
        "values": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Corresponds to the label values of reservation resource.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "SetInstanceLabelsRequest": {
      "properties": {
        "labels": {
          "description": "Labels to apply to this instance. These can be later modified by the setLabels method",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "SetInstanceLabelsRequest",
      "type": "object",
      "description": "Request for setting instance labels."
    }
  },
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "servicePath": "",
  "revision": "20221017",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "notebooks.projects.locations.list",
              "httpMethod": "GET"
            },
            "get": {
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "id": "notebooks.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Location"
              }
            }
          },
          "resources": {
            "environments": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.environments.delete",
                  "description": "Deletes a single Environment.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}"
                },
                "list": {
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "path": "v1/{+parent}/environments",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}`",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum return size of the list call."
                    },
                    "pageToken": {
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments",
                  "id": "notebooks.projects.locations.environments.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists environments in a project."
                },
                "get": {
                  "id": "notebooks.projects.locations.environments.get",
                  "response": {
                    "$ref": "Environment"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}",
                  "description": "Gets details of a single Environment."
                },
                "create": {
                  "parameters": {
                    "environmentId": {
                      "description": "Required. User-defined unique ID of this environment. The `environment_id` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments",
                  "path": "v1/{+parent}/environments",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Environment"
                  },
                  "id": "notebooks.projects.locations.environments.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Environment.",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "runtimes": {
              "methods": {
                "diagnose": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtimes_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Creates a Diagnostic File and runs Diagnostic Tool given a Runtime.",
                  "path": "v1/{+name}:diagnose",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:diagnose",
                  "request": {
                    "$ref": "DiagnoseRuntimeRequest"
                  },
                  "id": "notebooks.projects.locations.runtimes.diagnose",
                  "httpMethod": "POST"
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.runtimes.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy"
                },
                "start": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:start",
                  "description": "Starts a Managed Notebook Runtime. Perform \"Start\" on GPU instances; \"Resume\" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance",
                  "path": "v1/{+name}:start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.runtimes.start",
                  "request": {
                    "$ref": "StartRuntimeRequest"
                  }
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.runtimes.testIamPermissions",
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:testIamPermissions"
                },
                "reset": {
                  "id": "notebooks.projects.locations.runtimes.reset",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Resets a Managed Notebook Runtime.",
                  "path": "v1/{+name}:reset",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ResetRuntimeRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:reset"
                },
                "upgrade": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.runtimes.upgrade",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "UpgradeRuntimeRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:upgrade",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+name}:upgrade",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "required": true
                    }
                  },
                  "description": "Upgrades a Managed Notebook Runtime to the latest version."
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes",
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.runtimes.create",
                  "description": "Creates a new Runtime in a given project and location.",
                  "request": {
                    "$ref": "Runtime"
                  },
                  "parameters": {
                    "runtimeId": {
                      "description": "Required. User-defined unique ID of this Runtime.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "description": "Idempotent request UUID.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/runtimes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "stop": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StopRuntimeRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Stops a Managed Notebook Runtime. Perform \"Stop\" on GPU instances; \"Suspend\" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:stop",
                  "id": "notebooks.projects.locations.runtimes.stop",
                  "path": "v1/{+name}:stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "description": "Lists Runtimes in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum return size of the list call.",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes",
                  "response": {
                    "$ref": "ListRuntimesResponse"
                  },
                  "id": "notebooks.projects.locations.runtimes.list",
                  "path": "v1/{+parent}/runtimes",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "switch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:switch",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "SwitchRuntimeRequest"
                  },
                  "id": "notebooks.projects.locations.runtimes.switch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Switch a Managed Notebook Runtime.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:switch"
                },
                "refreshRuntimeTokenInternal": {
                  "id": "notebooks.projects.locations.runtimes.refreshRuntimeTokenInternal",
                  "path": "v1/{+name}:refreshRuntimeTokenInternal",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RefreshRuntimeTokenInternalRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`"
                    }
                  },
                  "response": {
                    "$ref": "RefreshRuntimeTokenInternalResponse"
                  },
                  "description": "Gets an access token for the consumer service account that the customer attached to the runtime. Only accessible from the tenant instance.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:refreshRuntimeTokenInternal"
                },
                "reportEvent": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:reportEvent",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Report and process a runtime event.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.runtimes.reportEvent",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportRuntimeEventRequest"
                  },
                  "path": "v1/{+name}:reportEvent"
                },
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    },
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "notebooks.projects.locations.runtimes.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "id": "notebooks.projects.locations.runtimes.delete",
                  "parameters": {
                    "requestId": {
                      "description": "Idempotent request UUID.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single Runtime."
                },
                "patch": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Runtime"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "notebooks.projects.locations.runtimes.patch",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtimeId}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Idempotent request UUID."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Specifies the path, relative to `Runtime`, of the field to update. For example, to change the software configuration kernels, the `update_mask` parameter would be specified as `software_config.kernels`, and the `PATCH` request body would specify the new value, as follows: { \"software_config\":{ \"kernels\": [{ 'repository': 'gcr.io/deeplearning-platform-release/pytorch-gpu', 'tag': 'latest' }], } } Currently, only the following fields can be updated: - software_config.kernels - software_config.post_startup_script - software_config.custom_gpu_driver_path - software_config.idle_shutdown - software_config.idle_shutdown_timeout - software_config.disable_terminal",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}",
                  "description": "Update Notebook Runtime configuration."
                },
                "get": {
                  "id": "notebooks.projects.locations.runtimes.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Runtime"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Runtime. The location must be a regional endpoint rather than zonal.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "notebooks.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled."
                    }
                  }
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "notebooks.projects.locations.operations.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}"
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "notebooks.projects.locations.operations.list",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                }
              }
            },
            "executions": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Execution"
                  },
                  "id": "notebooks.projects.locations.executions.get",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions/{executionsId}",
                  "description": "Gets details of executions",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/executions/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists executions in a given project and location",
                  "path": "v1/{+parent}/executions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions",
                  "id": "notebooks.projects.locations.executions.list",
                  "response": {
                    "$ref": "ListExecutionsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter applied to resulting executions. Currently only supports filtering executions by a specified schedule_id. Format: `schedule_id=`"
                    },
                    "pageToken": {
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Sort by field.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Maximum return size of the list call.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions/{executionsId}",
                  "description": "Deletes execution",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/executions/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "notebooks.projects.locations.executions.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "path": "v1/{+parent}/executions",
                  "id": "notebooks.projects.locations.executions.create",
                  "request": {
                    "$ref": "Execution"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new Execution in a given project and location.",
                  "parameters": {
                    "executionId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. User-defined unique ID of this execution."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "schedules": {
              "methods": {
                "list": {
                  "id": "notebooks.projects.locations.schedules.list",
                  "response": {
                    "$ref": "ListSchedulesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules",
                  "path": "v1/{+parent}/schedules",
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to order results by."
                    },
                    "pageToken": {
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter applied to resulting schedules."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum return size of the list call."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists schedules in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Schedule"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "type": "string"
                    },
                    "scheduleId": {
                      "location": "query",
                      "description": "Required. User-defined unique ID of this schedule.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Scheduled Notebook in a given project and location.",
                  "path": "v1/{+parent}/schedules",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "notebooks.projects.locations.schedules.create"
                },
                "trigger": {
                  "httpMethod": "POST",
                  "description": "Triggers execution of an existing schedule.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:trigger",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TriggerScheduleRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}/schedules/{schedule_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:trigger",
                  "id": "notebooks.projects.locations.schedules.trigger"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}",
                  "response": {
                    "$ref": "Schedule"
                  },
                  "path": "v1/{+name}",
                  "id": "notebooks.projects.locations.schedules.get",
                  "description": "Gets details of schedule"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}",
                  "description": "Deletes schedule and all underlying jobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.schedules.delete",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE"
                }
              }
            },
            "instances": {
              "methods": {
                "register": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/instances:register",
                  "id": "notebooks.projects.locations.instances.register",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances:register",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "type": "string"
                    }
                  },
                  "description": "Registers an existing legacy notebook instance to the Notebooks API server. Legacy instances are instances created with the legacy Compute Engine calls. They are not manageable by the Notebooks API out of the box. This call makes these instances manageable by the Notebooks API.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RegisterInstanceRequest"
                  }
                },
                "report": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "ReportInstanceInfoRequest"
                  },
                  "id": "notebooks.projects.locations.instances.report",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:report",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Allows notebook instances to report their latest instance information to the Notebooks API server. The server will merge the reported information to the instance metadata store. Do not use this method directly.",
                  "path": "v1/{+name}:report"
                },
                "upgradeInternal": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Allows notebook instances to call this endpoint to upgrade themselves. Do not use this method directly.",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+name}:upgradeInternal",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.instances.upgradeInternal",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgradeInternal",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "UpgradeInstanceInternalRequest"
                  }
                },
                "upgrade": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "notebooks.projects.locations.instances.upgrade",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade",
                  "request": {
                    "$ref": "UpgradeInstanceRequest"
                  },
                  "description": "Upgrades a notebook instance to the latest version.",
                  "path": "v1/{+name}:upgrade",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "start": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "description": "Starts a notebook instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:start",
                  "id": "notebooks.projects.locations.instances.start"
                },
                "updateConfig": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.instances.updateConfig",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "path": "v1/{+name}:updateConfig",
                  "request": {
                    "$ref": "UpdateInstanceConfigRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateConfig",
                  "description": "Update Notebook Instance configurations."
                },
                "reset": {
                  "description": "Resets a notebook instance.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:reset",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "id": "notebooks.projects.locations.instances.reset",
                  "httpMethod": "POST"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/instances",
                  "description": "Creates a new Instance in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.instances.create",
                  "parameters": {
                    "instanceId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. User-defined unique ID of this instance."
                    },
                    "parent": {
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  }
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.instances.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "notebooks.projects.locations.instances.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "required": true
                    }
                  },
                  "description": "Deletes a single Instance.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "notebooks.projects.locations.instances.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy"
                },
                "isUpgradeable": {
                  "parameterOrder": [
                    "notebookInstance"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "IsInstanceUpgradeableResponse"
                  },
                  "id": "notebooks.projects.locations.instances.isUpgradeable",
                  "description": "Check if a notebook instance is upgradable.",
                  "parameters": {
                    "notebookInstance": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path"
                    },
                    "type": {
                      "enumDescriptions": [
                        "Upgrade type is not specified.",
                        "Upgrade ML framework.",
                        "Upgrade Operating System.",
                        "Upgrade CUDA.",
                        "Upgrade All (OS, Framework and CUDA)."
                      ],
                      "enum": [
                        "UPGRADE_TYPE_UNSPECIFIED",
                        "UPGRADE_FRAMEWORK",
                        "UPGRADE_OS",
                        "UPGRADE_CUDA",
                        "UPGRADE_ALL"
                      ],
                      "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+notebookInstance}:isUpgradeable",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:isUpgradeable"
                },
                "setMachineType": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path"
                    }
                  },
                  "description": "Updates the machine type of a single Instance.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.instances.setMachineType",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setMachineType",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetInstanceMachineTypeRequest"
                  },
                  "path": "v1/{+name}:setMachineType"
                },
                "setAccelerator": {
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "SetInstanceAcceleratorRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string"
                    }
                  },
                  "description": "Updates the guest accelerators of a single Instance.",
                  "path": "v1/{+name}:setAccelerator",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setAccelerator",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "notebooks.projects.locations.instances.setAccelerator"
                },
                "stop": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "path": "v1/{+name}:stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.instances.stop",
                  "description": "Stops a notebook instance.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "updateMetadataItems": {
                  "path": "v1/{+name}:updateMetadataItems",
                  "id": "notebooks.projects.locations.instances.updateMetadataItems",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "UpdateInstanceMetadataItemsResponse"
                  },
                  "description": "Add/update metadata items for an instance.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateMetadataItems",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "UpdateInstanceMetadataItemsRequest"
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances",
                  "path": "v1/{+parent}/instances",
                  "description": "Lists instances in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum return size of the list call.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "notebooks.projects.locations.instances.list"
                },
                "setLabels": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Replaces all the labels of an Instance.",
                  "path": "v1/{+name}:setLabels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setLabels",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SetInstanceLabelsRequest"
                  },
                  "id": "notebooks.projects.locations.instances.setLabels"
                },
                "updateShieldedInstanceConfig": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateShieldedInstanceConfig",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}:updateShieldedInstanceConfig",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.instances.updateShieldedInstanceConfig",
                  "request": {
                    "$ref": "UpdateShieldedInstanceConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the Shielded instance configuration of a single Instance."
                },
                "rollback": {
                  "description": "Rollbacks a notebook instance to the previous version.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rollback",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RollbackInstanceRequest"
                  },
                  "id": "notebooks.projects.locations.instances.rollback",
                  "httpMethod": "POST",
                  "path": "v1/{+name}:rollback",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Instance"
                  },
                  "id": "notebooks.projects.locations.instances.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "description": "Gets details of a single Instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET"
                },
                "getInstanceHealth": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:getInstanceHealth",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getInstanceHealth",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "id": "notebooks.projects.locations.instances.getInstanceHealth",
                  "response": {
                    "$ref": "GetInstanceHealthResponse"
                  },
                  "description": "Check if a notebook instance is healthy.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "getIamPolicy": {
                  "id": "notebooks.projects.locations.instances.getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "diagnose": {
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.instances.diagnose",
                  "path": "v1/{+name}:diagnose",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:diagnose",
                  "description": "Creates a Diagnostic File and runs Diagnostic Tool given an Instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "DiagnoseInstanceRequest"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "id": "notebooks:v1",
  "ownerDomain": "google.com",
  "version_module": true,
  "protocol": "rest",
  "rootUrl": "https://notebooks.googleapis.com/",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "description": "Notebooks API is used to manage notebook resources in Google Cloud.",
  "batchPath": "batch",
  "name": "notebooks",
  "baseUrl": "https://notebooks.googleapis.com/"
}
