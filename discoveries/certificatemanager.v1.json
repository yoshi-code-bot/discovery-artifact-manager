{
  "version_module": true,
  "parameters": {
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "basePath": "",
  "documentationLink": "https://cloud.google.com/certificate-manager",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "batchPath": "batch",
  "mtlsRootUrl": "https://certificatemanager.mtls.googleapis.com/",
  "schemas": {
    "Certificate": {
      "type": "object",
      "description": "Defines TLS certificate.",
      "properties": {
        "description": {
          "description": "One or more paragraphs of text description of a certificate.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The creation timestamp of a Certificate.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
          "type": "string"
        },
        "scope": {
          "description": "Immutable. The scope of the certificate.",
          "type": "string",
          "enum": [
            "DEFAULT",
            "EDGE_CACHE"
          ],
          "enumDescriptions": [
            "Certificates with default scope are served from core Google data centers. If unsure, choose this option.",
            "Certificates with scope EDGE_CACHE are special-purposed certificates, served from non-core Google data centers."
          ]
        },
        "managed": {
          "description": "If set, contains configuration and state of a managed certificate.",
          "$ref": "ManagedCertificate"
        },
        "pemCertificate": {
          "readOnly": true,
          "description": "Output only. The PEM-encoded certificate chain.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Set of labels associated with a Certificate.",
          "type": "object"
        },
        "updateTime": {
          "description": "Output only. The last update timestamp of a Certificate.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "sanDnsnames": {
          "type": "array",
          "description": "Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "expireTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The expiry timestamp of a Certificate.",
          "type": "string"
        },
        "selfManaged": {
          "description": "If set, defines data of a self-managed certificate.",
          "$ref": "SelfManagedCertificate"
        }
      },
      "id": "Certificate"
    },
    "CertificateMap": {
      "properties": {
        "labels": {
          "description": "Set of labels associated with a Certificate Map.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
          "type": "string"
        },
        "gclbTargets": {
          "items": {
            "$ref": "GclbTarget"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule."
        },
        "updateTime": {
          "description": "Output only. The update timestamp of a Certificate Map.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate map."
        },
        "createTime": {
          "description": "Output only. The creation timestamp of a Certificate Map.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "CertificateMap",
      "type": "object",
      "description": "Defines a collection of certificate configurations."
    },
    "CertificateAuthorityServiceConfig": {
      "type": "object",
      "description": "Contains information required to contact CA service.",
      "properties": {
        "caPool": {
          "description": "Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form \"projects/{project}/locations/{location}/caPools/{ca_pool}\".",
          "type": "string"
        }
      },
      "id": "CertificateAuthorityServiceConfig"
    },
    "CertificateAuthorityConfig": {
      "id": "CertificateAuthorityConfig",
      "properties": {
        "certificateAuthorityServiceConfig": {
          "$ref": "CertificateAuthorityServiceConfig",
          "description": "Defines a CertificateAuthorityServiceConfig."
        }
      },
      "type": "object",
      "description": "The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "DnsResourceRecord": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Output only. Data of the DNS Resource Record.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`"
        },
        "type": {
          "description": "Output only. Type of the DNS Resource Record. Currently always set to \"CNAME\".",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "DnsResourceRecord",
      "description": "The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate."
    },
    "ListCertificatesResponse": {
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "Certificate"
          },
          "description": "A list of certificates for the parent resource."
        },
        "unreachable": {
          "description": "A list of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        }
      },
      "type": "object",
      "id": "ListCertificatesResponse",
      "description": "Response for the `ListCertificates` method."
    },
    "ListCertificateMapEntriesResponse": {
      "type": "object",
      "description": "Response for the `ListCertificateMapEntries` method.",
      "id": "ListCertificateMapEntriesResponse",
      "properties": {
        "certificateMapEntries": {
          "type": "array",
          "description": "A list of certificate map entries for the parent resource.",
          "items": {
            "$ref": "CertificateMapEntry"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "Empty",
      "properties": {}
    },
    "SelfManagedCertificate": {
      "id": "SelfManagedCertificate",
      "description": "Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility.",
      "type": "object",
      "properties": {
        "pemPrivateKey": {
          "description": "Input only. The PEM-encoded private key of the leaf certificate.",
          "type": "string"
        },
        "pemCertificate": {
          "type": "string",
          "description": "Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any."
        }
      }
    },
    "CertificateMapEntry": {
      "type": "object",
      "id": "CertificateMapEntry",
      "properties": {
        "certificates": {
          "items": {
            "type": "string"
          },
          "description": "A set of Certificates defines for the given `hostname`. There can be defined up to fifteen certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate map entry."
        },
        "state": {
          "enumDescriptions": [
            "The status is undefined.",
            "The configuration is serving.",
            "Update is in progress. Some frontends may serve this configuration."
          ],
          "description": "Output only. A serving state of this Certificate Map Entry.",
          "type": "string",
          "enum": [
            "SERVING_STATE_UNSPECIFIED",
            "ACTIVE",
            "PENDING"
          ],
          "readOnly": true
        },
        "matcher": {
          "type": "string",
          "enum": [
            "MATCHER_UNSPECIFIED",
            "PRIMARY"
          ],
          "description": "A predefined matcher for particular cases, other than SNI selection.",
          "enumDescriptions": [
            "A matcher has't been recognized.",
            "A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map."
          ]
        },
        "createTime": {
          "description": "Output only. The creation timestamp of a Certificate Map Entry.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "hostname": {
          "type": "string",
          "description": "A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Set of labels associated with a Certificate Map Entry.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The update timestamp of a Certificate Map Entry.",
          "type": "string"
        }
      },
      "description": "Defines a certificate map entry."
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object"
    },
    "Operation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "id": "Operation"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation. Output only.",
      "id": "OperationMetadata",
      "properties": {
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version used to start the operation.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        },
        "requestedCancellation": {
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "target": {
          "description": "Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "description": "Human-readable status of the operation, if any."
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ManagedCertificate": {
      "description": "Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.",
      "id": "ManagedCertificate",
      "properties": {
        "authorizationAttemptInfo": {
          "items": {
            "$ref": "AuthorizationAttemptInfo"
          },
          "readOnly": true,
          "description": "Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.",
          "type": "array"
        },
        "provisioningIssue": {
          "$ref": "ProvisioningIssue",
          "description": "Output only. Information about issues with provisioning a Managed Certificate.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "",
            "Certificate Manager attempts to provision or renew the certificate. If the process takes longer than expected, consult the `provisioning_issue` field.",
            "Multiple certificate provisioning attempts failed and Certificate Manager gave up. To try again, delete and create a new managed Certificate resource. For details see the `provisioning_issue` field.",
            "The certificate management is working, and a certificate has been provisioned."
          ],
          "description": "Output only. State of the managed certificate resource.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "FAILED",
            "ACTIVE"
          ],
          "readOnly": true
        },
        "issuanceConfig": {
          "type": "string",
          "description": "Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa."
        },
        "dnsAuthorizations": {
          "items": {
            "type": "string"
          },
          "description": "Immutable. Authorizations that will be used for performing domain authorization.",
          "type": "array"
        },
        "domains": {
          "items": {
            "type": "string"
          },
          "description": "Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ListDnsAuthorizationsResponse": {
      "description": "Response for the `ListDnsAuthorizations` method.",
      "type": "object",
      "id": "ListDnsAuthorizationsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "dnsAuthorizations": {
          "type": "array",
          "description": "A list of dns authorizations for the parent resource.",
          "items": {
            "$ref": "DnsAuthorization"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "Location": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "id": "Location",
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "IpConfig": {
      "description": "Defines IP configuration where this Certificate Map is serving.",
      "properties": {
        "ipAddress": {
          "readOnly": true,
          "description": "Output only. An external IP address.",
          "type": "string"
        },
        "ports": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Ports.",
          "items": {
            "type": "integer",
            "format": "uint32"
          }
        }
      },
      "id": "IpConfig",
      "type": "object"
    },
    "CertificateIssuanceConfig": {
      "description": "CertificateIssuanceConfig specifies how to issue and manage a certificate.",
      "type": "object",
      "id": "CertificateIssuanceConfig",
      "properties": {
        "name": {
          "description": "A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.",
          "type": "string"
        },
        "rotationWindowPercentage": {
          "description": "Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The creation timestamp of a CertificateIssuanceConfig.",
          "type": "string"
        },
        "lifetime": {
          "description": "Required. Workload certificate lifetime requested.",
          "format": "google-duration",
          "type": "string"
        },
        "description": {
          "description": "One or more paragraphs of text description of a CertificateIssuanceConfig.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The last update timestamp of a CertificateIssuanceConfig.",
          "format": "google-datetime",
          "readOnly": true
        },
        "certificateAuthorityConfig": {
          "description": "Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.",
          "$ref": "CertificateAuthorityConfig"
        },
        "labels": {
          "type": "object",
          "description": "Set of labels associated with a CertificateIssuanceConfig.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "keyAlgorithm": {
          "description": "Required. The key algorithm to use when generating the private key.",
          "type": "string",
          "enum": [
            "KEY_ALGORITHM_UNSPECIFIED",
            "RSA_2048",
            "ECDSA_P256"
          ],
          "enumDescriptions": [
            "Unspecified key algorithm.",
            "Specifies RSA with a 2048-bit modulus.",
            "Specifies ECDSA with curve P256."
          ]
        }
      }
    },
    "AuthorizationAttemptInfo": {
      "properties": {
        "details": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum."
        },
        "failureReason": {
          "description": "Output only. Reason for failure of the authorization attempt for the domain.",
          "enum": [
            "FAILURE_REASON_UNSPECIFIED",
            "CONFIG",
            "CAA",
            "RATE_LIMITED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "",
            "There was a problem with the user's DNS or load balancer configuration for this domain.",
            "Certificate issuance forbidden by an explicit CAA record for the domain or a failure to check CAA records for the domain.",
            "Reached a CA or internal rate-limit for the domain, e.g. for certificates per top-level private domain."
          ],
          "type": "string"
        },
        "domain": {
          "description": "Domain name of the authorization attempt.",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the domain for managed certificate issuance.",
          "enum": [
            "STATE_UNSPECIFIED",
            "AUTHORIZING",
            "AUTHORIZED",
            "FAILED"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "",
            "Certificate provisioning for this domain is under way. GCP will attempt to authorize the domain.",
            "A managed certificate can be provisioned, no issues for this domain.",
            "Attempt to authorize the domain failed. This prevents the Managed Certificate from being issued. See `failure_reason` and `details` fields for more information."
          ]
        }
      },
      "description": "State of the latest attempt to authorize a domain for certificate issuance.",
      "type": "object",
      "id": "AuthorizationAttemptInfo"
    },
    "ListCertificateMapsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "certificateMaps": {
          "type": "array",
          "description": "A list of certificate maps for the parent resource.",
          "items": {
            "$ref": "CertificateMap"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        }
      },
      "id": "ListCertificateMapsResponse",
      "type": "object",
      "description": "Response for the `ListCertificateMaps` method."
    },
    "GclbTarget": {
      "id": "GclbTarget",
      "description": "Describes a Target Proxy that uses this Certificate Map.",
      "type": "object",
      "properties": {
        "targetHttpsProxy": {
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.",
          "readOnly": true,
          "type": "string"
        },
        "targetSslProxy": {
          "type": "string",
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.",
          "readOnly": true
        },
        "ipConfigs": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. IP configurations for this Target Proxy where the Certificate Map is serving.",
          "items": {
            "$ref": "IpConfig"
          }
        }
      }
    },
    "ListCertificateIssuanceConfigsResponse": {
      "description": "Response for the `ListCertificateIssuanceConfigs` method.",
      "type": "object",
      "id": "ListCertificateIssuanceConfigsResponse",
      "properties": {
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        },
        "certificateIssuanceConfigs": {
          "items": {
            "$ref": "CertificateIssuanceConfig"
          },
          "description": "A list of certificate configs for the parent resource.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DnsAuthorization": {
      "properties": {
        "domain": {
          "description": "Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The last update timestamp of a DnsAuthorization.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation timestamp of a DnsAuthorization."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Set of labels associated with a DnsAuthorization.",
          "type": "object"
        },
        "name": {
          "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
          "type": "string"
        },
        "dnsResourceRecord": {
          "$ref": "DnsResourceRecord",
          "readOnly": true,
          "description": "Output only. DNS Resource Record that needs to be added to DNS configuration."
        },
        "description": {
          "description": "One or more paragraphs of text description of a DnsAuthorization.",
          "type": "string"
        }
      },
      "id": "DnsAuthorization",
      "type": "object",
      "description": "A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance."
    },
    "ProvisioningIssue": {
      "properties": {
        "details": {
          "type": "string",
          "description": "Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.",
          "readOnly": true
        },
        "reason": {
          "readOnly": true,
          "enumDescriptions": [
            "",
            "Certificate provisioning failed due to an issue with one or more of the domains on the certificate. For details of which domains failed, consult the `authorization_attempt_info` field.",
            "Exceeded Certificate Authority quotas or internal rate limits of the system. Provisioning may take longer to complete."
          ],
          "type": "string",
          "description": "Output only. Reason for provisioning failures.",
          "enum": [
            "REASON_UNSPECIFIED",
            "AUTHORIZATION_ISSUE",
            "RATE_LIMITED"
          ]
        }
      },
      "id": "ProvisioningIssue",
      "type": "object",
      "description": "Information about issues with provisioning a Managed Certificate."
    }
  },
  "description": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "title": "Certificate Manager API",
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "certificateIssuanceConfigs": {
              "methods": {
                "create": {
                  "path": "v1/{+parent}/certificateIssuanceConfigs",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the certificate issuance config. Must be in the format `projects/*/locations/*`."
                    },
                    "certificateIssuanceConfigId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. A user-provided name of the certificate config."
                    }
                  },
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs",
                  "request": {
                    "$ref": "CertificateIssuanceConfig"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new CertificateIssuanceConfig in a given project and location."
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}",
                  "description": "Deletes a single CertificateIssuanceConfig.",
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. A name of the certificate issuance config to delete. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListCertificateIssuanceConfigsResponse"
                  },
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs",
                  "httpMethod": "GET",
                  "description": "Lists CertificateIssuanceConfigs in a given project and location.",
                  "parameters": {
                    "filter": {
                      "description": "Filter expression to restrict the Certificates Configs returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Maximum number of certificate configs to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The value returned by the last `ListCertificateIssuanceConfigsResponse`. Indicates that this is a continuation of a prior `ListCertificateIssuanceConfigs` call, and that the system should return the next page of data.",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "A list of Certificate Config field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/certificateIssuanceConfigs"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}",
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the certificate issuance config to describe. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Gets details of a single CertificateIssuanceConfig.",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "CertificateIssuanceConfig"
                  }
                }
              }
            },
            "certificates": {
              "methods": {
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "location": "path",
                      "description": "Required. A name of the certificate to delete. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "certificatemanager.projects.locations.certificates.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single Certificate.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "patch": {
                  "description": "Updates a Certificate.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Certificate"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "certificatemanager.projects.locations.certificates.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "certificatemanager.projects.locations.certificates.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. A name of the certificate to describe. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "response": {
                    "$ref": "Certificate"
                  },
                  "description": "Gets details of a single Certificate.",
                  "path": "v1/{+name}"
                },
                "list": {
                  "response": {
                    "$ref": "ListCertificatesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "certificatemanager.projects.locations.certificates.list",
                  "parameters": {
                    "pageToken": {
                      "description": "The value returned by the last `ListCertificatesResponse`. Indicates that this is a continuation of a prior `ListCertificates` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "A list of Certificate field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of certificates to return per call.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`."
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter expression to restrict the Certificates returned.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/certificates",
                  "description": "Lists Certificates in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates"
                },
                "create": {
                  "path": "v1/{+parent}/certificates",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates",
                  "id": "certificatemanager.projects.locations.certificates.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Certificate"
                  },
                  "description": "Creates a new Certificate in a given project and location.",
                  "parameters": {
                    "certificateId": {
                      "type": "string",
                      "description": "Required. A user-provided name of the certificate.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the certificate. Must be in the format `projects/*/locations/*`.",
                      "location": "path",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "dnsAuthorizations": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The project and location from which the dns authorizations should be listed, specified in the format `projects/*/locations/*`.",
                      "location": "path"
                    },
                    "filter": {
                      "description": "Filter expression to restrict the Dns Authorizations returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Maximum number of dns authorizations to return per call."
                    },
                    "orderBy": {
                      "description": "A list of Dns Authorization field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListDnsAuthorizationsResponse`. Indicates that this is a continuation of a prior `ListDnsAuthorizations` call, and that the system should return the next page of data."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListDnsAuthorizationsResponse"
                  },
                  "path": "v1/{+parent}/dnsAuthorizations",
                  "httpMethod": "GET",
                  "description": "Lists DnsAuthorizations in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.list"
                },
                "delete": {
                  "description": "Deletes a single DnsAuthorization.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the dns authorization to delete. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE"
                },
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "description": "Gets details of a single DnsAuthorization.",
                  "response": {
                    "$ref": "DnsAuthorization"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. A name of the dns authorization to describe. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "location": "path",
                      "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
                      "required": true
                    },
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a DnsAuthorization.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.patch",
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "DnsAuthorization"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the dns authorization. Must be in the format `projects/*/locations/*`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "dnsAuthorizationId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. A user-provided name of the dns authorization."
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new DnsAuthorization in a given project and location.",
                  "request": {
                    "$ref": "DnsAuthorization"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.create",
                  "path": "v1/{+parent}/dnsAuthorizations"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "id": "certificatemanager.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "certificatemanager.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}",
                  "id": "certificatemanager.projects.locations.operations.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "certificatemanager.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1/{+name}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  }
                }
              }
            },
            "certificateMaps": {
              "resources": {
                "certificateMapEntries": {
                  "methods": {
                    "delete": {
                      "description": "Deletes a single CertificateMapEntry.",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "description": "Required. A name of the certificate map entry to delete. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete"
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "description": "The value returned by the last `ListCertificateMapEntriesResponse`. Indicates that this is a continuation of a prior `ListCertificateMapEntries` call, and that the system should return the next page of data.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Filter expression to restrict the returned Certificate Map Entries.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The project, location and certificate map from which the certificate map entries should be listed, specified in the format `projects/*/locations/*/certificateMaps/*`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                          "type": "string"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "A list of Certificate Map Entry field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Maximum number of certificate map entries to return. The service may return fewer than this value. If unspecified, at most 50 certificate map entries will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "ListCertificateMapEntriesResponse"
                      },
                      "description": "Lists CertificateMapEntries in a given project and location.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/certificateMapEntries"
                    },
                    "patch": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "CertificateMapEntry"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates a CertificateMapEntry.",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "updateMask": {
                          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "CertificateMapEntry"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details of a single CertificateMapEntry.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. A name of the certificate map entry to describe. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$"
                        }
                      }
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new CertificateMapEntry in a given project and location.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "path": "v1/{+parent}/certificateMapEntries",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                          "location": "path",
                          "description": "Required. The parent resource of the certificate map entry. Must be in the format `projects/*/locations/*/certificateMaps/*`."
                        },
                        "certificateMapEntryId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. A user-provided name of the certificate map entry."
                        }
                      },
                      "request": {
                        "$ref": "CertificateMapEntry"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "id": "certificatemanager.projects.locations.certificateMaps.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the certificate map to delete. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Deletes a single CertificateMap. A Certificate Map can't be deleted if it contains Certificate Map Entries. Remove all the entries from the map before calling this method.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListCertificateMapsResponse"
                  },
                  "description": "Lists CertificateMaps in a given project and location.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Maximum number of certificate maps to return per call.",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "Filter expression to restrict the Certificates Maps returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "A list of Certificate Map field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\"."
                    },
                    "parent": {
                      "description": "Required. The project and location from which the certificate maps should be listed, specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListCertificateMapsResponse`. Indicates that this is a continuation of a prior `ListCertificateMaps` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.certificateMaps.list",
                  "path": "v1/{+parent}/certificateMaps",
                  "httpMethod": "GET"
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`."
                    }
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "description": "Updates a CertificateMap.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.certificateMaps.patch"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. A name of the certificate map to describe. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "CertificateMap"
                  },
                  "id": "certificatemanager.projects.locations.certificateMaps.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single CertificateMap."
                },
                "create": {
                  "parameters": {
                    "certificateMapId": {
                      "description": "Required. A user-provided name of the certificate map.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource of the certificate map. Must be in the format `projects/*/locations/*`."
                    }
                  },
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps",
                  "description": "Creates a new CertificateMap in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "certificatemanager.projects.locations.certificateMaps.create",
                  "path": "v1/{+parent}/certificateMaps",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          },
          "methods": {
            "get": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Resource name for the location."
                }
              },
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "certificatemanager.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "path": "v1/{+name}",
              "httpMethod": "GET"
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "certificatemanager.projects.locations.list",
              "path": "v1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              }
            }
          }
        }
      }
    }
  },
  "name": "certificatemanager",
  "canonicalName": "Certificate Manager",
  "servicePath": "",
  "baseUrl": "https://certificatemanager.googleapis.com/",
  "rootUrl": "https://certificatemanager.googleapis.com/",
  "revision": "20221020",
  "id": "certificatemanager:v1",
  "version": "v1"
}
