{
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "parameters": {
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "default": "json",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    }
  },
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "ListInstancesResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "instances": {
          "description": "The list of servers.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        }
      },
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse"
    },
    "OSImage": {
      "properties": {
        "description": {
          "description": "OS Image description.",
          "type": "string"
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "array"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. OS Image's unique name."
        },
        "supportedNetworkTemplates": {
          "description": "Network templates that can be used with this OS Image.",
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          }
        }
      },
      "type": "object",
      "description": "Operation System image.",
      "id": "OSImage"
    },
    "ResizeVolumeRequest": {
      "type": "object",
      "properties": {
        "sizeGib": {
          "type": "string",
          "description": "New Volume size, in GiB.",
          "format": "int64"
        }
      },
      "id": "ResizeVolumeRequest",
      "description": "Request for emergency resize Volume."
    },
    "StartInstanceRequest": {
      "type": "object",
      "properties": {},
      "id": "StartInstanceRequest",
      "description": "Message requesting to start a server."
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "properties": {
        "volumes": {
          "type": "array",
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message containing the list of storage volumes."
    },
    "VolumeSnapshot": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The creation time of the snapshot."
        },
        "description": {
          "type": "string",
          "description": "The description of the snapshot."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the snapshot, generated by the backend."
        },
        "type": {
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "storageVolume": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the volume which this snapshot belongs to."
        },
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A snapshot of a volume. Only boot volumes can have snapshots.",
      "id": "VolumeSnapshot"
    },
    "Lun": {
      "id": "Lun",
      "description": "A storage volume logical unit number (LUN).",
      "type": "object",
      "properties": {
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "multiprotocolType": {
          "type": "string",
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ]
        },
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The size of this LUN, in gigabytes."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the LUN.",
          "readOnly": true
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN.",
          "type": "string"
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "state": {
          "description": "The state of this storage volume.",
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ]
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "type": "object",
      "properties": {}
    },
    "ListVolumeSnapshotsResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumeSnapshots": {
          "description": "The list of snapshots.",
          "type": "array",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        }
      },
      "id": "ListVolumeSnapshotsResponse",
      "description": "Response message containing the list of volume snapshots.",
      "type": "object"
    },
    "Volume": {
      "id": "Volume",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "requestedSizeGib": {
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "performanceTier": {
          "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "type": "string"
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string",
          "format": "int64"
        },
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "type": "string",
          "format": "int64"
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "description": "The storage type for this volume."
        },
        "emergencySizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value."
        },
        "notes": {
          "type": "string",
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention."
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "state": {
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ]
        },
        "protocol": {
          "description": "Output only. Storage protocol for the Volume.",
          "readOnly": true,
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "description": "Originally requested size, in GiB.",
          "format": "int64"
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "currentSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink."
        },
        "maxSizeGib": {
          "type": "string",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64"
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        },
        "snapshotAutoDeleteBehavior": {
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "type": "string"
        },
        "bootVolume": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN."
        },
        "pod": {
          "description": "Immutable. Pod name.",
          "type": "string"
        }
      },
      "description": "A storage volume."
    },
    "NetworkAddressReservation": {
      "properties": {
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        },
        "startAddress": {
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        }
      },
      "description": "A reservation of one or more addresses in a network.",
      "id": "NetworkAddressReservation",
      "type": "object"
    },
    "NetworkAddress": {
      "description": "A network.",
      "id": "NetworkAddress",
      "type": "object",
      "properties": {
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        },
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        }
      }
    },
    "ProvisioningQuota": {
      "description": "A provisioning quota for a given project.",
      "properties": {
        "availableCount": {
          "type": "integer",
          "format": "int32",
          "description": "The available count of the provisioning quota."
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "assetType": {
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "description": "The asset type of this provisioning quota.",
          "type": "string"
        },
        "serverCount": {
          "format": "int64",
          "type": "string",
          "description": "Server count."
        },
        "storageGib": {
          "type": "string",
          "description": "Storage size (GB).",
          "format": "int64"
        },
        "networkBandwidth": {
          "description": "Network bandwidth, Gbps",
          "type": "string",
          "format": "int64"
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the provisioning quota.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ProvisioningQuota"
    },
    "InstanceConfig": {
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "logicalInterfaces": {
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "networkConfig": {
          "type": "string",
          "description": "The type of network configuration on the instance.",
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance config."
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "networkTemplate": {
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
          "type": "string"
        }
      },
      "description": "Configuration parameters for a new instance.",
      "id": "InstanceConfig",
      "type": "object"
    },
    "NetworkUsage": {
      "description": "Network with all used IP addresses.",
      "type": "object",
      "properties": {
        "network": {
          "$ref": "Network",
          "description": "Network."
        },
        "usedIps": {
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network.",
          "type": "array"
        }
      },
      "id": "NetworkUsage"
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "type": "array",
          "description": "The OS images available.",
          "items": {
            "$ref": "OSImage"
          }
        }
      },
      "type": "object",
      "id": "FetchInstanceProvisioningSettingsResponse",
      "description": "Response with all provisioning settings."
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "type": "number",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "format": "double"
        }
      },
      "id": "QosPolicy",
      "type": "object",
      "description": "QOS policy parameters."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      }
    },
    "ListSSHKeysResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "sshKeys": {
          "type": "array",
          "items": {
            "$ref": "SSHKey"
          },
          "description": "The SSH keys registered in the project."
        }
      },
      "id": "ListSSHKeysResponse",
      "type": "object",
      "description": "Message for response of ListSSHKeys."
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnableInteractiveSerialConsoleRequest": {
      "type": "object",
      "properties": {},
      "id": "EnableInteractiveSerialConsoleRequest",
      "description": "Message for enabling the interactive serial console on an instance."
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the instance quota.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "availableMachineCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of machines than can be created for the given location and instance_type."
        }
      },
      "id": "InstanceQuota",
      "type": "object"
    },
    "DetachLunRequest": {
      "type": "object",
      "properties": {
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        },
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        }
      },
      "id": "DetachLunRequest",
      "description": "Message for detach specific LUN from an Instance."
    },
    "SubmitProvisioningConfigResponse": {
      "description": "Response for SubmitProvisioningConfig.",
      "id": "SubmitProvisioningConfigResponse",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      },
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "type": "object",
      "properties": {
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32",
          "type": "integer"
        },
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "type": "string"
        },
        "reservedSpaceGib": {
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string"
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "id": "SnapshotReservationDetail"
    },
    "ServerNetworkTemplate": {
      "description": "Network template.",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\"."
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to.",
          "type": "array"
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "description": "Logical interfaces."
        }
      },
      "id": "ServerNetworkTemplate",
      "type": "object"
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "properties": {
        "nfsShares": {
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "description": "Response message containing the list of NFS shares.",
      "type": "object"
    },
    "SubmitProvisioningConfigRequest": {
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        },
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        }
      },
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig."
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "instances": {
          "description": "Instances to be created.",
          "type": "array",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "state": {
          "description": "Output only. State of ProvisioningConfig.",
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ]
        },
        "email": {
          "type": "string",
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages."
        },
        "volumes": {
          "description": "Volumes to be created.",
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime"
        },
        "networks": {
          "type": "array",
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "type": "string"
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "cloudConsoleUri": {
          "readOnly": true,
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "type": "string"
        },
        "customId": {
          "description": "Optional. The user-defined identifier of the provisioning config.",
          "type": "string"
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A provisioning configuration."
    },
    "ListProvisioningQuotasResponse": {
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "ListProvisioningQuotasResponse",
      "type": "object",
      "description": "Response message for the list of provisioning quotas."
    },
    "VolumeConfig": {
      "properties": {
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array"
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "performanceTier": {
          "description": "Performance tier of the Volume. Default is SHARED.",
          "type": "string",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ]
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the volume config."
        },
        "protocol": {
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "type": "string",
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ]
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          },
          "type": "array"
        },
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume."
        },
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "The requested size of this volume, in GB."
        }
      },
      "description": "Configuration parameters for a new volume.",
      "type": "object",
      "id": "VolumeConfig"
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "properties": {},
      "id": "ResetInstanceRequest",
      "type": "object"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SSHKey": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\"."
        },
        "publicKey": {
          "type": "string",
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format."
        }
      },
      "id": "SSHKey",
      "description": "An SSH key, used for authorizing with the interactive serial console feature.",
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Represents the metadata from a long-running operation.",
      "type": "object",
      "id": "OperationMetadata",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used with the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the action executed by the operation."
        }
      }
    },
    "NetworkMountPoint": {
      "description": "Mount point for a network.",
      "properties": {
        "logicalInterface": {
          "type": "string",
          "description": "Logical interface to detach from."
        },
        "defaultGateway": {
          "description": "Network should be a default gateway.",
          "type": "boolean"
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip address of the server."
        },
        "instance": {
          "description": "Instance to attach network to.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NetworkMountPoint"
    },
    "AllowedClient": {
      "properties": {
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "mountPermissions": {
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "description": "Mount permissions.",
          "type": "string"
        },
        "shareIp": {
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "readOnly": true,
          "type": "string"
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "nfsPath": {
          "type": "string",
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "readOnly": true
        }
      },
      "id": "AllowedClient",
      "type": "object",
      "description": "Represents an 'access point' for the share."
    },
    "ListLunsResponse": {
      "description": "Response message containing the list of storage volume luns.",
      "type": "object",
      "properties": {
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "The list of luns."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "id": "ListLunsResponse"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "id": "DisableInteractiveSerialConsoleRequest",
      "type": "object",
      "properties": {},
      "description": "Message for disabling the interactive serial console on an instance."
    },
    "Network": {
      "type": "object",
      "id": "Network",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "type": {
          "description": "The type of this network.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          }
        },
        "mountPoints": {
          "type": "array",
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "description": "Input only. List of mount points to attach the network to."
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "state": {
          "description": "The Network state.",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "type": "string"
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "pod": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Pod name."
        },
        "gatewayIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Gateway ip address."
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "macAddress": {
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        }
      },
      "description": "A Network."
    },
    "NetworkConfig": {
      "properties": {
        "bandwidth": {
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ]
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        },
        "serviceCidr": {
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "type": "string",
          "description": "Service CIDR, if any."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the network config.",
          "type": "string"
        },
        "vlanSameProject": {
          "type": "boolean",
          "description": "Whether the VLAN attachment pair is located in the same project."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "vlanAttachments": {
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "items": {
            "$ref": "IntakeVlanAttachment"
          }
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network."
    },
    "NfsExport": {
      "properties": {
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "permissions": {
          "description": "Export permissions.",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "type": "string"
        }
      },
      "id": "NfsExport",
      "description": "A NFS export entry.",
      "type": "object"
    },
    "LogicalNetworkInterface": {
      "id": "LogicalNetworkInterface",
      "properties": {
        "network": {
          "type": "string",
          "description": "Name of the network"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "networkType": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        }
      },
      "description": "Each logical network interface is effectively a network and IP pair.",
      "type": "object"
    },
    "LunRange": {
      "description": "A LUN(Logical Unit Number) range.",
      "properties": {
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of each LUN, in GB."
        },
        "quantity": {
          "type": "integer",
          "description": "Number of LUNs to create.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "LunRange"
    },
    "ListNetworksResponse": {
      "description": "Response message containing the list of networks.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "ListNetworksResponse",
      "type": "object"
    },
    "Instance": {
      "id": "Instance",
      "properties": {
        "interactiveSerialConsoleEnabled": {
          "readOnly": true,
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Update a time stamp."
        },
        "luns": {
          "description": "Immutable. List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "networkTemplate": {
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only."
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "readOnly": true
        },
        "networks": {
          "description": "Output only. List of networks associated with this server.",
          "readOnly": true,
          "items": {
            "$ref": "Network"
          },
          "type": "array"
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "state": {
          "description": "Output only. The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ],
          "readOnly": true
        },
        "loginInfo": {
          "readOnly": true,
          "description": "Output only. Text field about info for logging in.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.",
          "items": {
            "$ref": "Volume"
          }
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Create a time stamp.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "A server."
    },
    "NfsShare": {
      "type": "object",
      "description": "An NFS share.",
      "properties": {
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The name of the NFS share.",
          "type": "string"
        },
        "volume": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "description": "Output only. The state of the NFS share.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          },
          "type": "array"
        },
        "nfsShareId": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "type": "string",
          "readOnly": true
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "description": "Immutable. The storage type of the underlying volume.",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        }
      },
      "id": "NfsShare"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "description": "Logical interface.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "type": {
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "description": "Interface type.",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "type": "string"
        },
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
    },
    "IntakeVlanAttachment": {
      "type": "object",
      "id": "IntakeVlanAttachment",
      "description": "A GCP vlan attachment.",
      "properties": {
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "properties": {
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "type": "array",
          "items": {
            "$ref": "LogicalNetworkInterface"
          }
        },
        "interfaceIndex": {
          "format": "int32",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "type": "integer"
        },
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        }
      },
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "type": "object"
    },
    "VlanAttachment": {
      "description": "VLAN attachment details.",
      "properties": {
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        },
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "peerVlanId": {
          "type": "string",
          "format": "int64",
          "description": "The peer vlan ID of the attachment."
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "id": {
          "description": "Immutable. The identifier of the attachment within vrf.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VlanAttachment"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "id": "Operation"
    },
    "RestoreVolumeSnapshotRequest": {
      "properties": {},
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object",
      "description": "Message for restoring a volume snapshot."
    },
    "StopInstanceRequest": {
      "id": "StopInstanceRequest",
      "properties": {},
      "description": "Message requesting to stop a server.",
      "type": "object"
    },
    "VRF": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "description": "The possible state of VRF."
        }
      },
      "id": "VRF",
      "description": "A network VRF."
    }
  },
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "id": "baremetalsolution:v2",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "servicePath": "",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "version": "v2",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "sshKeys": {
              "methods": {
                "create": {
                  "path": "v2/{+parent}/sshKeys",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent containing the SSH keys.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "sshKeyId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "response": {
                    "$ref": "SSHKey"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "path": "v2/{+parent}/sshKeys",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.sshKeys.list",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\"."
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\"."
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "parameterOrder": [
                    "location"
                  ],
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch"
                }
              }
            },
            "volumes": {
              "resources": {
                "luns": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List storage volume luns for given storage volume.",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "path": "v2/{+parent}/luns",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "required": true
                        },
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results from the server.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "response": {
                        "$ref": "ListLunsResponse"
                      }
                    },
                    "get": {
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "httpMethod": "GET",
                      "path": "v2/{+name}",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Lun"
                      }
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The volume to snapshot.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "path": "v2/{+parent}/snapshots",
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots"
                    },
                    "get": {
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "path": "v2/{+name}",
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "httpMethod": "GET"
                    },
                    "restoreVolumeSnapshot": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "parameters": {
                        "volumeSnapshot": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume.",
                          "location": "path"
                        }
                      }
                    },
                    "delete": {
                      "path": "v2/{+name}",
                      "httpMethod": "DELETE",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the snapshot to delete."
                        }
                      },
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}"
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Parent value for ListVolumesRequest."
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results from the server.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "path": "v2/{+parent}/snapshots",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      }
                    }
                  }
                }
              },
              "methods": {
                "resize": {
                  "parameters": {
                    "volume": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Volume to resize.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "path": "v2/{+volume}:resize",
                  "parameterOrder": [
                    "volume"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "description": "Emergency Volume resize."
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single storage volume.",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.get"
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for ListVolumesRequest."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "path": "v2/{+parent}/volumes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "description": "List storage volumes in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update details of a single storage volume.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "request": {
                    "$ref": "Volume"
                  }
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List the budget details to provision resources on a given project.",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "path": "v2/{+parent}/provisioningQuotas",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "submit": {
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Submit a provisiong configuration for a given project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit"
                },
                "create": {
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+parent}/provisioningConfigs",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create new ProvisioningConfig.",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    },
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs"
                },
                "patch": {
                  "description": "Update existing ProvisioningConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. The list of fields to update."
                    },
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "description": "Required. Name of the ProvisioningConfig."
                    }
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "description": "Get ProvisioningConfig by name.",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "networks": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}"
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "description": "Update details of a single network.",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Network"
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "path": "v2/{+parent}/networks",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "description": "List network in a given project and location.",
                  "id": "baremetalsolution.projects.locations.networks.list"
                },
                "listNetworkUsage": {
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value (project and location).",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage"
                }
              }
            },
            "nfsShares": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "description": "Create an NFS share.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "request": {
                    "$ref": "NfsShare"
                  }
                },
                "get": {
                  "description": "Get details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+name}"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the NFS share to delete.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "path": "v2/{+parent}/nfsShares",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "List NFS shares.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`"
                    },
                    "name": {
                      "description": "Immutable. The name of the NFS share.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "description": "Update details of a single NFS share."
                }
              }
            },
            "instances": {
              "methods": {
                "patch": {
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "format": "google-fieldmask"
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "description": "Update details of a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "reset": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:reset",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on."
                },
                "disableInteractiveSerialConsole": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Disable the interactive serial console feature on an instance.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "path": "v2/{+name}:disableInteractiveSerialConsole",
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "start": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "description": "Starts a server that was shutdown.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}:start"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Instance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "description": "Get details about a single server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}"
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List servers in a given project and location.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "httpMethod": "POST",
                  "description": "Create an Instance.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "detachLun": {
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "path": "v2/{+instance}:detachLun",
                  "description": "Detach LUN from Instance.",
                  "parameters": {
                    "instance": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the instance."
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "enableInteractiveSerialConsole": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "description": "Enable the interactive serial console feature on an instance.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "stop": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:stop",
                  "description": "Stop a running server."
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}"
                }
              }
            }
          },
          "methods": {
            "get": {
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "id": "baremetalsolution.projects.locations.get",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "path": "v2/{+name}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations"
            }
          }
        }
      }
    }
  },
  "name": "baremetalsolution",
  "revision": "20221017",
  "version_module": true,
  "discoveryVersion": "v1",
  "title": "Bare Metal Solution API"
}
