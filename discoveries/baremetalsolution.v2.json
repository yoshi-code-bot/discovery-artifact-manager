{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/bare-metal",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Resource name for the location."
                }
              },
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.locations.get",
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v2/projects/{projectsId}/locations"
            }
          },
          "resources": {
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "parameterOrder": [
                    "location"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "parameters": {
                    "location": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "disableInteractiveSerialConsole": {
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "path": "v2/{+name}:disableInteractiveSerialConsole",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "description": "Disable the interactive serial console feature on an instance.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "reset": {
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "path": "v2/{+name}:reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset"
                },
                "list": {
                  "path": "v2/{+parent}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "List servers in a given project and location.",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "start": {
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "description": "Starts a server that was shutdown.",
                  "path": "v2/{+name}:start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "description": "Get details about a single server."
                },
                "patch": {
                  "description": "Update details of a single server.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "description": "Create an Instance.",
                  "path": "v2/{+parent}/instances",
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "enableInteractiveSerialConsole": {
                  "description": "Enable the interactive serial console feature on an instance.",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "detachLun": {
                  "httpMethod": "POST",
                  "parameters": {
                    "instance": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the instance.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "path": "v2/{+instance}:detachLun",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Detach LUN from Instance.",
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.detachLun"
                },
                "stop": {
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Stop a running server.",
                  "httpMethod": "POST"
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "description": "List network in a given project and location.",
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "path": "v2/{+parent}/networks",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    }
                  }
                },
                "listNetworkUsage": {
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "httpMethod": "GET",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value (project and location).",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage"
                },
                "get": {
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Network"
                  },
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "description": "Get details of a single network.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Network"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single network.",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "sshKeys": {
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "httpMethod": "DELETE",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "httpMethod": "POST",
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "path": "v2/{+parent}/sshKeys",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent containing the SSH keys.",
                      "required": true,
                      "location": "path"
                    },
                    "sshKeyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SSHKey"
                  }
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.sshKeys.list",
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/sshKeys",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of items to return."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\".",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys"
                }
              }
            },
            "nfsShares": {
              "methods": {
                "create": {
                  "description": "Create an NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent project and location."
                    }
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "httpMethod": "POST"
                },
                "delete": {
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the NFS share to delete.",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}"
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "description": "List NFS shares.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "description": "Update details of a single NFS share.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Immutable. The name of the NFS share.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "description": "Get details of a single NFS share.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "path": "v2/{+parent}/provisioningQuotas",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List the budget details to provision resources on a given project.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for ListProvisioningQuotasRequest."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "volumes": {
              "resources": {
                "snapshots": {
                  "methods": {
                    "create": {
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "path": "v2/{+parent}/snapshots",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "parameters": {
                        "parent": {
                          "description": "Required. The volume to snapshot.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        }
                      },
                      "httpMethod": "POST"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the snapshot to delete."
                        }
                      }
                    },
                    "restoreVolumeSnapshot": {
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "parameters": {
                        "volumeSnapshot": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume."
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results from the server.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "path": "v2/{+parent}/snapshots",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots"
                    }
                  }
                },
                "luns": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "path": "v2/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "description": "Required. Name of the resource."
                        }
                      }
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest.",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        }
                      },
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List storage volume luns for given storage volume.",
                      "path": "v2/{+parent}/luns"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single storage volume."
                },
                "resize": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "parameters": {
                    "volume": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "description": "Required. Volume to resize.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+volume}:resize",
                  "parameterOrder": [
                    "volume"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "description": "Emergency Volume resize."
                },
                "list": {
                  "description": "List storage volumes in a given project and location.",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "path": "v2/{+parent}/volumes",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single storage volume.",
                  "request": {
                    "$ref": "Volume"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.patch"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "description": "Get ProvisioningConfig by name.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ProvisioningConfig.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}"
                },
                "submit": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Submit a provisiong configuration for a given project.",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  }
                },
                "create": {
                  "description": "Create new ProvisioningConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/provisioningConfigs",
                  "parameters": {
                    "email": {
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "parameters": {
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "name": {
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update existing ProvisioningConfig.",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$"
                    }
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "revision": "20221017",
  "schemas": {
    "VolumeSnapshot": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Output only. An identifier for the snapshot, generated by the backend.",
          "type": "string"
        },
        "type": {
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ],
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the snapshot."
        },
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The creation time of the snapshot.",
          "type": "string",
          "format": "google-datetime"
        },
        "storageVolume": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the volume which this snapshot belongs to."
        }
      },
      "type": "object",
      "id": "VolumeSnapshot",
      "description": "A snapshot of a volume. Only boot volumes can have snapshots."
    },
    "StartInstanceRequest": {
      "properties": {},
      "type": "object",
      "id": "StartInstanceRequest",
      "description": "Message requesting to start a server."
    },
    "AllowedClient": {
      "id": "AllowedClient",
      "properties": {
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "shareIp": {
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "readOnly": true,
          "type": "string"
        },
        "mountPermissions": {
          "description": "Mount permissions.",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ]
        },
        "nfsPath": {
          "readOnly": true,
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "type": "string"
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        }
      },
      "description": "Represents an 'access point' for the share.",
      "type": "object"
    },
    "StopInstanceRequest": {
      "type": "object",
      "id": "StopInstanceRequest",
      "description": "Message requesting to stop a server.",
      "properties": {}
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        },
        "logicalNetworkInterfaces": {
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "description": "List of logical network interfaces within a logical interface.",
          "type": "array"
        },
        "interfaceIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."
        }
      },
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "SSHKey": {
      "id": "SSHKey",
      "type": "object",
      "properties": {
        "publicKey": {
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\".",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An SSH key, used for authorizing with the interactive serial console feature."
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "id": "FetchInstanceProvisioningSettingsResponse",
      "properties": {
        "images": {
          "items": {
            "$ref": "OSImage"
          },
          "type": "array",
          "description": "The OS images available."
        }
      },
      "description": "Response with all provisioning settings.",
      "type": "object"
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "type": "object",
      "id": "InstanceQuota",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance quota.",
          "readOnly": true
        },
        "instanceType": {
          "description": "Instance type. Deprecated: use gcp_service.",
          "type": "string"
        },
        "availableMachineCount": {
          "type": "integer",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        }
      }
    },
    "Volume": {
      "description": "A storage volume.",
      "id": "Volume",
      "properties": {
        "performanceTier": {
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "type": "string",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "description": "Immutable. Performance tier of the Volume. Default is SHARED."
        },
        "emergencySizeGib": {
          "format": "int64",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention."
        },
        "maxSizeGib": {
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        },
        "autoGrownSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "bootVolume": {
          "type": "boolean",
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.",
          "readOnly": true
        },
        "requestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB."
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string"
        },
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ]
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "description": "Originally requested size, in GiB.",
          "format": "int64"
        },
        "pod": {
          "description": "Immutable. Pod name.",
          "type": "string"
        },
        "remainingSpaceGib": {
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "type": "string",
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated."
          ]
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this volume."
        },
        "currentSizeGib": {
          "format": "int64",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string"
        },
        "protocol": {
          "readOnly": true,
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "type": "string",
          "description": "Output only. Storage protocol for the Volume."
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        }
      },
      "type": "object"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "description": "Message for disabling the interactive serial console on an instance.",
      "type": "object",
      "properties": {},
      "id": "DisableInteractiveSerialConsoleRequest"
    },
    "ResetInstanceRequest": {
      "type": "object",
      "description": "Message requesting to reset a server.",
      "id": "ResetInstanceRequest",
      "properties": {}
    },
    "ListSSHKeysResponse": {
      "type": "object",
      "id": "ListSSHKeysResponse",
      "properties": {
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "description": "The SSH keys registered in the project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "Message for response of ListSSHKeys."
    },
    "SnapshotReservationDetail": {
      "type": "object",
      "id": "SnapshotReservationDetail",
      "properties": {
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "type": "string"
        },
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string",
          "format": "int64"
        },
        "reservedSpaceUsedPercent": {
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32"
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Details about snapshot space reservation and usage on the storage volume."
    },
    "ListNetworksResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListNetworksResponse",
      "description": "Response message containing the list of networks."
    },
    "NetworkAddress": {
      "type": "object",
      "description": "A network.",
      "id": "NetworkAddress",
      "properties": {
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        },
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        }
      }
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "nfsShares": {
          "type": "array",
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message containing the list of NFS shares."
    },
    "Lun": {
      "type": "object",
      "description": "A storage volume logical unit number (LUN).",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the LUN.",
          "type": "string"
        },
        "multiprotocolType": {
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ]
        },
        "state": {
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "description": "The storage type for this LUN."
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the LUN, generated by the backend."
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "sizeGb": {
          "type": "string",
          "description": "The size of this LUN, in gigabytes.",
          "format": "int64"
        }
      },
      "id": "Lun"
    },
    "ListLunsResponse": {
      "type": "object",
      "id": "ListLunsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "luns": {
          "description": "The list of luns.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        }
      },
      "description": "Response message containing the list of storage volume luns."
    },
    "DetachLunRequest": {
      "description": "Message for detach specific LUN from an Instance.",
      "id": "DetachLunRequest",
      "type": "object",
      "properties": {
        "skipReboot": {
          "description": "If true, performs lun unmapping without instance reboot.",
          "type": "boolean"
        },
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        }
      }
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the action executed by the operation."
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used with the operation."
        }
      },
      "type": "object",
      "description": "Represents the metadata from a long-running operation."
    },
    "NetworkMountPoint": {
      "type": "object",
      "properties": {
        "defaultGateway": {
          "description": "Network should be a default gateway.",
          "type": "boolean"
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip address of the server."
        },
        "instance": {
          "type": "string",
          "description": "Instance to attach network to."
        },
        "logicalInterface": {
          "type": "string",
          "description": "Logical interface to detach from."
        }
      },
      "id": "NetworkMountPoint",
      "description": "Mount point for a network."
    },
    "ServerNetworkTemplate": {
      "type": "object",
      "id": "ServerNetworkTemplate",
      "properties": {
        "applicableInstanceTypes": {
          "description": "Instance types this template is applicable to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logicalInterfaces": {
          "type": "array",
          "description": "Logical interfaces.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\"."
        }
      },
      "description": "Network template."
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse",
      "type": "object",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array",
          "description": "Networks with IPs."
        }
      }
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "Instance": {
      "id": "Instance",
      "properties": {
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. List of networks associated with this server."
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An identifier for the `Instance`, generated by the backend."
        },
        "updateTime": {
          "description": "Output only. Update a time stamp.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "interactiveSerialConsoleEnabled": {
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "readOnly": true,
          "type": "boolean"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "luns": {
          "description": "Immutable. List of LUNs associated with this server.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        },
        "state": {
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of the server."
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array"
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Create a time stamp."
        },
        "loginInfo": {
          "readOnly": true,
          "description": "Output only. Text field about info for logging in.",
          "type": "string"
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses."
        }
      },
      "description": "A server.",
      "type": "object"
    },
    "NfsExport": {
      "type": "object",
      "description": "A NFS export entry.",
      "properties": {
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "type": "string",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        }
      },
      "id": "NfsExport"
    },
    "RestoreVolumeSnapshotRequest": {
      "type": "object",
      "description": "Message for restoring a volume snapshot.",
      "id": "RestoreVolumeSnapshotRequest",
      "properties": {}
    },
    "VlanAttachment": {
      "properties": {
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "id": {
          "type": "string",
          "description": "Immutable. The identifier of the attachment within vrf."
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "type": "string",
          "format": "int64"
        },
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        },
        "peerIp": {
          "type": "string",
          "description": "The peer IP of the attachment."
        }
      },
      "description": "VLAN attachment details.",
      "id": "VlanAttachment",
      "type": "object"
    },
    "NfsShare": {
      "type": "object",
      "id": "NfsShare",
      "description": "An NFS share.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "nfsShareId": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "type": "string",
          "readOnly": true
        },
        "storageType": {
          "description": "Immutable. The storage type of the underlying volume.",
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The name of the NFS share.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "description": "Output only. The state of the NFS share."
        },
        "volume": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning."
        },
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "type": "string",
          "readOnly": true
        },
        "allowedClients": {
          "type": "array",
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          }
        }
      }
    },
    "QosPolicy": {
      "type": "object",
      "id": "QosPolicy",
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "description": "QOS policy parameters."
    },
    "ProvisioningQuota": {
      "type": "object",
      "id": "ProvisioningQuota",
      "properties": {
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "assetType": {
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string",
          "description": "The asset type of this provisioning quota.",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ]
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "networkBandwidth": {
          "description": "Network bandwidth, Gbps",
          "type": "string",
          "format": "int64"
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "storageGib": {
          "description": "Storage size (GB).",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning quota."
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "serverCount": {
          "type": "string",
          "description": "Server count.",
          "format": "int64"
        }
      },
      "description": "A provisioning quota for a given project."
    },
    "LunRange": {
      "description": "A LUN(Logical Unit Number) range.",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of each LUN, in GB.",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Number of LUNs to create."
        }
      },
      "type": "object",
      "id": "LunRange"
    },
    "NetworkUsage": {
      "properties": {
        "network": {
          "description": "Network.",
          "$ref": "Network"
        },
        "usedIps": {
          "type": "array",
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses."
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        },
        "type": {
          "description": "Interface type.",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "type": "string"
        },
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "description": "Logical interface."
    },
    "VRF": {
      "properties": {
        "vlanAttachments": {
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          }
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility.",
          "$ref": "QosPolicy"
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "description": "The possible state of VRF.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ]
        }
      },
      "description": "A network VRF.",
      "type": "object",
      "id": "VRF"
    },
    "ListInstancesResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instances": {
          "description": "The list of servers.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse"
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        }
      }
    },
    "SubmitProvisioningConfigResponse": {
      "id": "SubmitProvisioningConfigResponse",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      },
      "description": "Response for SubmitProvisioningConfig.",
      "type": "object"
    },
    "Operation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      }
    },
    "ProvisioningConfig": {
      "type": "object",
      "id": "ProvisioningConfig",
      "description": "A provisioning configuration.",
      "properties": {
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          },
          "description": "Volumes to be created."
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created."
        },
        "statusMessage": {
          "description": "Optional status messages associated with the FAILED state.",
          "type": "string"
        },
        "instances": {
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages."
        },
        "name": {
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "type": "string",
          "readOnly": true
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime"
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "type": "string",
          "readOnly": true
        },
        "customId": {
          "type": "string",
          "description": "Optional. The user-defined identifier of the provisioning config."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "readOnly": true,
          "type": "string"
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        }
      }
    },
    "OSImage": {
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. OS Image's unique name.",
          "type": "string"
        },
        "applicableInstanceTypes": {
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "supportedNetworkTemplates": {
          "description": "Network templates that can be used with this OS Image.",
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          }
        }
      },
      "type": "object",
      "id": "OSImage",
      "description": "Operation System image."
    },
    "NetworkAddressReservation": {
      "id": "NetworkAddressReservation",
      "properties": {
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "endAddress": {
          "type": "string",
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A reservation of one or more addresses in a network."
    },
    "EnableInteractiveSerialConsoleRequest": {
      "type": "object",
      "id": "EnableInteractiveSerialConsoleRequest",
      "properties": {},
      "description": "Message for enabling the interactive serial console on an instance."
    },
    "ListVolumesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "volumes": {
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes."
    },
    "InstanceConfig": {
      "type": "object",
      "properties": {
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true."
        },
        "name": {
          "description": "Output only. The name of the instance config.",
          "type": "string",
          "readOnly": true
        },
        "networkConfig": {
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "type": "string",
          "description": "The type of network configuration on the instance."
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "accountNetworksEnabled": {
          "description": "If true networks can be from different projects of the same vendor account.",
          "type": "boolean"
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        }
      },
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance."
    },
    "ResizeVolumeRequest": {
      "id": "ResizeVolumeRequest",
      "type": "object",
      "properties": {
        "sizeGib": {
          "description": "New Volume size, in GiB.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Request for emergency resize Volume."
    },
    "ListProvisioningQuotasResponse": {
      "description": "Response message for the list of provisioning quotas.",
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "provisioningQuotas": {
          "description": "The provisioning quotas registered in this project.",
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "volumeSnapshots": {
          "type": "array",
          "description": "The list of snapshots.",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        }
      },
      "description": "Response message containing the list of volume snapshots.",
      "id": "ListVolumeSnapshotsResponse"
    },
    "LogicalNetworkInterface": {
      "properties": {
        "network": {
          "type": "string",
          "description": "Name of the network"
        },
        "networkType": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "description": "Type of network."
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LogicalNetworkInterface",
      "description": "Each logical network interface is effectively a network and IP pair."
    },
    "Network": {
      "properties": {
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "macAddress": {
          "items": {
            "type": "string"
          },
          "description": "List of physical interfaces.",
          "type": "array"
        },
        "mountPoints": {
          "description": "Input only. List of mount points to attach the network to.",
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "type": "array"
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "type": {
          "description": "The type of this network.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ]
        },
        "gatewayIp": {
          "description": "Output only. Gateway ip address.",
          "type": "string",
          "readOnly": true
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          }
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "type": "string",
          "description": "The Network state."
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "pod": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Pod name."
        }
      },
      "description": "A Network.",
      "id": "Network",
      "type": "object"
    },
    "VolumeConfig": {
      "properties": {
        "machineIds": {
          "items": {
            "type": "string"
          },
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB.",
          "type": "integer"
        },
        "performanceTier": {
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "description": "Performance tier of the Volume. Default is SHARED.",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "protocol": {
          "description": "Volume protocol.",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the volume config.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "type": {
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ]
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array"
        },
        "lunRanges": {
          "type": "array",
          "items": {
            "$ref": "LunRange"
          },
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        }
      },
      "type": "object",
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume."
    },
    "IntakeVlanAttachment": {
      "id": "IntakeVlanAttachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A GCP vlan attachment."
    },
    "NetworkConfig": {
      "type": "object",
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network.",
      "properties": {
        "vlanAttachments": {
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "items": {
            "$ref": "IntakeVlanAttachment"
          }
        },
        "bandwidth": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "serviceCidr": {
          "type": "string",
          "description": "Service CIDR, if any.",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ]
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the network config.",
          "type": "string"
        },
        "vlanSameProject": {
          "type": "boolean",
          "description": "Whether the VLAN attachment pair is located in the same project."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "type": {
          "description": "The type of this network, either Client or Private.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        }
      }
    }
  },
  "servicePath": "",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "id": "baremetalsolution:v2",
  "basePath": "",
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "name": "baremetalsolution",
  "ownerName": "Google",
  "version": "v2",
  "title": "Bare Metal Solution API",
  "version_module": true,
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "batchPath": "batch"
}
