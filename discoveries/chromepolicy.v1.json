{
  "mtlsRootUrl": "https://chromepolicy.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "Chrome Policy",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "baseUrl": "https://chromepolicy.googleapis.com/",
  "id": "chromepolicy:v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/chrome.management.policy.readonly": {
          "description": "See policies applied to Chrome OS and Chrome Browsers managed within your organization"
        },
        "https://www.googleapis.com/auth/chrome.management.policy": {
          "description": "See, edit, create or delete policies applied to Chrome OS and Chrome Browsers managed within your organization"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "name": "chromepolicy",
  "description": "The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.",
  "version": "v1",
  "version_module": true,
  "protocol": "rest",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "resources": {
    "customers": {
      "resources": {
        "policySchemas": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.policy",
                "https://www.googleapis.com/auth/chrome.management.policy.readonly"
              ],
              "id": "chromepolicy.customers.policySchemas.list",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of policy schemas to return, defaults to 100 and has a maximum of 1000.",
                  "type": "integer"
                },
                "parent": {
                  "description": "Required. The customer for which the listing request will apply.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+$"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The schema filter used to find a particular schema based on fields like its resource name, description and `additionalTargetKeyNames`."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The page token used to retrieve a specific page of the listing request."
                }
              },
              "path": "v1/{+parent}/policySchemas",
              "response": {
                "$ref": "GoogleChromePolicyVersionsV1ListPolicySchemasResponse"
              },
              "flatPath": "v1/customers/{customersId}/policySchemas",
              "description": "Gets a list of policy schemas that match a specified filter value for a given customer.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleChromePolicyVersionsV1PolicySchema"
              },
              "flatPath": "v1/customers/{customersId}/policySchemas/{policySchemasId}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/policySchemas/.*$",
                  "location": "path",
                  "description": "Required. The policy schema resource name to query.",
                  "type": "string",
                  "required": true
                }
              },
              "id": "chromepolicy.customers.policySchemas.get",
              "description": "Get a specific policy schema for a customer by its resource name.",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.policy",
                "https://www.googleapis.com/auth/chrome.management.policy.readonly"
              ]
            }
          }
        },
        "policies": {
          "methods": {
            "resolve": {
              "parameters": {
                "customer": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "description": "ID of the G Suite account or literal \"my_customer\" for the customer associated to the request."
                }
              },
              "response": {
                "$ref": "GoogleChromePolicyVersionsV1ResolveResponse"
              },
              "request": {
                "$ref": "GoogleChromePolicyVersionsV1ResolveRequest"
              },
              "path": "v1/{+customer}/policies:resolve",
              "parameterOrder": [
                "customer"
              ],
              "httpMethod": "POST",
              "id": "chromepolicy.customers.policies.resolve",
              "flatPath": "v1/customers/{customersId}/policies:resolve",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.policy",
                "https://www.googleapis.com/auth/chrome.management.policy.readonly"
              ],
              "description": "Gets the resolved policy values for a list of policies that match a search query."
            }
          },
          "resources": {
            "orgunits": {
              "methods": {
                "batchModify": {
                  "parameterOrder": [
                    "customer"
                  ],
                  "flatPath": "v1/customers/{customersId}/policies/orgunits:batchModify",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "httpMethod": "POST",
                  "description": "Modify multiple policy values that are applied to a specific org unit. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest"
                  },
                  "path": "v1/{+customer}/policies/orgunits:batchModify",
                  "id": "chromepolicy.customers.policies.orgunits.batchModify",
                  "parameters": {
                    "customer": {
                      "pattern": "^customers/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "ID of the G Suite account or literal \"my_customer\" for the customer associated to the request."
                    }
                  }
                },
                "batchInherit": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "chromepolicy.customers.policies.orgunits.batchInherit",
                  "parameterOrder": [
                    "customer"
                  ],
                  "parameters": {
                    "customer": {
                      "required": true,
                      "pattern": "^customers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "ID of the G Suite account or literal \"my_customer\" for the customer associated to the request."
                    }
                  },
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "flatPath": "v1/customers/{customersId}/policies/orgunits:batchInherit",
                  "description": "Modify multiple policy values that are applied to a specific org unit so that they now inherit the value from a parent (if applicable). All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.",
                  "path": "v1/{+customer}/policies/orgunits:batchInherit"
                }
              }
            },
            "groups": {
              "methods": {
                "listGroupPriorityOrdering": {
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy",
                    "https://www.googleapis.com/auth/chrome.management.policy.readonly"
                  ],
                  "parameterOrder": [
                    "customer"
                  ],
                  "parameters": {
                    "customer": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. ID of the Google Workspace account or literal \"my_customer\" for the customer associated to the request.",
                      "pattern": "^customers/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse"
                  },
                  "path": "v1/{+customer}/policies/groups:listGroupPriorityOrdering",
                  "httpMethod": "POST",
                  "id": "chromepolicy.customers.policies.groups.listGroupPriorityOrdering",
                  "flatPath": "v1/customers/{customersId}/policies/groups:listGroupPriorityOrdering",
                  "description": "Retrieve a group priority ordering for an app. The target app must be supplied in `additionalTargetKeyNames` in the PolicyTargetKey. On failure the request will return the error details as part of the google.rpc.Status.",
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest"
                  }
                },
                "updateGroupPriorityOrdering": {
                  "description": "Update a group priority ordering for an app. The target app must be supplied in `additionalTargetKeyNames` in the PolicyTargetKey. On failure the request will return the error details as part of the google.rpc.Status.",
                  "path": "v1/{+customer}/policies/groups:updateGroupPriorityOrdering",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/customers/{customersId}/policies/groups:updateGroupPriorityOrdering",
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "id": "chromepolicy.customers.policies.groups.updateGroupPriorityOrdering",
                  "parameterOrder": [
                    "customer"
                  ],
                  "parameters": {
                    "customer": {
                      "location": "path",
                      "pattern": "^customers/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. ID of the Google Workspace account or literal \"my_customer\" for the customer associated to the request."
                    }
                  }
                },
                "batchDelete": {
                  "path": "v1/{+customer}/policies/groups:batchDelete",
                  "parameters": {
                    "customer": {
                      "required": true,
                      "description": "ID of the Google Workspace account or literal \"my_customer\" for the customer associated to the request.",
                      "type": "string",
                      "pattern": "^customers/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest"
                  },
                  "flatPath": "v1/customers/{customersId}/policies/groups:batchDelete",
                  "description": "Delete multiple policy values that are applied to a specific group. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.",
                  "parameterOrder": [
                    "customer"
                  ],
                  "id": "chromepolicy.customers.policies.groups.batchDelete",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "batchModify": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v1/{+customer}/policies/groups:batchModify",
                  "id": "chromepolicy.customers.policies.groups.batchModify",
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "parameterOrder": [
                    "customer"
                  ],
                  "parameters": {
                    "customer": {
                      "pattern": "^customers/[^/]+$",
                      "description": "ID of the Google Workspace account or literal \"my_customer\" for the customer associated to the request.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Modify multiple policy values that are applied to a specific group. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.",
                  "flatPath": "v1/customers/{customersId}/policies/groups:batchModify"
                }
              }
            },
            "networks": {
              "methods": {
                "defineCertificate": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "customer"
                  ],
                  "path": "v1/{+customer}/policies/networks:defineCertificate",
                  "parameters": {
                    "customer": {
                      "location": "path",
                      "pattern": "^customers/[^/]+$",
                      "description": "Required. The customer for which the certificate will apply.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1DefineCertificateRequest"
                  },
                  "description": "Creates a certificate at a specified OU for a customer.",
                  "response": {
                    "$ref": "GoogleChromePolicyVersionsV1DefineCertificateResponse"
                  },
                  "flatPath": "v1/customers/{customersId}/policies/networks:defineCertificate",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "id": "chromepolicy.customers.policies.networks.defineCertificate"
                },
                "defineNetwork": {
                  "parameters": {
                    "customer": {
                      "required": true,
                      "pattern": "^customers/[^/]+$",
                      "description": "Required. The customer who will own this new network.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleChromePolicyVersionsV1DefineNetworkResponse"
                  },
                  "flatPath": "v1/customers/{customersId}/policies/networks:defineNetwork",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "parameterOrder": [
                    "customer"
                  ],
                  "id": "chromepolicy.customers.policies.networks.defineNetwork",
                  "path": "v1/{+customer}/policies/networks:defineNetwork",
                  "description": "Define a new network.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1DefineNetworkRequest"
                  }
                },
                "removeNetwork": {
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1RemoveNetworkRequest"
                  },
                  "description": "Remove an existing network by guid.",
                  "id": "chromepolicy.customers.policies.networks.removeNetwork",
                  "path": "v1/{+customer}/policies/networks:removeNetwork",
                  "response": {
                    "$ref": "GoogleChromePolicyVersionsV1RemoveNetworkResponse"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "customer"
                  ],
                  "parameters": {
                    "customer": {
                      "description": "Required. The customer whose network will be removed.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+$"
                    }
                  },
                  "flatPath": "v1/customers/{customersId}/policies/networks:removeNetwork",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ]
                },
                "removeCertificate": {
                  "path": "v1/{+customer}/policies/networks:removeCertificate",
                  "parameters": {
                    "customer": {
                      "location": "path",
                      "description": "Required. The customer whose certificate will be removed.",
                      "required": true,
                      "pattern": "^customers/[^/]+$",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleChromePolicyVersionsV1RemoveCertificateRequest"
                  },
                  "parameterOrder": [
                    "customer"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.policy"
                  ],
                  "id": "chromepolicy.customers.policies.networks.removeCertificate",
                  "description": "Remove an existing certificate by guid.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleChromePolicyVersionsV1RemoveCertificateResponse"
                  },
                  "flatPath": "v1/customers/{customersId}/policies/networks:removeCertificate"
                }
              }
            }
          }
        }
      }
    },
    "media": {
      "methods": {
        "upload": {
          "response": {
            "$ref": "GoogleChromePolicyVersionsV1UploadPolicyFileResponse"
          },
          "mediaUpload": {
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/v1/{+customer}/policies/files:uploadPolicyFile"
              }
            },
            "accept": [
              "*/*"
            ]
          },
          "request": {
            "$ref": "GoogleChromePolicyVersionsV1UploadPolicyFileRequest"
          },
          "description": "Creates an enterprise file from the content provided by user. Returns a public download url for end user.",
          "scopes": [
            "https://www.googleapis.com/auth/chrome.management.policy"
          ],
          "parameterOrder": [
            "customer"
          ],
          "path": "v1/{+customer}/policies/files:uploadPolicyFile",
          "supportsMediaUpload": true,
          "flatPath": "v1/customers/{customersId}/policies/files:uploadPolicyFile",
          "httpMethod": "POST",
          "parameters": {
            "customer": {
              "type": "string",
              "required": true,
              "pattern": "^customers/[^/]+$",
              "description": "Required. The customer for which the file upload will apply.",
              "location": "path"
            }
          },
          "id": "chromepolicy.media.upload"
        }
      }
    }
  },
  "servicePath": "",
  "title": "Chrome Policy API",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "revision": "20221020",
  "documentationLink": "http://developers.google.com/chrome/policy",
  "parameters": {
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    }
  },
  "rootUrl": "https://chromepolicy.googleapis.com/",
  "basePath": "",
  "schemas": {
    "GoogleChromePolicyVersionsV1CertificateReference": {
      "properties": {
        "network": {
          "type": "string",
          "description": "Output only. The name of the referencing network.",
          "readOnly": true
        },
        "orgUnitId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The obfuscated id of the org unit the referencing network is in."
        }
      },
      "type": "object",
      "description": "Error information for removing of a specific certificate on a specific target. A reference to a certificate.",
      "id": "GoogleChromePolicyVersionsV1CertificateReference"
    },
    "Proto2EnumDescriptorProto": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "Proto2EnumValueDescriptorProto"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "id": "Proto2EnumDescriptorProto",
      "type": "object",
      "description": "Describes an enum type."
    },
    "GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest": {
      "type": "object",
      "properties": {
        "policyValue": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyValue",
          "description": "The new value for the policy."
        },
        "updateMask": {
          "description": "Required. Policy fields to update. Only fields in this mask will be updated; other fields in `policy_value` will be ignored (even if they have values). If a field is in this list it must have a value in 'policy_value'.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "policyTargetKey": {
          "description": "Required. The key of the target for which we want to modify a policy. The target resource must point to a Group.",
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey"
        }
      },
      "id": "GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest",
      "description": "Request parameters for modifying a policy value for a specific group target."
    },
    "GoogleChromePolicyVersionsV1PolicyTargetKey": {
      "id": "GoogleChromePolicyVersionsV1PolicyTargetKey",
      "type": "object",
      "description": "The key used to identify the target on which the policy will be applied.",
      "properties": {
        "additionalTargetKeys": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map containing the additional target key name and value pairs used to further identify the target of the policy."
        },
        "targetResource": {
          "description": "The target resource on which this policy is applied. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\") * Group (\"groups/{group_id}\")",
          "type": "string"
        }
      }
    },
    "GoogleChromePolicyVersionsV1RemoveNetworkRequest": {
      "properties": {
        "networkId": {
          "description": "Required. The GUID of the network to remove.",
          "type": "string"
        },
        "targetResource": {
          "type": "string",
          "description": "Required. The target resource on which this network will be removed. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\")"
        }
      },
      "description": "Request object for removing a network",
      "id": "GoogleChromePolicyVersionsV1RemoveNetworkRequest",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1PolicySchema": {
      "description": "Resource representing a policy schema.",
      "id": "GoogleChromePolicyVersionsV1PolicySchema",
      "properties": {
        "supportUri": {
          "type": "string",
          "description": "Output only. URI to related support article for this schema.",
          "readOnly": true
        },
        "additionalTargetKeyNames": {
          "description": "Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1AdditionalTargetKeyName"
          },
          "type": "array"
        },
        "policyDescription": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Description about the policy schema for user consumption."
        },
        "definition": {
          "$ref": "Proto2FileDescriptorProto",
          "description": "Schema definition using proto descriptor."
        },
        "schemaName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies BatchModifyOrgUnitPolicies BatchModifyGroupPolicies or BatchDeleteGroupPolicies."
        },
        "name": {
          "type": "string",
          "description": "Format: name=customers/{customer}/policySchemas/{schema_namespace}"
        },
        "fieldDescriptions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1PolicySchemaFieldDescription"
          },
          "description": "Output only. Detailed description of each field that is part of the schema."
        },
        "validTargetResources": {
          "items": {
            "enumDescriptions": [
              "Unspecified target resource.",
              "Organizational Unit target resource.",
              "Group target resource."
            ],
            "type": "string",
            "enum": [
              "TARGET_RESOURCE_UNSPECIFIED",
              "ORG_UNIT",
              "GROUP"
            ]
          },
          "readOnly": true,
          "description": "Output only. Information about applicable target resources for the policy.",
          "type": "array"
        },
        "notices": {
          "description": "Output only. Special notice messages related to setting certain values in certain fields in the schema.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription"
          },
          "readOnly": true
        },
        "policyApiLifeycle": {
          "description": "Deprecated field because of typo.",
          "$ref": "ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle"
        },
        "policyApiLifecycle": {
          "readOnly": true,
          "$ref": "ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle",
          "description": "Output only. Current lifecycle information."
        },
        "accessRestrictions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Specific access restrictions related to this policy."
        },
        "categoryTitle": {
          "type": "string",
          "description": "Title of the category in which a setting belongs."
        }
      },
      "type": "object"
    },
    "Proto2DescriptorProto": {
      "description": "Describes a message type.",
      "properties": {
        "field": {
          "type": "array",
          "items": {
            "$ref": "Proto2FieldDescriptorProto"
          }
        },
        "nestedType": {
          "type": "array",
          "items": {
            "$ref": "Proto2DescriptorProto"
          }
        },
        "enumType": {
          "items": {
            "$ref": "Proto2EnumDescriptorProto"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "oneofDecl": {
          "type": "array",
          "items": {
            "$ref": "Proto2OneofDescriptorProto"
          }
        }
      },
      "id": "Proto2DescriptorProto",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1PolicyValue": {
      "type": "object",
      "description": "A particular value for a policy managed by the service.",
      "properties": {
        "value": {
          "type": "object",
          "description": "The value of the policy that is compatible with the schema that it is associated with.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "policySchema": {
          "type": "string",
          "description": "The fully qualified name of the policy schema associated with this policy."
        }
      },
      "id": "GoogleChromePolicyVersionsV1PolicyValue"
    },
    "GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest": {
      "id": "GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest",
      "properties": {
        "policyNamespace": {
          "description": "Required. The namespace of the policy type for the request.",
          "type": "string"
        },
        "policyTargetKey": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey",
          "description": "Required. The key of the target for which we want to retrieve the group priority ordering. The target resource must point to an app."
        }
      },
      "description": "Request message for listing the group priority ordering of an app.",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1RemoveNetworkResponse": {
      "properties": {},
      "description": "Response object for removing a network.",
      "type": "object",
      "id": "GoogleChromePolicyVersionsV1RemoveNetworkResponse"
    },
    "GoogleChromePolicyVersionsV1NetworkSetting": {
      "type": "object",
      "properties": {
        "policySchema": {
          "type": "string",
          "description": "The fully qualified name of the network setting."
        },
        "value": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The value of the network setting.",
          "type": "object"
        }
      },
      "description": "A network setting contains network configurations.",
      "id": "GoogleChromePolicyVersionsV1NetworkSetting"
    },
    "GoogleChromePolicyVersionsV1PolicySchemaRequiredItems": {
      "properties": {
        "requiredFields": {
          "description": "The fields that are required as a consequence of the field conditions.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fieldConditions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The value(s) of the field that provoke required field enforcement. An empty field_conditions implies that any value assigned to this field will provoke required field enforcement."
        }
      },
      "type": "object",
      "description": "The fields that will become required based on the value of this field.",
      "id": "GoogleChromePolicyVersionsV1PolicySchemaRequiredItems"
    },
    "GoogleChromePolicyVersionsV1DefineNetworkResponse": {
      "id": "GoogleChromePolicyVersionsV1DefineNetworkResponse",
      "description": "Response object for creating a network.",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Network ID of the new created network."
        },
        "settings": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1NetworkSetting"
          },
          "description": "Detailed network settings of the new created network"
        },
        "targetResource": {
          "type": "string",
          "description": "The target resource on which this new network will be defined. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\")"
        }
      },
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest": {
      "type": "object",
      "description": "Request message for modifying multiple policy values for a specific group-based target.",
      "properties": {
        "requests": {
          "description": "List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to a group resource. 3. All `policyTargetKey` values must have the same `app_id` key name in the `additionalTargetKeys`. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. ",
          "type": "array",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest"
          }
        }
      },
      "id": "GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest"
    },
    "Proto2FieldDescriptorProto": {
      "type": "object",
      "id": "Proto2FieldDescriptorProto",
      "properties": {
        "oneofIndex": {
          "type": "integer",
          "description": "If set, gives the index of a oneof in the containing type's oneof_decl list. This field is a member of that oneof.",
          "format": "int32"
        },
        "proto3Optional": {
          "description": "If true, this is a proto3 \"optional\". When a proto3 field is optional, it tracks presence regardless of field type. When proto3_optional is true, this field must be belong to a oneof to signal to old proto3 clients that presence is tracked for this field. This oneof is known as a \"synthetic\" oneof, and this field must be its sole member (each proto3 optional field gets its own synthetic oneof). Synthetic oneofs exist in the descriptor only, and do not generate any API. Synthetic oneofs must be ordered after all \"real\" oneofs. For message fields, proto3_optional doesn't create any semantic change, since non-repeated message fields always track presence. However it still indicates the semantic detail of whether the user wrote \"optional\" or not. This can be useful for round-tripping the .proto file. For consistency we give message fields a synthetic oneof also, even though it is not required to track presence. This is especially important because the parser can't tell if a field is a message or an enum, so it must always create a synthetic oneof. Proto2 optional fields do not set this flag, because they already indicate optional with `LABEL_OPTIONAL`.",
          "type": "boolean"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "label": {
          "type": "string",
          "enumDescriptions": [
            "0 is reserved for errors",
            "",
            ""
          ],
          "enum": [
            "LABEL_OPTIONAL",
            "LABEL_REQUIRED",
            "LABEL_REPEATED"
          ]
        },
        "name": {
          "type": "string"
        },
        "defaultValue": {
          "description": "For numeric types, contains the original text representation of the value. For booleans, \"true\" or \"false\". For strings, contains the default text contents (not escaped in any way). For bytes, contains the C escaped value. All bytes \u003e= 128 are escaped.",
          "type": "string"
        },
        "jsonName": {
          "description": "JSON name of this field. The value is set by protocol compiler. If the user has set a \"json_name\" option on this field, that option's value will be used. Otherwise, it's deduced from the field's name by converting it to camelCase.",
          "type": "string"
        },
        "typeName": {
          "type": "string",
          "description": "For message and enum types, this is the name of the type. If the name starts with a '.', it is fully-qualified. Otherwise, C++-like scoping rules are used to find the type (i.e. first the nested types within this message are searched, then within the parent, on up to the root namespace)."
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_DOUBLE",
            "TYPE_FLOAT",
            "TYPE_INT64",
            "TYPE_UINT64",
            "TYPE_INT32",
            "TYPE_FIXED64",
            "TYPE_FIXED32",
            "TYPE_BOOL",
            "TYPE_STRING",
            "TYPE_GROUP",
            "TYPE_MESSAGE",
            "TYPE_BYTES",
            "TYPE_UINT32",
            "TYPE_ENUM",
            "TYPE_SFIXED32",
            "TYPE_SFIXED64",
            "TYPE_SINT32",
            "TYPE_SINT64"
          ],
          "enumDescriptions": [
            "0 is reserved for errors. Order is weird for historical reasons.",
            "",
            "Not ZigZag encoded. Negative numbers take 10 bytes. Use TYPE_SINT64 if negative values are likely.",
            "",
            "Not ZigZag encoded. Negative numbers take 10 bytes. Use TYPE_SINT32 if negative values are likely.",
            "",
            "",
            "",
            "",
            "Tag-delimited aggregate. Group type is deprecated and not supported in proto3. However, Proto3 implementations should still be able to parse the group wire format and treat group fields as unknown fields.",
            "Length-delimited aggregate.",
            "New in version 2.",
            "",
            "",
            "",
            "",
            "Uses ZigZag encoding.",
            "Uses ZigZag encoding."
          ],
          "description": "If type_name is set, this need not be set. If both this and type_name are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."
        }
      },
      "description": "Describes a field within a message."
    },
    "GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription": {
      "properties": {
        "noticeValue": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The value of the field that has a notice. When setting the field to this value, the user may be required to acknowledge the notice message in order for the value to be set."
        },
        "noticeMessage": {
          "type": "string",
          "description": "Output only. The notice message associate with the value of the field.",
          "readOnly": true
        },
        "field": {
          "description": "Output only. The field name associated with the notice.",
          "type": "string",
          "readOnly": true
        },
        "acknowledgementRequired": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the user needs to acknowledge the notice message before the value can be set."
        }
      },
      "description": "Provides special notice messages related to a particular value in a field that is part of a PolicySchema.",
      "id": "GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription",
      "type": "object"
    },
    "Proto2OneofDescriptorProto": {
      "type": "object",
      "id": "Proto2OneofDescriptorProto",
      "description": "Describes a oneof.",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "GoogleChromePolicyVersionsV1PolicySchemaFieldDescription": {
      "id": "GoogleChromePolicyVersionsV1PolicySchemaFieldDescription",
      "properties": {
        "field": {
          "description": "Output only. The name of the field for associated with this description.",
          "type": "string",
          "readOnly": true
        },
        "knownValueDescriptions": {
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. If the field has a set of known values, this field will provide a description for these values."
        },
        "defaultValue": {
          "readOnly": true,
          "description": "Output only. Client default if the policy is unset.",
          "type": "any"
        },
        "requiredItems": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1PolicySchemaRequiredItems"
          },
          "description": "Output only. Provides a list of fields that are required to be set if this field has a certain value.",
          "readOnly": true
        },
        "description": {
          "description": "Deprecated. Use name and field_description instead. The description for the field.",
          "type": "string"
        },
        "fieldDescription": {
          "type": "string",
          "description": "Output only. The description of the field.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the field.",
          "type": "string"
        },
        "fieldDependencies": {
          "readOnly": true,
          "description": "Output only. Provides a list of fields and values. At least one of the fields must have the corresponding value in order for this field to be allowed to be set.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies"
          }
        },
        "inputConstraint": {
          "description": "Output only. Any input constraints associated on the values for the field.",
          "readOnly": true,
          "type": "string"
        },
        "nestedFieldDescriptions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1PolicySchemaFieldDescription"
          },
          "description": "Output only. Provides the description of the fields nested in this field, if the field is a message type that defines multiple fields."
        }
      },
      "description": "Provides detailed information for a particular field that is part of a PolicySchema.",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails": {
      "type": "object",
      "properties": {
        "certificateReferences": {
          "description": "Output only. If the certificate was not removed, a list of references to the certificate that prevented it from being removed. Only unreferenced certificates can be removed.",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1CertificateReference"
          },
          "type": "array",
          "readOnly": true
        }
      },
      "description": "Details of the errors encountered during a remove certificate request. This message will be returned as part of the details of a google.rpc.Status returned to the user when there is an error in their request.",
      "id": "GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails"
    },
    "GoogleChromePolicyVersionsV1ResolveResponse": {
      "description": "Response message for getting the resolved policy value for a specific target.",
      "properties": {
        "nextPageToken": {
          "description": "The page token used to get the next set of resolved policies found by the request.",
          "type": "string"
        },
        "resolvedPolicies": {
          "type": "array",
          "description": "The list of resolved policies found by the resolve request.",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1ResolvedPolicy"
          }
        }
      },
      "id": "GoogleChromePolicyVersionsV1ResolveResponse",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1DefineCertificateResponse": {
      "type": "object",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "The guid of the certificate created by the action."
        },
        "settings": {
          "description": "the affiliated settings of the certificate (NOT IMPLEMENTED)",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1NetworkSetting"
          },
          "type": "array"
        },
        "targetResource": {
          "description": "the resource at which the certificate is defined.",
          "type": "string"
        }
      },
      "description": "Response object for creating a certificate.",
      "id": "GoogleChromePolicyVersionsV1DefineCertificateResponse"
    },
    "Proto2EnumValueDescriptorProto": {
      "properties": {
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "description": "Describes a value within an enum.",
      "type": "object",
      "id": "Proto2EnumValueDescriptorProto"
    },
    "GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription": {
      "description": "Provides detailed information about a known value that is allowed for a particular field in a PolicySchema.",
      "type": "object",
      "id": "GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription",
      "properties": {
        "description": {
          "description": "Output only. Additional description for this value.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Output only. The string represenstation of the value that can be set for the field.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleChromePolicyVersionsV1RemoveCertificateRequest": {
      "id": "GoogleChromePolicyVersionsV1RemoveCertificateRequest",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Required. The GUID of the certificate to remove."
        },
        "targetResource": {
          "description": "Required. The target resource on which this certificate will be removed. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\")",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request object for removing a certificate."
    },
    "GoogleChromePolicyVersionsV1DefineNetworkRequest": {
      "description": "Request object for creating a new network.",
      "properties": {
        "settings": {
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1NetworkSetting"
          },
          "description": "Required. Detailed network settings.",
          "type": "array"
        },
        "name": {
          "description": "Required. Name of the new created network.",
          "type": "string"
        },
        "targetResource": {
          "type": "string",
          "description": "Required. The target resource on which this new network will be defined. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\")"
        }
      },
      "type": "object",
      "id": "GoogleChromePolicyVersionsV1DefineNetworkRequest"
    },
    "ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description about current life cycle."
        },
        "endSupport": {
          "$ref": "GoogleTypeDate",
          "description": "End supporting date for current policy."
        },
        "policyApiLifecycleStage": {
          "enum": [
            "API_UNSPECIFIED",
            "API_PREVIEW",
            "API_DEVELOPMENT",
            "API_CURRENT",
            "API_DEPRECATED"
          ],
          "type": "string",
          "enumDescriptions": [
            "unspecified.",
            "Policy is not working yet, but giving developers heads up on format. This stage can transfer to API_DEVELOPEMNT or API_CURRENT.",
            "Policy can change format in backward incompatible way (breaking change). This stage can transfer to API_CURRENT or API_DEPRECATED. This could be used for policies launched only to TTs or launched to selected customers for emergency usage.",
            "Policy in official format. Policy can change format in backward compatible way (non-breaking change). Example: this policy can introduce a new field, which is considered non-breaking change, when field masks are properly utilized. This stage can transfer to API_DEPRECATED.",
            "Please stop using this policy. This policy is deprecated and may/will be removed in the future. Most likely a new policy was introduced to replace this one."
          ],
          "description": "Indicate current life cycle stage of the policy API."
        }
      },
      "id": "ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle",
      "type": "object"
    },
    "Proto2FileDescriptorProto": {
      "description": "Describes a complete .proto file.",
      "id": "Proto2FileDescriptorProto",
      "type": "object",
      "properties": {
        "messageType": {
          "items": {
            "$ref": "Proto2DescriptorProto"
          },
          "type": "array",
          "description": "All top-level definitions in this file."
        },
        "syntax": {
          "type": "string",
          "description": "The syntax of the proto file. The supported values are \"proto2\", \"proto3\", and \"editions\". If `edition` is present, this value must be \"editions\"."
        },
        "package": {
          "description": "e.g. \"foo\", \"foo.bar\", etc.",
          "type": "string"
        },
        "enumType": {
          "type": "array",
          "items": {
            "$ref": "Proto2EnumDescriptorProto"
          }
        },
        "name": {
          "type": "string",
          "description": "file name, relative to root of source tree"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest": {
      "properties": {
        "requests": {
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest"
          },
          "type": "array",
          "description": "List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. "
        }
      },
      "id": "GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest",
      "description": "Request message for modifying multiple policy values for a specific target.",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest": {
      "type": "object",
      "id": "GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest",
      "description": "Request message for updating the group priority ordering of an app.",
      "properties": {
        "groupIds": {
          "type": "array",
          "description": "Required. The group IDs, in desired priority ordering.",
          "items": {
            "type": "string"
          }
        },
        "policyTargetKey": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey",
          "description": "Required. The key of the target for which we want to update the group priority ordering. The target resource must point to an app."
        },
        "policyNamespace": {
          "type": "string",
          "description": "Required. The namespace of the policy type for the request."
        }
      }
    },
    "GoogleChromePolicyVersionsV1ResolvedPolicy": {
      "properties": {
        "value": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyValue",
          "readOnly": true,
          "description": "Output only. The resolved value of the policy."
        },
        "targetKey": {
          "description": "Output only. The target resource for which the resolved policy value applies.",
          "readOnly": true,
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey"
        },
        "addedSourceKey": {
          "description": "Output only. The added source key establishes at which level an entity was explicitly added for management. This is useful for certain type of policies that are only applied if they are explicitly added for management. For example: apps and networks. An entity can only be deleted from management in an Organizational Unit that it was explicitly added to. If this is not present it means that the policy is managed without the need to explicitly add an entity, for example: standard user or device policies.",
          "readOnly": true,
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey"
        },
        "sourceKey": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey",
          "description": "Output only. The source resource from which this policy value is obtained. May be the same as `targetKey` if the policy is directly modified on the target, otherwise it would be another resource from which the policy gets its value (if applicable). If not present, the source is the default value for the customer.",
          "readOnly": true
        }
      },
      "description": "The resolved value of a policy for a given target.",
      "id": "GoogleChromePolicyVersionsV1ResolvedPolicy",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse": {
      "id": "GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse",
      "properties": {
        "groupIds": {
          "items": {
            "type": "string"
          },
          "description": "Output only. The group IDs, in priority ordering.",
          "readOnly": true,
          "type": "array"
        },
        "policyTargetKey": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey",
          "description": "Output only. The target resource for which the group priority ordering has been retrieved.",
          "readOnly": true
        },
        "policyNamespace": {
          "readOnly": true,
          "description": "Output only. The namespace of the policy type of the group IDs.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for listing the group priority ordering of an app."
    },
    "GoogleChromePolicyVersionsV1UploadPolicyFileRequest": {
      "description": "Request message for uploading a file for a policy.",
      "type": "object",
      "properties": {
        "policyField": {
          "description": "Required. The fully qualified policy schema and field name this file is uploaded for. This information will be used to validate the content type of the file.",
          "type": "string"
        }
      },
      "id": "GoogleChromePolicyVersionsV1UploadPolicyFileRequest"
    },
    "GoogleChromePolicyVersionsV1ResolveRequest": {
      "properties": {
        "pageToken": {
          "description": "The page token used to retrieve a specific page of the request.",
          "type": "string"
        },
        "policySchemaFilter": {
          "description": "The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/policy/guides/policy-schemas for details on schema namespaces. For example: Valid: \"chrome.users.*\", \"chrome.users.apps.*\", \"chrome.printers.*\" Invalid: \"*\", \"*.users\", \"chrome.*\", \"chrome.*.apps.*\"",
          "type": "string"
        },
        "policyTargetKey": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey",
          "description": "Required. The key of the target resource on which the policies should be resolved. The target resource must point to an Org Unit."
        },
        "pageSize": {
          "type": "integer",
          "description": "The maximum number of policies to return, defaults to 100 and has a maximum of 1000.",
          "format": "int32"
        }
      },
      "description": "Request message for getting the resolved policy value for a specific target.",
      "id": "GoogleChromePolicyVersionsV1ResolveRequest",
      "type": "object"
    },
    "GoogleTypeDate": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "id": "GoogleTypeDate",
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        }
      }
    },
    "GoogleChromePolicyVersionsV1DefineCertificateRequest": {
      "id": "GoogleChromePolicyVersionsV1DefineCertificateRequest",
      "description": "Request object for creating a certificate.",
      "type": "object",
      "properties": {
        "settings": {
          "description": "Optional. Certificate settings within the chrome.networks.certificates namespace.",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1NetworkSetting"
          },
          "type": "array"
        },
        "ceritificateName": {
          "type": "string",
          "description": "Optional. The optional name of the certificate. If not specified, the certificate issuer will be used as the name."
        },
        "certificate": {
          "description": "Required. The raw contents of the .PEM, .CRT, or .CER file.",
          "type": "string"
        },
        "targetResource": {
          "type": "string",
          "description": "Required. The target resource on which this certificate is applied. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\")"
        }
      }
    },
    "GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "description": "List of policies that will be deleted as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to a group resource. 3. All `policyTargetKey` values must have the same `app_id` key name in the `additionalTargetKeys`. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. ",
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest"
          }
        }
      },
      "description": "Request message for specifying that multiple policy values will be deleted.",
      "id": "GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest"
    },
    "GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest": {
      "properties": {
        "requests": {
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest"
          },
          "type": "array",
          "description": "List of policies that have to inherit their values as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. "
        }
      },
      "id": "GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest",
      "description": "Request message for specifying that multiple policy values inherit their value from their parents.",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1PolicyModificationFieldError": {
      "id": "GoogleChromePolicyVersionsV1PolicyModificationFieldError",
      "description": "Error information for a modification request of a specific field on a specific policy.",
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Output only. The error message related to the field.",
          "readOnly": true
        },
        "field": {
          "description": "Output only. The name of the field with the error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleChromePolicyVersionsV1AdditionalTargetKeyName": {
      "properties": {
        "keyDescription": {
          "type": "string",
          "description": "Key description."
        },
        "key": {
          "type": "string",
          "description": "Key name."
        }
      },
      "id": "GoogleChromePolicyVersionsV1AdditionalTargetKeyName",
      "description": "Additional key names that will be used to identify the target of the policy value.",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest": {
      "properties": {
        "policySchema": {
          "description": "The fully qualified name of the policy schema that is being inherited.",
          "type": "string"
        },
        "policyTargetKey": {
          "description": "Required. The key of the target for which we want to modify a policy. The target resource must point to a Group.",
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey"
        }
      },
      "description": "Request parameters for deleting the policy value of a specific group target.",
      "type": "object",
      "id": "GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest"
    },
    "GoogleChromePolicyVersionsV1ListPolicySchemasResponse": {
      "id": "GoogleChromePolicyVersionsV1ListPolicySchemasResponse",
      "type": "object",
      "properties": {
        "policySchemas": {
          "items": {
            "$ref": "GoogleChromePolicyVersionsV1PolicySchema"
          },
          "description": "The list of policy schemas that match the query.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token used to get the next page of policy schemas."
        }
      },
      "description": "Response message for listing policy schemas that match a filter."
    },
    "GoogleChromePolicyVersionsV1UploadPolicyFileResponse": {
      "description": "Response message for downloading an uploaded file.",
      "properties": {
        "downloadUri": {
          "description": "The uri for end user to download the file.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleChromePolicyVersionsV1UploadPolicyFileResponse"
    },
    "GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest": {
      "description": "Request parameters for inheriting policy value of a specific org unit target from the policy value of its parent org unit.",
      "properties": {
        "policySchema": {
          "description": "The fully qualified name of the policy schema that is being inherited.",
          "type": "string"
        },
        "policyTargetKey": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey",
          "description": "Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit."
        }
      },
      "id": "GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest",
      "type": "object"
    },
    "GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies": {
      "type": "object",
      "description": "The field and the value it must have for another field to be allowed to be set.",
      "id": "GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies",
      "properties": {
        "sourceFieldValue": {
          "description": "The value which the source field must have for this field to be allowed to be set.",
          "type": "string"
        },
        "sourceField": {
          "type": "string",
          "description": "The source field which this field depends on."
        }
      }
    },
    "GoogleChromePolicyVersionsV1RemoveCertificateResponse": {
      "id": "GoogleChromePolicyVersionsV1RemoveCertificateResponse",
      "type": "object",
      "description": "Response object for removing a certificate.",
      "properties": {}
    },
    "GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest": {
      "id": "GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest",
      "properties": {
        "updateMask": {
          "description": "Required. Policy fields to update. Only fields in this mask will be updated; other fields in `policy_value` will be ignored (even if they have values). If a field is in this list it must have a value in 'policy_value'.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "policyTargetKey": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyTargetKey",
          "description": "Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit."
        },
        "policyValue": {
          "$ref": "GoogleChromePolicyVersionsV1PolicyValue",
          "description": "The new value for the policy."
        }
      },
      "type": "object",
      "description": "Request parameters for modifying a policy value for a specific org unit target."
    }
  }
}
