{
  "schemas": {
    "SqlserverValidationValidationDetail": {
      "type": "object",
      "properties": {
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The pairs of metrics data: field name & field value."
        },
        "type": {
          "description": "The Sqlserver system that the validation data is from.",
          "type": "string",
          "enum": [
            "SQLSERVER_VALIDATION_TYPE_UNSPECIFIED",
            "OS",
            "DB"
          ],
          "enumDescriptions": [
            "Unspecified type.",
            "The Sqlserver system named OS",
            "The Sqlserver system named DB"
          ]
        },
        "instanceId": {
          "type": "string",
          "description": "The instance id where the ValidationDetail is generated from"
        }
      },
      "id": "SqlserverValidationValidationDetail",
      "description": "Message describing the Sqlserver validation metrics."
    },
    "ExecutionResult": {
      "properties": {
        "violationMessage": {
          "description": "the violation message of an execution",
          "type": "string"
        },
        "documentationUrl": {
          "description": "the document url of the rule",
          "type": "string"
        },
        "violationDetails": {
          "$ref": "ViolationDetails",
          "description": "the details of violation in result"
        },
        "rule": {
          "type": "string",
          "description": "the rule which violate in execution"
        },
        "severity": {
          "description": "severity of violation",
          "type": "string"
        },
        "resource": {
          "$ref": "Resource",
          "description": "the violate resource"
        }
      },
      "description": "Message describing the result of an execution",
      "type": "object",
      "id": "ExecutionResult"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "description": "the service account accosiate with resource",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "the type of reresource"
        },
        "name": {
          "description": "the name of the resource",
          "type": "string"
        }
      },
      "description": "Message represent resource in execution result",
      "id": "Resource"
    },
    "SapDiscoveryComponent": {
      "type": "object",
      "properties": {
        "hostProject": {
          "description": "Pantheon Project in which the resources reside.",
          "type": "string"
        },
        "databaseType": {
          "type": "string",
          "description": "The component is a SAP database."
        },
        "applicationType": {
          "description": "The component is a SAP application.",
          "type": "string"
        },
        "resources": {
          "description": "The resources in a component.",
          "items": {
            "$ref": "SapDiscoveryResource"
          },
          "type": "array"
        },
        "sid": {
          "description": "The sap identifier, used by the SAP software and helps differentiate systems for customers.",
          "type": "string"
        }
      },
      "description": "Message describing the system component.",
      "id": "SapDiscoveryComponent"
    },
    "SapDiscoveryMetadata": {
      "type": "object",
      "properties": {
        "definedSystem": {
          "type": "string",
          "description": "Customer defined, something like \"E-commerce pre prod\""
        },
        "sapProduct": {
          "type": "string",
          "description": "This sap product name"
        },
        "environmentType": {
          "description": "Should be \"prod\", \"QA\", \"dev\", \"staging\", etc.",
          "type": "string"
        },
        "customerRegion": {
          "description": "Customer region string for customer's use. Does not represent GCP region.",
          "type": "string"
        }
      },
      "id": "SapDiscoveryMetadata",
      "description": "Message describing SAP discovery system metadata"
    },
    "ListExecutionResultsResponse": {
      "description": "Message for response of list execution results",
      "id": "ListExecutionResultsResponse",
      "properties": {
        "executionResults": {
          "items": {
            "$ref": "ExecutionResult"
          },
          "type": "array",
          "description": "The versions from the specified publisher."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SapDiscovery": {
      "id": "SapDiscovery",
      "properties": {
        "applicationLayer": {
          "$ref": "SapDiscoveryComponent",
          "description": "An SAP system may run without an application layer."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Unix timestamp this system has been updated last."
        },
        "systemId": {
          "description": "A combination of database SID, database instance URI and tenant DB name to make a unique identifier per-system.",
          "type": "string"
        },
        "databaseLayer": {
          "description": "An SAP System must have a database.",
          "$ref": "SapDiscoveryComponent"
        },
        "metadata": {
          "$ref": "SapDiscoveryMetadata",
          "description": "The metadata for SAP system discovery data."
        }
      },
      "type": "object",
      "description": "The schema of SAP system discovery data."
    },
    "GceInstanceFilter": {
      "description": "Message describing compute engine instance filter",
      "type": "object",
      "properties": {
        "serviceAccounts": {
          "description": "Service account of compute engine",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GceInstanceFilter"
    },
    "Evaluation": {
      "type": "object",
      "description": "Message describing Evaluation object",
      "id": "Evaluation",
      "properties": {
        "ruleVersions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. [Output only] The updated rule ids if exist."
        },
        "ruleNames": {
          "type": "array",
          "description": "the name of the rule",
          "items": {
            "type": "string"
          }
        },
        "resourceFilter": {
          "description": "annotations as key value pairs",
          "$ref": "ResourceFilter"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "description": {
          "type": "string",
          "description": "Description of the Evaluation"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. [Output only] Update time stamp",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "name of resource names have the form 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. [Output only] Create time stamp"
        },
        "resourceStatus": {
          "$ref": "ResourceStatus",
          "description": "Output only. [Output only] The updated rule ids if exist.",
          "readOnly": true
        },
        "schedule": {
          "description": "crontab format schedule for scheduled evaluation, example: 0 */3 * * *",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object"
    },
    "ListExecutionsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "executions": {
          "type": "array",
          "items": {
            "$ref": "Execution"
          },
          "description": "The list of Execution"
        }
      },
      "type": "object",
      "description": "Message for response to listing Executions",
      "id": "ListExecutionsResponse"
    },
    "WriteInsightResponse": {
      "properties": {},
      "id": "WriteInsightResponse",
      "type": "object",
      "description": "The response for write insights request."
    },
    "SapValidationValidationDetail": {
      "type": "object",
      "id": "SapValidationValidationDetail",
      "description": "Message describing the SAP validation metrics.",
      "properties": {
        "sapValidationType": {
          "enumDescriptions": [
            "Unspecified type.",
            "The SAP system named SYSTEM.",
            "The SAP system named COROSYNC.",
            "The SAP system named PACEMAKER.",
            "The SAP system named HANA.",
            "The SAP system named NETWEAVER."
          ],
          "description": "The SAP system that the validation data is from.",
          "enum": [
            "SAP_VALIDATION_TYPE_UNSPECIFIED",
            "SYSTEM",
            "COROSYNC",
            "PACEMAKER",
            "HANA",
            "NETWEAVER"
          ],
          "type": "string"
        },
        "details": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The pairs of metrics data: field name & field value."
        }
      }
    },
    "ResourceFilter": {
      "type": "object",
      "id": "ResourceFilter",
      "description": "Message describing resource filters",
      "properties": {
        "gceInstanceFilter": {
          "description": "Filter compute engine resource",
          "$ref": "GceInstanceFilter"
        },
        "resourceIdPatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The id pattern for filter resource"
        },
        "scopes": {
          "type": "array",
          "description": "The scopes of evaluation resource",
          "items": {
            "type": "string"
          }
        },
        "inclusionLabels": {
          "type": "object",
          "description": "The label used for filter resource",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ScannedResource": {
      "type": "object",
      "id": "ScannedResource",
      "description": "Message of scanned resource",
      "properties": {
        "resource": {
          "type": "string",
          "description": "resource name"
        }
      }
    },
    "ResourceStatus": {
      "id": "ResourceStatus",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING"
          ],
          "description": "State of the resource",
          "enumDescriptions": [
            "The state has not been populated in this message.",
            "Resource has an active Create operation.",
            "Resource has no outstanding operations on it or has active Update operations.",
            "Resource has an active Delete operation."
          ],
          "type": "string"
        },
        "rulesNewerVersions": {
          "description": "the new version of rule id if exists",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Message describing resource status"
    },
    "RunEvaluationRequest": {
      "properties": {
        "execution": {
          "$ref": "Execution",
          "description": "Required. The resource being created"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "executionId": {
          "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and execution_id from the method_signature of Create RPC",
          "type": "string"
        }
      },
      "id": "RunEvaluationRequest",
      "description": "Message for creating a Execution",
      "type": "object"
    },
    "ListEvaluationsResponse": {
      "type": "object",
      "id": "ListEvaluationsResponse",
      "description": "Message for response to listing Evaluations",
      "properties": {
        "evaluations": {
          "items": {
            "$ref": "Evaluation"
          },
          "type": "array",
          "description": "The list of Evaluation"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      }
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      }
    },
    "OperationMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata"
    },
    "Insight": {
      "properties": {
        "sentTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. [Output only] Create time stamp",
          "type": "string"
        },
        "sapValidation": {
          "$ref": "SapValidation",
          "description": "The insights data for the sap workload validation."
        },
        "sapDiscovery": {
          "$ref": "SapDiscovery",
          "description": "The insights data for sap system discovery. This is a copy of SAP System proto and should get updated whenever that one changes."
        },
        "sqlserverValidation": {
          "$ref": "SqlserverValidation",
          "description": "The insights data for the sqlserver workload validation."
        }
      },
      "description": "A presentation of host resource usage where the workload runs.",
      "type": "object",
      "id": "Insight"
    },
    "ViolationDetails": {
      "properties": {
        "observed": {
          "type": "object",
          "description": "observed",
          "additionalProperties": {
            "type": "string"
          }
        },
        "asset": {
          "type": "string",
          "description": "the name of asset"
        },
        "serviceAccount": {
          "type": "string",
          "description": "the service account associate with resource"
        }
      },
      "description": "Message describing the violdation in execution result",
      "id": "ViolationDetails",
      "type": "object"
    },
    "ListScannedResourcesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "scannedResources": {
          "type": "array",
          "items": {
            "$ref": "ScannedResource"
          },
          "description": "All scanned resources in response"
        }
      },
      "description": "Message for response to list scanned resources",
      "type": "object",
      "id": "ListScannedResourcesResponse"
    },
    "SqlserverValidation": {
      "properties": {
        "validationDetails": {
          "items": {
            "$ref": "SqlserverValidationValidationDetail"
          },
          "type": "array",
          "description": "A list of SqlServer validation metrics data."
        },
        "agentVersion": {
          "type": "string",
          "description": "The agent version collected this data point"
        }
      },
      "description": "A presentation of SQLServer workload insight. The schema of SqlServer workloads validation related data.",
      "type": "object",
      "id": "SqlserverValidation"
    },
    "SapDiscoveryResource": {
      "type": "object",
      "id": "SapDiscoveryResource",
      "description": "Message describing a resource.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Unix timestamp of when this resource last had its discovery data updated."
        },
        "relatedResources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of resource URIs related to this resource."
        },
        "resourceKind": {
          "type": "string",
          "description": "ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc."
        },
        "resourceUri": {
          "description": "URI of the resource, includes project, location, and name.",
          "type": "string"
        },
        "resourceType": {
          "enumDescriptions": [
            "Undefined resource type.",
            "This is a compute resource.",
            "This a storage resource.",
            "This is a network resource."
          ],
          "type": "string",
          "description": "The type of this resource.",
          "enum": [
            "RESOURCE_TYPE_UNSPECIFIED",
            "COMPUTE",
            "STORAGE",
            "NETWORK"
          ]
        }
      }
    },
    "Status": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "ListRulesResponse": {
      "id": "ListRulesResponse",
      "description": "Mesesage of response of list rules",
      "type": "object",
      "properties": {
        "rules": {
          "items": {
            "$ref": "Rule"
          },
          "description": "all rules in response",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    "SapValidation": {
      "description": "A presentation of SAP workload insight. The schema of SAP workloads validation related data.",
      "type": "object",
      "id": "SapValidation",
      "properties": {
        "validationDetails": {
          "items": {
            "$ref": "SapValidationValidationDetail"
          },
          "type": "array",
          "description": "A list of SAP validation metrics data."
        }
      }
    },
    "WriteInsightRequest": {
      "type": "object",
      "description": "Request for sending the data insights.",
      "id": "WriteInsightRequest",
      "properties": {
        "insight": {
          "description": "Required. The metrics data details.",
          "$ref": "Insight"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "Rule": {
      "description": "Message represent a rule",
      "properties": {
        "primaryCategory": {
          "description": "the primary category",
          "type": "string"
        },
        "name": {
          "description": "rule name",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "the docuement url for the rule"
        },
        "secondaryCategory": {
          "type": "string",
          "description": "the secondary category"
        },
        "revisionId": {
          "type": "string",
          "description": "Output only. the version of the rule",
          "readOnly": true
        },
        "displayName": {
          "description": "the name display in UI",
          "type": "string"
        },
        "remediation": {
          "description": "the remediation for the rule",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "descrite rule in plain language"
        },
        "errorMessage": {
          "type": "string",
          "description": "the message template for rule"
        },
        "severity": {
          "description": "the severity of the rule",
          "type": "string"
        }
      },
      "id": "Rule",
      "type": "object"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "type": "object",
      "properties": {}
    },
    "Execution": {
      "properties": {
        "startTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. [Output only] Start time stamp",
          "type": "string"
        },
        "runType": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "ONE_TIME",
            "SCHEDULED"
          ],
          "enumDescriptions": [
            "type of execution is unspecified",
            "type of execution is one time",
            "type of execution is scheduled"
          ],
          "type": "string",
          "description": "type represent whether the execution executed directly by user or scheduled according evaluation.schedule field."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. [Output only] End time stamp"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. [Output only] State",
          "enumDescriptions": [
            "state of execution is unspecified",
            "the execution is running in backend service",
            "the execution run success",
            "the execution run failed"
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "evaluationId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. [Output only] Evaluation ID"
        },
        "name": {
          "description": "The name of execution resource. The format is projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}",
          "type": "string"
        },
        "inventoryTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. [Output only] Inventory time stamp",
          "type": "string"
        }
      },
      "id": "Execution",
      "type": "object",
      "description": "Message describing Execution object"
    }
  },
  "baseUrl": "https://workloadmanager.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "revision": "20230503",
  "title": "Workload Manager API",
  "basePath": "",
  "ownerName": "Google",
  "protocol": "rest",
  "id": "workloadmanager:v1",
  "version_module": true,
  "canonicalName": "Workload Manager",
  "description": "",
  "version": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://workloadmanager.googleapis.com/",
  "documentationLink": "https://cloud.google.com/workload-manager/docs",
  "name": "workloadmanager",
  "discoveryVersion": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "parameters": {
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "mtlsRootUrl": "https://workloadmanager.mtls.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "id": "workloadmanager.projects.locations.get",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1/{+name}"
            },
            "list": {
              "parameters": {
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1/projects/{projectsId}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "workloadmanager.projects.locations.list",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}/locations"
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "path": "v1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation's parent resource."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size."
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "id": "workloadmanager.projects.locations.operations.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  }
                },
                "cancel": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "workloadmanager.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "get": {
                  "path": "v1/{+name}",
                  "id": "workloadmanager.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "id": "workloadmanager.projects.locations.operations.delete",
                  "path": "v1/{+name}"
                }
              }
            },
            "evaluations": {
              "resources": {
                "executions": {
                  "methods": {
                    "list": {
                      "description": "Lists Executions in a given project and location.",
                      "id": "workloadmanager.projects.locations.evaluations.executions.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+$",
                          "location": "path",
                          "description": "Required. The resource prefix of the Execution using the form: 'projects/{project}/locations/{location}/evaluations/{evaluation}'",
                          "required": true
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "description": "Filtering results",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions",
                      "path": "v1/{+parent}/executions",
                      "response": {
                        "$ref": "ListExecutionsResponse"
                      }
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}",
                      "response": {
                        "$ref": "Execution"
                      },
                      "id": "workloadmanager.projects.locations.evaluations.executions.get",
                      "httpMethod": "GET",
                      "description": "Gets details of a single Execution.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the resource",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+/executions/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}"
                    },
                    "run": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions:run",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+$",
                          "description": "Required. The resource name of the Execution using the form: 'projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}'",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "RunEvaluationRequest"
                      },
                      "path": "v1/{+name}/executions:run",
                      "httpMethod": "POST",
                      "id": "workloadmanager.projects.locations.evaluations.executions.run",
                      "description": "Creates a new Execution in a given project and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  },
                  "resources": {
                    "results": {
                      "methods": {
                        "list": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}/results",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "List the running result of a single Execution.",
                          "path": "v1/{+parent}/results",
                          "response": {
                            "$ref": "ListExecutionResultsResponse"
                          },
                          "id": "workloadmanager.projects.locations.evaluations.executions.results.list",
                          "httpMethod": "GET",
                          "parameters": {
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A token identifying a page of results the server should return."
                            },
                            "pageSize": {
                              "type": "integer",
                              "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                              "location": "query",
                              "format": "int32"
                            },
                            "parent": {
                              "required": true,
                              "type": "string",
                              "description": "Required. The execution results. Format: {parent}/evaluations/*/executions/*/results",
                              "pattern": "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+/executions/[^/]+$",
                              "location": "path"
                            },
                            "filter": {
                              "description": "Filtering results",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ]
                        }
                      }
                    },
                    "scannedResources": {
                      "methods": {
                        "list": {
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}/scannedResources",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/scannedResources",
                          "id": "workloadmanager.projects.locations.evaluations.executions.scannedResources.list",
                          "description": "List all scanned resources for a single Execution.",
                          "parameters": {
                            "rule": {
                              "location": "query",
                              "description": "rule name",
                              "type": "string"
                            },
                            "pageSize": {
                              "type": "integer",
                              "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                              "format": "int32",
                              "location": "query"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A token identifying a page of results the server should return."
                            },
                            "orderBy": {
                              "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                              "type": "string",
                              "location": "query"
                            },
                            "filter": {
                              "type": "string",
                              "description": "Filtering results",
                              "location": "query"
                            },
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+/executions/[^/]+$",
                              "description": "Required. parent for ListScannedResourcesRequest",
                              "type": "string",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListScannedResourcesResponse"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "description": "Lists Evaluations in a given project and location.",
                  "parameters": {
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListEvaluationsRequest",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations",
                  "path": "v1/{+parent}/evaluations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "workloadmanager.projects.locations.evaluations.list",
                  "response": {
                    "$ref": "ListEvaluationsResponse"
                  }
                },
                "get": {
                  "id": "workloadmanager.projects.locations.evaluations.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/evaluations/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Evaluation"
                  },
                  "description": "Gets details of a single Evaluation.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "path": "v1/{+parent}/evaluations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new Evaluation in a given project and location.",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource prefix of the evaluation location using the form: `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "evaluationId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Id of the requesting object"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/evaluations",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "workloadmanager.projects.locations.evaluations.create",
                  "request": {
                    "$ref": "Evaluation"
                  }
                }
              }
            },
            "rules": {
              "methods": {
                "list": {
                  "description": "Lists rules in a given project.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/rules",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "workloadmanager.projects.locations.rules.list",
                  "response": {
                    "$ref": "ListRulesResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/rules",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The [project] on which to execute the request. The format is: projects/{project_id}/locations/{location} Currently, the pre-defined rules are global available to all projects and all regions",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filter based on primary_category, secondary_category",
                      "location": "query",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "insights": {
              "methods": {
                "writeInsight": {
                  "description": "Write the data insights to workload manager data warehouse.",
                  "response": {
                    "$ref": "WriteInsightResponse"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "location": {
                      "description": "Required. The GCP location. The format is: projects/{project}/locations/{location}.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insights:writeInsight",
                  "path": "v1/{+location}/insights:writeInsight",
                  "parameterOrder": [
                    "location"
                  ],
                  "request": {
                    "$ref": "WriteInsightRequest"
                  },
                  "id": "workloadmanager.projects.locations.insights.writeInsight"
                }
              }
            }
          }
        }
      }
    }
  }
}
