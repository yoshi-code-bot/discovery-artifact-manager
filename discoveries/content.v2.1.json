{
  "schemas": {
    "OrderLineItemShippingDetailsMethod": {
      "type": "object",
      "id": "OrderLineItemShippingDetailsMethod",
      "properties": {
        "methodName": {
          "description": "Required. The name of the shipping method.",
          "type": "string"
        },
        "maxDaysInTransit": {
          "description": "Required. Maximum transit time.",
          "format": "uint32",
          "type": "integer"
        },
        "carrier": {
          "type": "string",
          "description": "The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values."
        },
        "minDaysInTransit": {
          "type": "integer",
          "format": "uint32",
          "description": "Required. Minimum transit time."
        }
      }
    },
    "ListRepricingRulesResponse": {
      "id": "ListRepricingRulesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "repricingRules": {
          "type": "array",
          "items": {
            "$ref": "RepricingRule"
          },
          "description": "The rules from the specified merchant."
        }
      },
      "description": "Response message for the `ListRepricingRules` method."
    },
    "DatafeedTarget": {
      "type": "object",
      "properties": {
        "includedDestinations": {
          "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`."
        },
        "excludedDestinations": {
          "items": {
            "type": "string"
          },
          "description": "The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center).",
          "type": "array"
        },
        "country": {
          "type": "string",
          "description": "The country where the items in the feed will be included in the search index, represented as a CLDR territory code."
        }
      },
      "id": "DatafeedTarget"
    },
    "AccountIdentifier": {
      "properties": {
        "aggregatorId": {
          "description": "The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).",
          "format": "uint64",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The merchant account ID, set for individual accounts and subaccounts."
        }
      },
      "id": "AccountIdentifier",
      "type": "object"
    },
    "Row": {
      "properties": {
        "cells": {
          "description": "The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required.",
          "type": "array",
          "items": {
            "$ref": "Value"
          }
        }
      },
      "type": "object",
      "id": "Row"
    },
    "LinkService": {
      "type": "object",
      "id": "LinkService",
      "properties": {
        "service": {
          "description": "Service provided to or by the linked account. Acceptable values are: - \"`shoppingActionsOrderManagement`\" - \"`shoppingActionsProductManagement`\" - \"`shoppingAdsProductManagement`\" - \"`paymentProcessing`\" ",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Status of the link Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        }
      }
    },
    "ProductDeliveryTimeAreaDeliveryTimeDeliveryTime": {
      "description": "A delivery time for this product.",
      "properties": {
        "minTransitTimeDays": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The minimum number of business days (inclusive) between when the product ships and when the product is delivered."
        },
        "maxTransitTimeDays": {
          "type": "integer",
          "description": "Required. The maximum number of business days (inclusive) between when the product ships and when the product is delivered.",
          "format": "int32"
        },
        "minHandlingTimeDays": {
          "description": "Required. The minimum number of business days (inclusive) between when an order is placed and when the product ships. If a product ships in the same day, set this value to 0.",
          "format": "int32",
          "type": "integer"
        },
        "maxHandlingTimeDays": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The maximum number of business days (inclusive) between when an order is placed and when the product ships. If a product ships in the same day, set this value to 0."
        }
      },
      "type": "object",
      "id": "ProductDeliveryTimeAreaDeliveryTimeDeliveryTime"
    },
    "OrdersGetTestOrderTemplateResponse": {
      "id": "OrdersGetTestOrderTemplateResponse",
      "properties": {
        "template": {
          "description": "The requested test order template.",
          "$ref": "TestOrder"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersGetTestOrderTemplateResponse`\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestOrderPickupDetailsPickupPerson": {
      "type": "object",
      "id": "TestOrderPickupDetailsPickupPerson",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Full name of the pickup person."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number of the person picking up the items."
        }
      }
    },
    "AccountsLinkRequest": {
      "type": "object",
      "id": "AccountsLinkRequest",
      "properties": {
        "paymentServiceProviderLinkInfo": {
          "$ref": "PaymentServiceProviderLinkInfo",
          "description": "Additional information required for `paymentServiceProvider` link type."
        },
        "eCommercePlatformLinkInfo": {
          "$ref": "ECommercePlatformLinkInfo",
          "description": "Additional information required for `eCommercePlatform` link type."
        },
        "services": {
          "description": " Acceptable values are: - \"`shoppingAdsProductManagement`\" - \"`shoppingActionsProductManagement`\" - \"`shoppingActionsOrderManagement`\" - \"`paymentProcessing`\" ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "linkedAccountId": {
          "type": "string",
          "description": "The ID of the linked account."
        },
        "action": {
          "type": "string",
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" "
        },
        "linkType": {
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" - \"`paymentServiceProvider`\" ",
          "type": "string"
        }
      }
    },
    "TestOrderDeliveryDetails": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the person receiving the delivery."
        },
        "isScheduledDelivery": {
          "description": "Whether the order is scheduled delivery order.",
          "type": "boolean"
        },
        "address": {
          "$ref": "TestOrderAddress",
          "description": "The delivery address"
        }
      },
      "id": "TestOrderDeliveryDetails"
    },
    "DatafeedStatusExample": {
      "id": "DatafeedStatusExample",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The ID of the example item."
        },
        "value": {
          "description": "The problematic value.",
          "type": "string"
        },
        "lineNumber": {
          "type": "string",
          "description": "Line number in the data feed where the example is found.",
          "format": "uint64"
        }
      },
      "description": "An example occurrence for a particular error.",
      "type": "object"
    },
    "RequestReviewBuyOnGoogleProgramRequest": {
      "id": "RequestReviewBuyOnGoogleProgramRequest",
      "properties": {},
      "description": "Request message for the RequestReviewProgram method.",
      "type": "object"
    },
    "PosDataProviders": {
      "id": "PosDataProviders",
      "properties": {
        "country": {
          "description": "Country code.",
          "type": "string"
        },
        "posDataProviders": {
          "description": "A list of POS data providers.",
          "items": {
            "$ref": "PosDataProvidersPosDataProvider"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DeliveryTime": {
      "id": "DeliveryTime",
      "properties": {
        "minHandlingTimeInDays": {
          "format": "uint32",
          "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.",
          "type": "integer"
        },
        "transitTimeTable": {
          "$ref": "TransitTable",
          "description": "Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both."
        },
        "maxTransitTimeInDays": {
          "format": "uint32",
          "description": "Maximum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.",
          "type": "integer"
        },
        "transitBusinessDayConfig": {
          "description": "The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed.",
          "$ref": "BusinessDayConfig"
        },
        "handlingBusinessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed."
        },
        "cutoffTime": {
          "$ref": "CutoffTime",
          "description": "Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST."
        },
        "maxHandlingTimeInDays": {
          "type": "integer",
          "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.",
          "format": "uint32"
        },
        "holidayCutoffs": {
          "description": "Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.",
          "items": {
            "$ref": "HolidayCutoff"
          },
          "type": "array"
        },
        "warehouseBasedDeliveryTimes": {
          "type": "array",
          "items": {
            "$ref": "WarehouseBasedDeliveryTime"
          },
          "description": "Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in DeliveryTime should be set."
        },
        "minTransitTimeInDays": {
          "type": "integer",
          "description": "Minimum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.",
          "format": "uint32"
        }
      },
      "type": "object"
    },
    "TestOrderLineItem": {
      "id": "TestOrderLineItem",
      "type": "object",
      "properties": {
        "quantityOrdered": {
          "format": "uint32",
          "type": "integer",
          "description": "Required. Number of items ordered."
        },
        "product": {
          "$ref": "TestOrderLineItemProduct",
          "description": "Required. Product data from the time of the order placement."
        },
        "returnInfo": {
          "description": "Required. Details of the return policy for the line item.",
          "$ref": "OrderLineItemReturnInfo"
        },
        "shippingDetails": {
          "description": "Required. Details of the requested shipping for the line item.",
          "$ref": "OrderLineItemShippingDetails"
        }
      }
    },
    "SettlementTransactionAmountCommission": {
      "properties": {
        "rate": {
          "type": "string",
          "description": "Rate of the commission in percentage."
        },
        "category": {
          "type": "string",
          "description": "The category of the commission. Acceptable values are: - \"`animalsAndPetSupplies`\" - \"`dogCatFoodAndCatLitter`\" - \"`apparelAndAccessories`\" - \"`shoesHandbagsAndSunglasses`\" - \"`costumesAndAccessories`\" - \"`jewelry`\" - \"`watches`\" - \"`hobbiesArtsAndCrafts`\" - \"`homeAndGarden`\" - \"`entertainmentCollectibles`\" - \"`collectibleCoins`\" - \"`sportsCollectibles`\" - \"`sportingGoods`\" - \"`toysAndGames`\" - \"`musicalInstruments`\" - \"`giftCards`\" - \"`babyAndToddler`\" - \"`babyFoodWipesAndDiapers`\" - \"`businessAndIndustrial`\" - \"`camerasOpticsAndPhotography`\" - \"`consumerElectronics`\" - \"`electronicsAccessories`\" - \"`personalComputers`\" - \"`videoGameConsoles`\" - \"`foodAndGrocery`\" - \"`beverages`\" - \"`tobaccoProducts`\" - \"`furniture`\" - \"`hardware`\" - \"`buildingMaterials`\" - \"`tools`\" - \"`healthAndPersonalCare`\" - \"`beauty`\" - \"`householdSupplies`\" - \"`kitchenAndDining`\" - \"`majorAppliances`\" - \"`luggageAndBags`\" - \"`media`\" - \"`officeSupplies`\" - \"`softwareAndVideoGames`\" - \"`vehiclePartsAndAccessories`\" - \"`vehicleTiresAndWheels`\" - \"`vehicles`\" - \"`everythingElse`\" "
        }
      },
      "id": "SettlementTransactionAmountCommission",
      "type": "object"
    },
    "ListCollectionsResponse": {
      "description": "Response message for the ListCollections method.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "Collection"
          },
          "type": "array",
          "description": "The collections listed."
        }
      },
      "type": "object",
      "id": "ListCollectionsResponse"
    },
    "CaptureOrderRequest": {
      "description": "Request message for the CaptureOrder method.",
      "type": "object",
      "id": "CaptureOrderRequest",
      "properties": {}
    },
    "TestOrderAddress": {
      "type": "object",
      "properties": {
        "streetAddress": {
          "description": "Street-level part of the address. Use `\\n` to add a second line.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "recipientName": {
          "description": "Name of the recipient.",
          "type": "string"
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).",
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal Code or ZIP (for example, \"94043\")."
        },
        "isPostOfficeBox": {
          "type": "boolean",
          "description": "Whether the address is a post office box."
        },
        "fullAddress": {
          "items": {
            "type": "string"
          },
          "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States ",
          "type": "array"
        },
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "CLDR country code (for example, \"US\")."
        }
      },
      "id": "TestOrderAddress"
    },
    "RepricingRuleEligibleOfferMatcherStringMatcher": {
      "description": "Matcher by string attributes.",
      "type": "object",
      "id": "RepricingRuleEligibleOfferMatcherStringMatcher",
      "properties": {
        "strAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "String attributes, as long as such attribute of an offer is one of the string attribute values, the offer is considered as passing the matcher. The string matcher checks an offer for inclusivity in the string attributes, not equality. Only literal string matching is supported, no regex."
        }
      }
    },
    "OrderMerchantProvidedAnnotation": {
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for additional merchant provided (as key-value pairs) annotation about the line item."
        },
        "value": {
          "description": "Value for additional merchant provided (as key-value pairs) annotation about the line item.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrderMerchantProvidedAnnotation"
    },
    "FreeListingsProgramStatus": {
      "properties": {
        "globalState": {
          "enum": [
            "PROGRAM_STATE_UNSPECIFIED",
            "NOT_ENABLED",
            "NO_OFFERS_UPLOADED",
            "ENABLED"
          ],
          "description": "State of the program. `ENABLED` if there are offers for at least one region.",
          "enumDescriptions": [
            "State is unknown.",
            "Program is not enabled for any country.",
            "No products have been uploaded for any region. Upload products to Merchant Center.",
            "Program is enabled and offers are uploaded for at least one country."
          ],
          "type": "string"
        },
        "regionStatuses": {
          "description": "Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`.",
          "type": "array",
          "items": {
            "$ref": "FreeListingsProgramStatusRegionStatus"
          }
        }
      },
      "description": "Response message for GetFreeListingsProgramStatus.",
      "id": "FreeListingsProgramStatus",
      "type": "object"
    },
    "PosCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "description": "The ID of the POS data provider.",
          "format": "uint64"
        },
        "targetMerchantId": {
          "format": "uint64",
          "description": "The ID of the account for which to get/submit data.",
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`inventory`\" - \"`sale`\" "
        },
        "sale": {
          "$ref": "PosSale",
          "description": "The sale information to submit. This should be set only if the method is `sale`."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "storeCode": {
          "type": "string",
          "description": "The store code. This should be set only if the method is `delete` or `get`."
        },
        "store": {
          "description": "The store information to submit. This should be set only if the method is `insert`.",
          "$ref": "PosStore"
        },
        "inventory": {
          "description": "The inventory to submit. This should be set only if the method is `inventory`.",
          "$ref": "PosInventory"
        }
      },
      "id": "PosCustomBatchRequestEntry"
    },
    "AccounttaxCustomBatchRequest": {
      "id": "AccounttaxCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccounttaxCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "LiasettingsCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponse`\"."
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "LiasettingsCustomBatchResponseEntry"
          }
        }
      },
      "id": "LiasettingsCustomBatchResponse",
      "type": "object"
    },
    "RegionPostalCodeArea": {
      "properties": {
        "postalCodes": {
          "items": {
            "$ref": "RegionPostalCodeAreaPostalCodeRange"
          },
          "type": "array",
          "description": "Required. A range of postal codes."
        },
        "regionCode": {
          "type": "string",
          "description": "Required. CLDR territory code or the country the postal code group applies to."
        }
      },
      "type": "object",
      "description": "A list of postal codes that defines the region area. Note: All regions defined using postal codes are accessible via the account's `ShippingSettings.postalCodeGroups` resource.",
      "id": "RegionPostalCodeArea"
    },
    "DatafeedsCustomBatchResponseEntry": {
      "id": "DatafeedsCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch datafeeds response.",
      "properties": {
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request."
        },
        "datafeed": {
          "$ref": "Datafeed",
          "description": "The requested data feed. Defined if and only if the request was successful."
        }
      },
      "type": "object"
    },
    "Date": {
      "type": "object",
      "properties": {
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "Date"
    },
    "ListReturnPolicyOnlineResponse": {
      "id": "ListReturnPolicyOnlineResponse",
      "description": "Response message for the `ListReturnPolicyOnline` method.",
      "properties": {
        "returnPolicies": {
          "items": {
            "$ref": "ReturnPolicyOnline"
          },
          "description": "The retrieved return policies.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "RegionalInventory": {
      "properties": {
        "availability": {
          "type": "string",
          "description": "The availability of the product."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#regionalInventory`\".",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "The price of the product."
        },
        "salePriceEffectiveDate": {
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.",
          "type": "string"
        },
        "customAttributes": {
          "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form.",
          "type": "array",
          "items": {
            "$ref": "CustomAttribute"
          }
        },
        "regionId": {
          "type": "string",
          "description": "The ID uniquely identifying each region."
        },
        "salePrice": {
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined.",
          "$ref": "Price"
        }
      },
      "description": "Regional inventory resource. contains the regional name and all attributes which are overridden for the specified region.",
      "id": "RegionalInventory",
      "type": "object"
    },
    "OrdersUpdateLineItemShippingDetailsRequest": {
      "id": "OrdersUpdateLineItemShippingDetailsRequest",
      "type": "object",
      "properties": {
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "deliverByDate": {
          "type": "string",
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can't be a date in the past."
        },
        "shipByDate": {
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can't be a date in the past.",
          "type": "string"
        },
        "lineItemId": {
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required.",
          "type": "string"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      }
    },
    "AccountCredentials": {
      "type": "object",
      "description": "Credentials allowing Google to call a partner's API on behalf of a merchant.",
      "id": "AccountCredentials",
      "properties": {
        "purpose": {
          "enumDescriptions": [
            "Unknown purpose.",
            "The credentials allow Google to manage Shopify orders on behalf of the merchant (deprecated).",
            "The credentials allow Google to manage Shopify integration on behalf of the merchant."
          ],
          "type": "string",
          "enum": [
            "ACCOUNT_CREDENTIALS_PURPOSE_UNSPECIFIED",
            "SHOPIFY_ORDER_MANAGEMENT",
            "SHOPIFY_INTEGRATION"
          ],
          "description": "Indicates to Google how Google should use these OAuth tokens."
        },
        "accessToken": {
          "type": "string",
          "description": "An OAuth access token."
        },
        "expiresIn": {
          "description": "The amount of time, in seconds, after which the access token is no longer valid.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "CaptureOrderResponse": {
      "description": "Response message for the CaptureOrder method.",
      "id": "CaptureOrderResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Only defined if the request was successful. Acceptable values are: * \"duplicate\" * \"executed\"",
          "enum": [
            "EXECUTION_STATUS_UNSPECIFIED",
            "EXECUTED",
            "DUPLICATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The request was completed successfully.",
            "The request was not performed because it already executed once successfully."
          ]
        }
      }
    },
    "ProductDeliveryTimeAreaDeliveryTime": {
      "properties": {
        "deliveryArea": {
          "$ref": "DeliveryArea",
          "description": "Required. The delivery area associated with `deliveryTime` for this product."
        },
        "deliveryTime": {
          "$ref": "ProductDeliveryTimeAreaDeliveryTimeDeliveryTime",
          "description": "Required. The delivery time associated with `deliveryArea` for this product."
        }
      },
      "description": "A pairing of `DeliveryArea` associated with a `DeliveryTime` for this product.",
      "id": "ProductDeliveryTimeAreaDeliveryTime",
      "type": "object"
    },
    "ProductShippingDimension": {
      "properties": {
        "value": {
          "description": "The dimension of the product used to calculate the shipping cost of the item.",
          "format": "double",
          "type": "number"
        },
        "unit": {
          "type": "string",
          "description": "The unit of value."
        }
      },
      "type": "object",
      "id": "ProductShippingDimension"
    },
    "ProductStatus": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\"",
          "type": "string"
        },
        "destinationStatuses": {
          "type": "array",
          "items": {
            "$ref": "ProductStatusDestinationStatus"
          },
          "description": "The intended destinations for the product."
        },
        "itemLevelIssues": {
          "type": "array",
          "description": "A list of all issues associated with the product.",
          "items": {
            "$ref": "ProductStatusItemLevelIssue"
          }
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        },
        "googleExpirationDate": {
          "description": "Date on which the item expires in Google Shopping, in ISO 8601 format.",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "lastUpdateDate": {
          "description": "Date on which the item has been last updated, in ISO 8601 format.",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which status is reported."
        },
        "link": {
          "type": "string",
          "description": "The link to the product."
        }
      },
      "description": "The status of a product, that is, information about a product computed asynchronously.",
      "type": "object",
      "id": "ProductStatus"
    },
    "PickupServicesPickupService": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "The CLDR country code of the carrier (for example, \"US\"). Always present."
        },
        "serviceName": {
          "description": "The name of the pickup service (for example, `\"Access point\"`). Always present.",
          "type": "string"
        },
        "carrierName": {
          "type": "string",
          "description": "The name of the carrier (for example, `\"UPS\"`). Always present."
        }
      },
      "id": "PickupServicesPickupService"
    },
    "DatafeedsCustomBatchRequestEntry": {
      "properties": {
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        },
        "datafeed": {
          "$ref": "Datafeed",
          "description": "The data feed to insert."
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" ",
          "type": "string"
        },
        "datafeedId": {
          "format": "uint64",
          "description": "The ID of the data feed to get, delete or fetch.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A batch entry encoding a single non-batch datafeeds request.",
      "id": "DatafeedsCustomBatchRequestEntry"
    },
    "OrdersReturnRefundLineItemResponse": {
      "type": "object",
      "id": "OrdersReturnRefundLineItemResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersReturnRefundLineItemResponse`\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "AccountstatusesCustomBatchResponseEntry": {
      "type": "object",
      "properties": {
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer",
          "format": "uint32"
        },
        "accountStatus": {
          "$ref": "AccountStatus",
          "description": "The requested account status. Defined if and only if the request was successful."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request."
        }
      },
      "id": "AccountstatusesCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch accountstatuses response."
    },
    "LabelIds": {
      "type": "object",
      "id": "LabelIds",
      "properties": {
        "labelIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The list of label IDs.",
          "type": "array"
        }
      },
      "description": "The IDs of labels that should be assigned to the CSS domain."
    },
    "ShippingsettingsGetSupportedHolidaysResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsGetSupportedHolidaysResponse`\".",
          "type": "string"
        },
        "holidays": {
          "description": "A list of holidays applicable for delivery guarantees. May be empty.",
          "type": "array",
          "items": {
            "$ref": "HolidaysHoliday"
          }
        }
      },
      "type": "object",
      "id": "ShippingsettingsGetSupportedHolidaysResponse"
    },
    "ProductstatusesCustomBatchRequestEntry": {
      "id": "ProductstatusesCustomBatchRequestEntry",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product whose status to get.",
          "type": "string"
        },
        "includeAttributes": {
          "description": "Deprecated: Setting this field has no effect and attributes are never included.",
          "type": "boolean"
        },
        "destinations": {
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        }
      },
      "description": "A batch entry encoding a single non-batch productstatuses request."
    },
    "ReportRow": {
      "type": "object",
      "id": "ReportRow",
      "properties": {
        "metrics": {
          "description": "Metrics requested by the merchant in the query. Metric values are only set for metrics requested explicitly in the query.",
          "$ref": "Metrics"
        },
        "productView": {
          "description": "Product fields requested by the merchant in the query. Field values are only set if the merchant queries `ProductView`. Available only to selected merchants. Submit the [interest form](https://forms.gle/7Uy8htzAN8oNokz9A) to request access.",
          "$ref": "ProductView"
        },
        "segments": {
          "$ref": "Segments",
          "description": "Segmentation dimensions requested by the merchant in the query. Dimension values are only set for dimensions requested explicitly in the query."
        }
      },
      "description": "Result row returned from the search query."
    },
    "SearchRequest": {
      "type": "object",
      "properties": {
        "pageToken": {
          "type": "string",
          "description": "Token of the page to retrieve. If not specified, the first page of results is returned. In order to request the next page of results, the value obtained from `next_page_token` in the previous response should be used."
        },
        "pageSize": {
          "type": "integer",
          "description": "Number of ReportRows to retrieve in a single page. Defaults to the maximum of 1000. Values above 1000 are coerced to 1000.",
          "format": "int32"
        },
        "query": {
          "type": "string",
          "description": "Required. Query that defines performance metrics to retrieve and dimensions according to which the metrics are to be segmented. For details on how to construct your query, see the [Query Language guide](https://developers.google.com/shopping-content/guides/reports/query-language/overview)."
        }
      },
      "id": "SearchRequest",
      "description": "Request message for the ReportService.Search method."
    },
    "OrderreturnsAcknowledgeRequest": {
      "type": "object",
      "properties": {
        "operationId": {
          "description": "[required] The ID of the operation, unique across all operations for a given order return.",
          "type": "string"
        }
      },
      "id": "OrderreturnsAcknowledgeRequest"
    },
    "OrdersUpdateShipmentResponse": {
      "id": "OrdersUpdateShipmentResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersUpdateShipmentResponse`\"."
        }
      }
    },
    "OrderLineItemReturnInfo": {
      "type": "object",
      "properties": {
        "isReturnable": {
          "type": "boolean",
          "description": "Required. Whether the item is returnable."
        },
        "daysToReturn": {
          "format": "int32",
          "description": "Required. How many days later the item can be returned.",
          "type": "integer"
        },
        "policyUrl": {
          "description": "Required. URL of the item return policy.",
          "type": "string"
        }
      },
      "id": "OrderLineItemReturnInfo"
    },
    "AccountStatusItemLevelIssue": {
      "type": "object",
      "id": "AccountStatusItemLevelIssue",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code of the issue."
        },
        "numItems": {
          "type": "string",
          "description": "Number of items with this issue.",
          "format": "int64"
        },
        "attributeName": {
          "description": "The attribute's name, if the issue is caused by a single attribute.",
          "type": "string"
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "servability": {
          "description": "How this issue affects serving of the offer.",
          "type": "string"
        },
        "resolution": {
          "type": "string",
          "description": "Whether the issue can be resolved by the merchant."
        },
        "detail": {
          "type": "string",
          "description": "A detailed issue description in English."
        },
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        }
      }
    },
    "ShipmentInvoice": {
      "type": "object",
      "properties": {
        "shipmentGroupId": {
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges.",
          "type": "string"
        },
        "lineItemInvoices": {
          "type": "array",
          "description": "[required] Invoice details per line item.",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          }
        },
        "invoiceSummary": {
          "$ref": "InvoiceSummary",
          "description": "[required] Invoice summary."
        }
      },
      "id": "ShipmentInvoice"
    },
    "CollectionStatus": {
      "id": "CollectionStatus",
      "properties": {
        "destinationStatuses": {
          "type": "array",
          "description": "The intended destinations for the collection.",
          "items": {
            "$ref": "CollectionStatusDestinationStatus"
          }
        },
        "collectionLevelIssuses": {
          "type": "array",
          "description": "A list of all issues associated with the collection.",
          "items": {
            "$ref": "CollectionStatusItemLevelIssue"
          }
        },
        "id": {
          "description": "Required. The ID of the collection for which status is reported.",
          "type": "string"
        },
        "lastUpdateDate": {
          "description": "Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"",
          "type": "string"
        }
      },
      "description": "The collectionstatus message.",
      "type": "object"
    },
    "RepricingRuleEligibleOfferMatcher": {
      "properties": {
        "brandMatcher": {
          "$ref": "RepricingRuleEligibleOfferMatcherStringMatcher",
          "description": "Filter by the brand."
        },
        "skipWhenOnPromotion": {
          "description": "When true, the rule won't be applied to offers with active promotions.",
          "type": "boolean"
        },
        "itemGroupIdMatcher": {
          "$ref": "RepricingRuleEligibleOfferMatcherStringMatcher",
          "description": "Filter by the item group id."
        },
        "matcherOption": {
          "description": "Determines whether to use the custom matchers or the product feed attribute \"repricing_rule_id\" to specify offer-rule mapping.",
          "enum": [
            "MATCHER_OPTION_UNSPECIFIED",
            "MATCHER_OPTION_CUSTOM_FILTER",
            "MATCHER_OPTION_USE_FEED_ATTRIBUTE",
            "MATCHER_OPTION_ALL_PRODUCTS"
          ],
          "enumDescriptions": [
            "Unused.",
            "Use custom filters.",
            "Use repricing_rule_id feed attribute on the product resource to specify offer-rule mapping.",
            "Matching all products."
          ],
          "type": "string"
        },
        "offerIdMatcher": {
          "description": "Filter by the offer id.",
          "$ref": "RepricingRuleEligibleOfferMatcherStringMatcher"
        }
      },
      "id": "RepricingRuleEligibleOfferMatcher",
      "description": "Matcher that specifies eligible offers. When the USE_FEED_ATTRIBUTE option is selected, only the repricing_rule_id attribute on the product feed is used to specify offer-rule mapping. When the CUSTOM_FILTER option is selected, only the *_matcher fields are used to filter the offers for offer-rule mapping. If the CUSTOM_FILTER option is selected, an offer needs to satisfy each custom filter matcher to be eligible for a rule. Size limit: the sum of the number of entries in all the matchers should not exceed 20. For example, there can be 15 product ids and 5 brands, but not 10 product ids and 11 brands.",
      "type": "object"
    },
    "OrdersGetByMerchantOrderIdResponse": {
      "type": "object",
      "id": "OrdersGetByMerchantOrderIdResponse",
      "properties": {
        "order": {
          "description": "The requested order.",
          "$ref": "Order"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersGetByMerchantOrderIdResponse`\".",
          "type": "string"
        }
      }
    },
    "ReturnPricingInfo": {
      "id": "ReturnPricingInfo",
      "properties": {
        "refundableItemsTotalAmount": {
          "$ref": "MonetaryAmount",
          "description": "Total amount that can be refunded for the items in this return. It represents the total amount received by the merchant for the items, after applying merchant coupons."
        },
        "refundableShippingAmount": {
          "$ref": "MonetaryAmount",
          "description": "Maximum amount that can be refunded for the original shipping fee."
        },
        "totalRefundedAmount": {
          "$ref": "MonetaryAmount",
          "description": "Total amount already refunded by the merchant. It includes all types of refunds (items, shipping, etc.) Not provided if no refund has been applied yet."
        },
        "maxReturnShippingFee": {
          "description": "Maximum return shipping costs that may be charged to the customer depending on merchant's assessment of the return reason and the merchant's return policy for the items being returned.",
          "$ref": "MonetaryAmount"
        },
        "chargeReturnShippingFee": {
          "type": "boolean",
          "description": "Default option for whether merchant should charge the customer for return shipping costs, based on customer selected return reason and merchant's return policy for the items being returned."
        }
      },
      "type": "object"
    },
    "RepricingRule": {
      "type": "object",
      "description": "Represents a repricing rule. A repricing rule is used by shopping serving to adjust transactable offer prices if conditions are met. Next ID: 24",
      "id": "RepricingRule",
      "properties": {
        "merchantId": {
          "readOnly": true,
          "description": "Output only. Immutable. Merchant that owns the repricing rule.",
          "type": "string",
          "format": "int64"
        },
        "eligibleOfferMatcher": {
          "description": "Required. Match criteria for the eligible offers.",
          "$ref": "RepricingRuleEligibleOfferMatcher"
        },
        "cogsBasedRule": {
          "description": "The rule definition for TYPE_COGS_BASED. Required when the rule type is TYPE_COGS_BASED.",
          "$ref": "RepricingRuleCostOfGoodsSaleRule"
        },
        "restriction": {
          "description": "Required. Restriction of the rule appliance.",
          "$ref": "RepricingRuleRestriction"
        },
        "ruleId": {
          "description": "Output only. Immutable. The ID to uniquely identify each repricing rule.",
          "type": "string",
          "readOnly": true
        },
        "paused": {
          "description": "Represents whether a rule is paused. A paused rule will behave like a non-paused rule within CRUD operations, with the major difference that a paused rule will not be evaluated and will have no effect on offers.",
          "type": "boolean"
        },
        "statsBasedRule": {
          "description": "The rule definition for TYPE_STATS_BASED. Required when the rule type is TYPE_STATS_BASED.",
          "$ref": "RepricingRuleStatsBasedRule"
        },
        "countryCode": {
          "type": "string",
          "description": "Required. Immutable. [CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) (e.g. \"US\")."
        },
        "effectiveTimePeriod": {
          "description": "Required. Time period when the rule should take effect.",
          "$ref": "RepricingRuleEffectiveTime"
        },
        "languageCode": {
          "description": "Required. Immutable. The two-letter ISO 639-1 language code associated with the repricing rule.",
          "type": "string"
        },
        "type": {
          "enum": [
            "REPRICING_RULE_TYPE_UNSPECIFIED",
            "TYPE_STATS_BASED",
            "TYPE_COGS_BASED",
            "TYPE_SALES_VOLUME_BASED",
            "TYPE_COMPETITIVE_PRICE"
          ],
          "enumDescriptions": [
            "Unused.",
            "Statistical measurement based rules among Google SA merchants. If this rule is chosen, repricer will adjust the offer price based on statistical metrics (currently only min is available) among other merchants who sell the same product. Details need to be provdided in the RuleDefinition.",
            "Cost of goods sale based rule. Repricer will adjust the offer price based on the offer's sale cost which is provided by the merchant.",
            "Sales volume based rule. Repricer will adjust the offer price based on the offer's sales volume in the past period of time defined within the rule.",
            "Competitive price rule. Repricer will adjust the offer price based on the min price from a list of unnamed big competitors."
          ],
          "type": "string",
          "description": "Required. Immutable. The type of the rule."
        },
        "title": {
          "type": "string",
          "description": "The title for the rule."
        }
      }
    },
    "ReturnPolicyOnline": {
      "properties": {
        "restockingFee": {
          "description": "The restocking fee that applies to all return reason categories. This would be treated as a free restocking fee if the value is not set.",
          "$ref": "ReturnPolicyOnlineRestockingFee"
        },
        "returnPolicyUri": {
          "type": "string",
          "description": "The return policy uri. This can used by Google to do a sanity check for the policy."
        },
        "returnPolicyId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Return policy ID generated by Google."
        },
        "countries": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The countries of sale where the return policy is applicable. The values must be a valid 2 letter ISO 3166 code, e.g. \"US\"."
        },
        "policy": {
          "description": "The return policy.",
          "$ref": "ReturnPolicyOnlinePolicy"
        },
        "label": {
          "description": "The unique user-defined label of the return policy. The same label cannot be used in different return policies for the same country. Policies with the label 'default' will apply to all products, unless a product specifies a return_policy_label attribute.",
          "type": "string"
        },
        "returnMethods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "RETURN_METHOD_UNSPECIFIED",
              "BY_MAIL",
              "IN_STORE",
              "AT_A_KIOSK"
            ],
            "enumDescriptions": [
              "Default value. This value is unused.",
              "By mail.",
              "In store.",
              "At a kiosk."
            ]
          },
          "description": "The return methods of how customers can return an item. This value is required to not be empty unless the type of return policy is noReturns."
        },
        "name": {
          "type": "string",
          "description": "The name of the policy as shown in Merchant Center."
        },
        "returnReasonCategoryInfo": {
          "type": "array",
          "description": "The return reason category information. This required to not be empty unless the type of return policy is noReturns.",
          "items": {
            "$ref": "ReturnPolicyOnlineReturnReasonCategoryInfo"
          }
        },
        "itemConditions": {
          "type": "array",
          "description": "The item conditions that are accepted for returns. This is required to not be empty unless the type of return policy is noReturns.",
          "items": {
            "enumDescriptions": [
              "Default value. This value is unused.",
              "New.",
              "Used."
            ],
            "enum": [
              "ITEM_CONDITION_UNSPECIFIED",
              "NEW",
              "USED"
            ],
            "type": "string"
          }
        }
      },
      "id": "ReturnPolicyOnline",
      "type": "object",
      "description": "Return policy online object. This is currently used to represent return policies for ads and free listings programs."
    },
    "OrderLineItemProduct": {
      "type": "object",
      "properties": {
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product."
        },
        "imageLink": {
          "description": "URL of an image of the item.",
          "type": "string"
        },
        "shownImage": {
          "description": "URL to the cached image shown to the user when order was placed.",
          "type": "string"
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item. Acceptable values are: - \"`new`\" - \"`refurbished`\" - \"`used`\" "
        },
        "targetCountry": {
          "type": "string",
          "description": "The CLDR territory code of the target country of the product."
        },
        "id": {
          "description": "The REST ID of the product.",
          "type": "string"
        },
        "price": {
          "description": "Price of the item.",
          "$ref": "Price"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item."
        },
        "brand": {
          "description": "Brand of the item.",
          "type": "string"
        },
        "fees": {
          "description": "Associated fees at order creation time.",
          "type": "array",
          "items": {
            "$ref": "OrderLineItemProductFee"
          }
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        },
        "variantAttributes": {
          "description": "Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          },
          "type": "array"
        },
        "contentLanguage": {
          "description": "The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "offerId": {
          "description": "An identifier of the item.",
          "type": "string"
        }
      },
      "id": "OrderLineItemProduct"
    },
    "ProductSubscriptionCost": {
      "id": "ProductSubscriptionCost",
      "properties": {
        "periodLength": {
          "description": "The number of subscription periods the buyer has to pay.",
          "type": "string",
          "format": "int64"
        },
        "amount": {
          "description": "The amount the buyer has to pay per subscription period.",
          "$ref": "Price"
        },
        "period": {
          "description": "The type of subscription period.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReturnaddressListResponse": {
      "id": "ReturnaddressListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnaddressListResponse`\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of addresses.",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ReturnAddress"
          }
        }
      }
    },
    "PosInventoryResponse": {
      "type": "object",
      "id": "PosInventoryResponse",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posInventoryResponse`\"."
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "price": {
          "description": "Required. The current price of the item.",
          "$ref": "Price"
        },
        "quantity": {
          "format": "int64",
          "type": "string",
          "description": "Required. The available quantity of the item."
        }
      }
    },
    "LiaOnDisplayToOrderSettings": {
      "id": "LiaOnDisplayToOrderSettings",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the ?On display to order? feature. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        },
        "shippingCostPolicyUrl": {
          "description": "Shipping cost and policy URL.",
          "type": "string"
        }
      }
    },
    "LiasettingsGetAccessibleGmbAccountsResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsGetAccessibleGmbAccountsResponse`\".",
          "type": "string"
        },
        "gmbAccounts": {
          "description": "A list of Business Profiles which are available to the merchant.",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          },
          "type": "array"
        },
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the Merchant Center account."
        }
      },
      "id": "LiasettingsGetAccessibleGmbAccountsResponse"
    },
    "ReturnPolicyOnlineReturnReasonCategoryInfo": {
      "id": "ReturnPolicyOnlineReturnReasonCategoryInfo",
      "description": "The return reason category info wrapper.",
      "type": "object",
      "properties": {
        "returnShippingFee": {
          "description": "The corresponding return shipping fee. This is only applicable when returnLabelSource is not the customer's responsibility.",
          "$ref": "ReturnPolicyOnlineReturnShippingFee"
        },
        "returnReasonCategory": {
          "description": "The return reason category.",
          "type": "string",
          "enum": [
            "RETURN_REASON_CATEGORY_UNSPECIFIED",
            "BUYER_REMORSE",
            "ITEM_DEFECT"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Buyer remorse.",
            "Item defect."
          ]
        },
        "returnLabelSource": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Download and print the label.",
            "Label in the box.",
            "Customers' responsibility to get the label."
          ],
          "enum": [
            "RETURN_LABEL_SOURCE_UNSPECIFIED",
            "DOWNLOAD_AND_PRINT",
            "IN_THE_BOX",
            "CUSTOMER_RESPONSIBILITY"
          ],
          "description": "The corresponding return label source."
        }
      }
    },
    "BuyOnGoogleProgramStatus": {
      "description": "Response message for the GetProgramStatus method.",
      "id": "BuyOnGoogleProgramStatus",
      "properties": {
        "customerServicePendingPhoneNumber": {
          "type": "string",
          "description": "The pending phone number specified for BuyOnGoogle program. It might be different than account level phone number. In order to update this field the customer_service_pending_phone_region_code must also be set. After verification this field becomes empty."
        },
        "customerServiceVerifiedPhoneNumber": {
          "description": "Output only. The verified phone number specified for BuyOnGoogle program. It might be different than account level phone number.",
          "type": "string",
          "readOnly": true
        },
        "onlineSalesChannel": {
          "type": "string",
          "enumDescriptions": [
            "Default value when online sales channel is not set.",
            "Merchant is selling exclusively on Google.",
            "Merchant is selling on Google and other websites."
          ],
          "description": "The channels through which the merchant is selling.",
          "enum": [
            "ONLINE_SALES_CHANNEL_UNSPECIFIED",
            "GOOGLE_EXCLUSIVE",
            "GOOGLE_AND_OTHER_WEBSITES"
          ]
        },
        "customerServiceVerifiedPhoneRegionCode": {
          "type": "string",
          "description": "Output only. Two letter country code for the verified phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.",
          "readOnly": true
        },
        "businessModel": {
          "type": "array",
          "description": "The business models in which merchant participates.",
          "items": {
            "enum": [
              "BUSINESS_MODEL_UNSPECIFIED",
              "MANUFACTURER",
              "IMPORTER",
              "RESELLER",
              "OTHER"
            ],
            "enumDescriptions": [
              "Default value when business model is not set.",
              "Merchant is a manufacturer.",
              "Merchant is an importer.",
              "Merchant is a reseller.",
              "Merchant has a different business model."
            ],
            "type": "string"
          }
        },
        "customerServicePendingPhoneRegionCode": {
          "type": "string",
          "description": "Two letter country code for the pending phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes. In order to update this field the customer_service_pending_phone_number must also be set. After verification this field becomes empty."
        },
        "customerServiceVerifiedEmail": {
          "readOnly": true,
          "description": "Output only. The customer service verified email.",
          "type": "string"
        },
        "customerServicePendingEmail": {
          "type": "string",
          "description": "The customer service pending email. After verification this field becomes empty."
        },
        "participationStage": {
          "description": "Output only. The current participation stage for the program.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value when participation stage is not set.",
            "Merchant is not eligible for onboarding to a given program in a specific region code.",
            "Merchant is eligible for onboarding to a given program in a specific region code.",
            "Merchant is onboarding to a given program in a specific region code.",
            "Merchant fulfilled all the requirements and is ready to request review in a specific region code.",
            "Merchant is waiting for the review to be completed in a specific region code.",
            "The review for a merchant has been rejected in a specific region code.",
            "Merchant's program participation is active for a specific region code.",
            "Participation has been paused."
          ],
          "enum": [
            "PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED",
            "NOT_ELIGIBLE",
            "ELIGIBLE",
            "ONBOARDING",
            "ELIGIBLE_FOR_REVIEW",
            "PENDING_REVIEW",
            "REVIEW_DISAPPROVED",
            "ACTIVE",
            "PAUSED"
          ]
        }
      },
      "type": "object"
    },
    "ReturnaddressCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnaddressCustomBatchResponse`\"."
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "ReturnaddressCustomBatchResponseEntry"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ReturnaddressCustomBatchResponse"
    },
    "OrdersCancelTestOrderByCustomerRequest": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`changedMind`\" - \"`orderedWrongItem`\" - \"`other`\" "
        }
      },
      "type": "object",
      "id": "OrdersCancelTestOrderByCustomerRequest"
    },
    "BusinessDayConfig": {
      "id": "BusinessDayConfig",
      "properties": {
        "businessDays": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Regular business days, such as '\"monday\"'. May not be empty."
        }
      },
      "type": "object"
    },
    "ListCssesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "csses": {
          "description": "The CSS domains affiliated with the specified CSS group.",
          "items": {
            "$ref": "Css"
          },
          "type": "array"
        }
      },
      "id": "ListCssesResponse",
      "type": "object",
      "description": "The response message for the `ListCsses` method"
    },
    "DateTime": {
      "properties": {
        "minutes": {
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day."
        },
        "nanos": {
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32",
          "type": "integer"
        },
        "utcOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds."
        },
        "hours": {
          "type": "integer",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32"
        }
      },
      "id": "DateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "type": "object"
    },
    "AccountsCustomBatchRequestEntryLinkRequest": {
      "properties": {
        "action": {
          "type": "string",
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" "
        },
        "linkType": {
          "type": "string",
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" - \"`paymentServiceProvider`\" "
        },
        "linkedAccountId": {
          "type": "string",
          "description": "The ID of the linked account."
        },
        "services": {
          "description": "Provided services. Acceptable values are: - \"`shoppingAdsProductManagement`\" - \"`shoppingActionsProductManagement`\" - \"`shoppingActionsOrderManagement`\" - \"`paymentProcessing`\" ",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AccountsCustomBatchRequestEntryLinkRequest",
      "type": "object"
    },
    "AccountsLinkResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsLinkResponse`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountsLinkResponse"
    },
    "ReturnpolicyCustomBatchRequestEntry": {
      "id": "ReturnpolicyCustomBatchRequestEntry",
      "properties": {
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The Merchant Center account ID."
        },
        "method": {
          "type": "string",
          "description": "Method of the batch request entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" "
        },
        "returnPolicyId": {
          "description": "The return policy ID. This should be set only if the method is `delete` or `get`.",
          "type": "string"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "returnPolicy": {
          "$ref": "ReturnPolicy",
          "description": "The return policy to submit. This should be set only if the method is `insert`."
        }
      },
      "type": "object"
    },
    "ShippingsettingsGetSupportedPickupServicesResponse": {
      "properties": {
        "pickupServices": {
          "items": {
            "$ref": "PickupServicesPickupService"
          },
          "description": "A list of supported pickup services. May be empty.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsGetSupportedPickupServicesResponse`\".",
          "type": "string"
        }
      },
      "id": "ShippingsettingsGetSupportedPickupServicesResponse",
      "type": "object"
    },
    "AccountTaxTaxRule": {
      "properties": {
        "useGlobalRate": {
          "description": "Whether the tax rate is taken from a global tax table or specified explicitly.",
          "type": "boolean"
        },
        "ratePercent": {
          "description": "Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.",
          "type": "string"
        },
        "locationId": {
          "format": "uint64",
          "description": "Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).",
          "type": "string"
        },
        "shippingTaxed": {
          "type": "boolean",
          "description": "If true, shipping charges are also taxed."
        },
        "country": {
          "type": "string",
          "description": "Country code in which tax is applicable."
        }
      },
      "type": "object",
      "description": "Tax calculation rule to apply in a state or province (US only).",
      "id": "AccountTaxTaxRule"
    },
    "RepricingRuleReport": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "REPRICING_RULE_TYPE_UNSPECIFIED",
            "TYPE_STATS_BASED",
            "TYPE_COGS_BASED",
            "TYPE_SALES_VOLUME_BASED",
            "TYPE_COMPETITIVE_PRICE"
          ],
          "description": "Type of the rule.",
          "enumDescriptions": [
            "Unused.",
            "Statistical measurement based rules among Google SA merchants. If this rule is chosen, repricer will adjust the offer price based on statistical metrics (currently only min is available) among other merchants who sell the same product. Details need to be provdided in the RuleDefinition.",
            "Cost of goods sale based rule. Repricer will adjust the offer price based on the offer's sale cost which is provided by the merchant.",
            "Sales volume based rule. Repricer will adjust the offer price based on the offer's sales volume in the past period of time defined within the rule.",
            "Competitive price rule. Repricer will adjust the offer price based on the min price from a list of unnamed big competitors."
          ]
        },
        "inapplicabilityDetails": {
          "type": "array",
          "items": {
            "$ref": "InapplicabilityDetails"
          },
          "description": "List of all reasons the rule did not apply to the inapplicable products during the specified reporting period."
        },
        "date": {
          "$ref": "Date",
          "description": "Date of the stats in this report. The report starts and ends according to the merchant's timezone."
        },
        "orderItemCount": {
          "description": "Total unit count of impacted products ordered while the rule was active on the date of the report. This count includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.",
          "type": "integer",
          "format": "int32"
        },
        "impactedProducts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of product ids that are impacted by this rule during this reporting period. Out of stock products and products not searched for by customers are examples of non-impacted products."
        },
        "buyboxWinningRuleStats": {
          "$ref": "RepricingRuleReportBuyboxWinningRuleStats",
          "description": "Stats specific to buybox winning rules for rule report (deprecated)."
        },
        "totalGmv": {
          "description": "Total GMV generated by impacted products while the rule was active on the date of the report. This value includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.",
          "$ref": "PriceAmount"
        },
        "inapplicableProducts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of product ids that are inapplicable to this rule during this reporting period. To get the inapplicable reason for a specific product, see RepricingProductReport."
        },
        "ruleId": {
          "type": "string",
          "description": "Id of the Repricing rule for this report."
        }
      },
      "type": "object",
      "id": "RepricingRuleReport",
      "description": "Resource that represents a daily Repricing rule report. Next ID: 11"
    },
    "AccountGoogleMyBusinessLink": {
      "properties": {
        "gmbAccountId": {
          "type": "string",
          "description": "The ID of the Business Profile. If this is provided, then `gmbEmail` is ignored. The value of this field should match the `accountId` used by the Business Profile API."
        },
        "gmbEmail": {
          "description": "The Business Profile email address of a specific account within a Business Profile. A sample account within a Business Profile could be a business account with set of locations, managed under the Business Profile.",
          "type": "string"
        },
        "status": {
          "description": "Status of the link between this Merchant Center account and the Business Profile. Acceptable values are: - \"`active`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountGoogleMyBusinessLink"
    },
    "SettlementTransactionIdentifiers": {
      "id": "SettlementTransactionIdentifiers",
      "type": "object",
      "properties": {
        "settlementEntryId": {
          "type": "string",
          "description": "The unique ID of the settlement transaction entry."
        },
        "shipmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The shipment ids for the item."
        },
        "adjustmentId": {
          "description": "The identifier of the adjustments, if it's available.",
          "type": "string"
        },
        "orderItemId": {
          "description": "The identifier of the item.",
          "type": "string"
        },
        "merchantOrderId": {
          "description": "The merchant provided order ID.",
          "type": "string"
        },
        "transactionId": {
          "description": "The Google transaction ID.",
          "type": "string"
        }
      }
    },
    "RegionalinventoryCustomBatchResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#regionalinventoryCustomBatchResponse`\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "RegionalinventoryCustomBatchResponseEntry"
          }
        }
      },
      "id": "RegionalinventoryCustomBatchResponse",
      "type": "object"
    },
    "DatafeedsCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "DatafeedsCustomBatchRequestEntry"
          }
        }
      },
      "id": "DatafeedsCustomBatchRequest",
      "type": "object"
    },
    "ShoppingAdsProgramStatusRegionStatus": {
      "properties": {
        "reviewIneligibilityReasonDescription": {
          "description": "Reason a program in a specific region isn’t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.",
          "type": "string"
        },
        "regionCodes": {
          "description": "The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disapprovalDate": {
          "type": "string",
          "description": "Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`."
        },
        "reviewIneligibilityReason": {
          "type": "string",
          "enum": [
            "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED",
            "ONBOARDING_ISSUES",
            "NOT_ENOUGH_OFFERS",
            "IN_COOLDOWN_PERIOD",
            "ALREADY_UNDER_REVIEW",
            "NO_REVIEW_REQUIRED",
            "WILL_BE_REVIEWED_AUTOMATICALLY",
            "IS_RETIRED",
            "ALREADY_REVIEWED"
          ],
          "enumDescriptions": [
            "Requesting a review from Google is not possible.",
            "All onboarding issues needs to be fixed.",
            "Not enough offers uploaded for this country.",
            "Cooldown period applies. Wait until cooldown period ends.",
            "Account is already under review.",
            "No issues available to review.",
            "Account will be automatically reviewed at the end of the grace period.",
            "Account is retired. Should not appear in MC.",
            "Account was already reviewd."
          ],
          "description": "Review ineligibility reason if account is not eligible for review."
        },
        "onboardingIssues": {
          "items": {
            "type": "string"
          },
          "description": "Issues that must be fixed to be eligible for review.",
          "type": "array"
        },
        "eligibilityStatus": {
          "enumDescriptions": [
            "State is not known.",
            "If the account has no issues and review is completed successfully.",
            "There are one or more issues that needs to be resolved for account to be active for the program. Detailed list of account issues are available in [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses) API.",
            "If account has issues but offers are servable. Some of the issue can make account DISAPPROVED after a certain deadline.",
            "Account is under review.",
            "Account is waiting for review to start.",
            "Program is currently onboarding. Upload valid offers to complete onboarding."
          ],
          "description": "Eligibility status of the Shopping Ads program.",
          "enum": [
            "STATE_UNSPECIFIED",
            "APPROVED",
            "DISAPPROVED",
            "WARNING",
            "UNDER_REVIEW",
            "PENDING_REVIEW",
            "ONBOARDING"
          ],
          "type": "string"
        },
        "reviewIssues": {
          "description": "Issues evaluated in the review process. Fix all issues before requesting a review.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reviewEligibilityStatus": {
          "type": "string",
          "enumDescriptions": [
            "Review eligibility state is unknown.",
            "Account is eligible for review for a specified region code.",
            "Account is not eligible for review for a specified region code."
          ],
          "enum": [
            "REVIEW_ELIGIBILITY_UNSPECIFIED",
            "ELIGIBLE",
            "INELIGIBLE"
          ],
          "description": "If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`."
        },
        "reviewIneligibilityReasonDetails": {
          "$ref": "ShoppingAdsProgramStatusReviewIneligibilityReasonDetails",
          "description": "Additional information for ineligibility. If `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is provided."
        }
      },
      "description": "Status of program and region.",
      "type": "object",
      "id": "ShoppingAdsProgramStatusRegionStatus"
    },
    "OrderPromotion": {
      "properties": {
        "applicableItems": {
          "items": {
            "$ref": "OrderPromotionItem"
          },
          "description": "Items that this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity. This field will also be empty for shipping promotions because shipping is not tied to any specific item.",
          "type": "array"
        },
        "appliedItems": {
          "items": {
            "$ref": "OrderPromotionItem"
          },
          "description": "Items that this promotion have been applied to. Do not provide for `orders.createtestorder`. This field will be empty for shipping promotions because shipping is not tied to any specific item.",
          "type": "array"
        },
        "funder": {
          "type": "string",
          "description": "Required. The party funding the promotion. Only `merchant` is supported for `orders.createtestorder`. Acceptable values are: - \"`google`\" - \"`merchant`\" "
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the promotion."
        },
        "shortTitle": {
          "description": "A short title of the promotion to be shown on the checkout page. Do not provide for `orders.createtestorder`.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "description": "Promotion end time in ISO 8601 format. Date, time, and offset required, for example, \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"."
        },
        "merchantPromotionId": {
          "type": "string",
          "description": "Required. This field is used to identify promotions within merchants' own systems."
        },
        "taxValue": {
          "description": "Estimated discount applied to tax (if allowed by law). Do not provide for `orders.createtestorder`.",
          "$ref": "Price"
        },
        "priceValue": {
          "$ref": "Price",
          "description": "Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of order."
        },
        "subtype": {
          "description": "Required. The category of the promotion. Only `moneyOff` is supported for `orders.createtestorder`. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeShippingOvernight`\" - \"`freeShippingStandard`\" - \"`freeShippingTwoDay`\" - \"`moneyOff`\" - \"`percentOff`\" - \"`rewardPoints`\" - \"`salePrice`\" ",
          "type": "string"
        },
        "startTime": {
          "description": "Promotion start time in ISO 8601 format. Date, time, and offset required, for example, \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\".",
          "type": "string"
        },
        "type": {
          "description": "Required. The scope of the promotion. Only `product` is supported for `orders.createtestorder`. Acceptable values are: - \"`product`\" - \"`shipping`\" ",
          "type": "string"
        }
      },
      "id": "OrderPromotion",
      "type": "object"
    },
    "Weight": {
      "properties": {
        "value": {
          "description": "Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.",
          "type": "string"
        },
        "unit": {
          "type": "string",
          "description": "Required. The weight unit. Acceptable values are: - \"`kg`\" - \"`lb`\" "
        }
      },
      "type": "object",
      "id": "Weight"
    },
    "UnitInvoiceAdditionalCharge": {
      "id": "UnitInvoiceAdditionalCharge",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" "
        },
        "additionalChargeAmount": {
          "$ref": "Amount",
          "description": "[required] Amount of the additional charge per unit. *Note:* Invoicing works on a per unit bases. The `additionalChargeAmount` is the amount charged per unit, and will be multiplied by the number of entries in `shipmentUnitID`."
        }
      }
    },
    "RegionPostalCodeAreaPostalCodeRange": {
      "type": "object",
      "description": "A range of postal codes that defines the region area.",
      "id": "RegionPostalCodeAreaPostalCodeRange",
      "properties": {
        "end": {
          "type": "string",
          "description": "Optional. A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area. It must have the same length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin is a pattern then postalCodeRangeEnd must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching postalCodeRangeBegin."
        },
        "begin": {
          "description": "Required. A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: \"94108\", \"9410*\", \"9*\".",
          "type": "string"
        }
      }
    },
    "ProductstatusesCustomBatchResponseEntry": {
      "id": "ProductstatusesCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch productstatuses response.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productstatusesCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "productStatus": {
          "$ref": "ProductStatus",
          "description": "The requested product status. Only defined if the request was successful."
        },
        "errors": {
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.",
          "$ref": "Errors"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        }
      }
    },
    "SettlementReport": {
      "description": " Settlement reports detail order-level and item-level credits and debits between you and Google.",
      "properties": {
        "transferDate": {
          "description": "Date on which transfer for this payment was initiated by Google, in ISO 8601 format.",
          "type": "string"
        },
        "startDate": {
          "description": "The start date on which all transactions are included in the report, in ISO 8601 format.",
          "type": "string"
        },
        "transferIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of bank identifiers used for the transfer. For example, Trace ID for Federal Automated Clearing House (ACH). This may also be known as the Wire ID."
        },
        "settlementId": {
          "type": "string",
          "description": "The ID of the settlement report."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#settlementReport`\""
        },
        "transferAmount": {
          "$ref": "Price",
          "description": "The money due to the merchant."
        },
        "endDate": {
          "description": "The end date on which all transactions are included in the report, in ISO 8601 format.",
          "type": "string"
        },
        "previousBalance": {
          "$ref": "Price",
          "description": "The residual amount from the previous invoice. This is set only if the previous invoices are not paid because of negative balance."
        }
      },
      "type": "object",
      "id": "SettlementReport"
    },
    "ReturnShippingLabel": {
      "properties": {
        "trackingId": {
          "type": "string",
          "description": "The tracking id of this return label."
        },
        "labelUri": {
          "description": "The URL for the return shipping label in PDF format",
          "type": "string"
        },
        "carrier": {
          "type": "string",
          "description": "Name of the carrier."
        }
      },
      "type": "object",
      "description": "Return shipping label for a Buy on Google merchant-managed return.",
      "id": "ReturnShippingLabel"
    },
    "ProductsCustomBatchRequestEntry": {
      "id": "ProductsCustomBatchRequestEntry",
      "properties": {
        "product": {
          "description": "The product to insert or update. Only required if the method is `insert` or `update`. If the `update` method is used with `updateMask` only to delete a field, then this isn't required. For example, setting `salePrice` on the `updateMask` and not providing a `product` will result in an existing sale price on the product specified by `productId` being deleted.",
          "$ref": "Product"
        },
        "updateMask": {
          "description": "The comma-separated list of product attributes to be updated. Example: `\"title,salePrice\"`. Attributes specified in the update mask without a value specified in the body will be deleted from the product. Only top-level product attributes can be updated. If not defined, product attributes with set values will be updated and other attributes will stay unchanged. Only defined if the method is `update`.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to get or mutate. Only defined if the method is `get`, `delete`, or `update`."
        },
        "feedId": {
          "type": "string",
          "description": "The Content API Supplemental Feed ID. If present then product insertion or deletion applies to a supplemental feed instead of primary Content API feed.",
          "format": "uint64"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`update`\" "
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "description": "A batch entry encoding a single non-batch products request.",
      "type": "object"
    },
    "LocalinventoryCustomBatchResponse": {
      "type": "object",
      "id": "LocalinventoryCustomBatchResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#localinventoryCustomBatchResponse`\"."
        },
        "entries": {
          "items": {
            "$ref": "LocalinventoryCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        }
      }
    },
    "DatafeedStatus": {
      "id": "DatafeedStatus",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "description": "The list of errors occurring in the feed."
        },
        "language": {
          "description": "The two-letter ISO 639-1 language for which the status is reported.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedStatus`\"",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "The country for which the status is reported, represented as a CLDR territory code."
        },
        "processingStatus": {
          "description": "The processing status of the feed. Acceptable values are: - \"`\"`failure`\": The feed could not be processed or all items had errors.`\" - \"`in progress`\": The feed is being processed. - \"`none`\": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - \"`success`\": The feed was processed successfully, though some items might have had errors. ",
          "type": "string"
        },
        "itemsTotal": {
          "description": "The number of items in the feed that were processed.",
          "format": "uint64",
          "type": "string"
        },
        "itemsValid": {
          "type": "string",
          "format": "uint64",
          "description": "The number of items in the feed that were valid."
        },
        "datafeedId": {
          "description": "The ID of the feed for which the status is reported.",
          "format": "uint64",
          "type": "string"
        },
        "lastUploadDate": {
          "type": "string",
          "description": "The last date at which the feed was uploaded."
        },
        "warnings": {
          "description": "The list of errors occurring in the feed.",
          "type": "array",
          "items": {
            "$ref": "DatafeedStatusError"
          }
        }
      },
      "description": "The status of a datafeed, that is, the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.",
      "type": "object"
    },
    "ProductsCustomBatchResponse": {
      "type": "object",
      "id": "ProductsCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productsCustomBatchResponse`\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        }
      }
    },
    "OrdersAcknowledgeRequest": {
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        }
      },
      "type": "object",
      "id": "OrdersAcknowledgeRequest"
    },
    "OrdersShipLineItemsResponse": {
      "type": "object",
      "id": "OrdersShipLineItemsResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersShipLineItemsResponse`\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "LocationIdSet": {
      "id": "LocationIdSet",
      "type": "object",
      "properties": {
        "locationIds": {
          "description": "A non-empty list of location IDs. They must all be of the same location type (for example, state).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ActivateBuyOnGoogleProgramRequest": {
      "properties": {},
      "description": "Request message for the ActivateProgram method.",
      "id": "ActivateBuyOnGoogleProgramRequest",
      "type": "object"
    },
    "RepricingRuleEffectiveTimeFixedTimePeriod": {
      "properties": {
        "endTime": {
          "description": "The end time (exclusive) of the period. It can only be hour granularity.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "The start time (inclusive) of the period. It can only be hour granularity.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Definition of a fixed time period.",
      "type": "object",
      "id": "RepricingRuleEffectiveTimeFixedTimePeriod"
    },
    "ListAccountReturnCarrierResponse": {
      "type": "object",
      "id": "ListAccountReturnCarrierResponse",
      "properties": {
        "accountReturnCarriers": {
          "items": {
            "$ref": "AccountReturnCarrier"
          },
          "description": "List of all available account return carriers for the merchant.",
          "type": "array"
        }
      },
      "description": "Response for listing account return carriers."
    },
    "CutoffTime": {
      "id": "CutoffTime",
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "description": "Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "format": "uint32"
        },
        "minute": {
          "format": "uint32",
          "type": "integer",
          "description": "Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required."
        },
        "timezone": {
          "description": "Timezone identifier for the cutoff time (for example, \"Europe/Zurich\"). List of identifiers. Required.",
          "type": "string"
        }
      }
    },
    "AccountStatusStatistics": {
      "type": "object",
      "properties": {
        "expiring": {
          "format": "int64",
          "type": "string",
          "description": "Number of expiring offers."
        },
        "disapproved": {
          "format": "int64",
          "description": "Number of disapproved offers.",
          "type": "string"
        },
        "pending": {
          "type": "string",
          "description": "Number of pending offers.",
          "format": "int64"
        },
        "active": {
          "description": "Number of active offers.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "AccountStatusStatistics"
    },
    "RepricingProductReportBuyboxWinningProductStats": {
      "properties": {
        "buyboxWinsCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of times this product won the buybox with these rules during this time period."
        }
      },
      "description": "Stats specific to buybox winning rules for product report.",
      "id": "RepricingProductReportBuyboxWinningProductStats",
      "type": "object"
    },
    "OrdersRefundItemRequest": {
      "properties": {
        "items": {
          "description": "The items that are refunded. Either Item or Shipping must be provided in the request.",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryRefundItemItem"
          },
          "type": "array"
        },
        "shipping": {
          "$ref": "OrdersCustomBatchRequestEntryRefundItemShipping",
          "description": "The refund on shipping. Optional, but either Item or Shipping must be provided in the request."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund. Acceptable values are: - \"`shippingCostAdjustment`\" - \"`priceAdjustment`\" - \"`taxAdjustment`\" - \"`feeAdjustment`\" - \"`courtesyAdjustment`\" - \"`adjustment`\" - \"`customerCancelled`\" - \"`noInventory`\" - \"`productNotAsDescribed`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" - \"`lateShipmentCredit`\" - \"`deliveredLateByCarrier`\" - \"`productArrivedDamaged`\" "
        }
      },
      "id": "OrdersRefundItemRequest",
      "type": "object"
    },
    "OrderPromotionItem": {
      "id": "OrderPromotionItem",
      "type": "object",
      "properties": {
        "productId": {
          "description": "`orders.createtestorder`.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of the associated product. Do not provide for `orders.createtestorder`."
        },
        "lineItemId": {
          "description": "The line item ID of a product. Do not provide for `orders.createtestorder`.",
          "type": "string"
        },
        "offerId": {
          "type": "string",
          "description": "Required. Offer ID of a product. Only for `orders.createtestorder`."
        }
      }
    },
    "RateGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rate group. Optional. If set has to be unique within shipping service."
        },
        "singleValue": {
          "description": "The value of the rate group (for example, flat rate $10). Can only be set if `mainTable` and `subtables` are not set.",
          "$ref": "Value"
        },
        "applicableShippingLabels": {
          "items": {
            "type": "string"
          },
          "description": "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.",
          "type": "array"
        },
        "subtables": {
          "items": {
            "$ref": "Table"
          },
          "type": "array",
          "description": "A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set."
        },
        "mainTable": {
          "description": "A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set.",
          "$ref": "Table"
        },
        "carrierRates": {
          "items": {
            "$ref": "CarrierRate"
          },
          "description": "A list of carrier rates that can be referred to by `mainTable` or `singleValue`.",
          "type": "array"
        }
      },
      "id": "RateGroup",
      "type": "object"
    },
    "UnitInvoice": {
      "type": "object",
      "properties": {
        "unitPriceTaxes": {
          "description": "Tax amounts to apply to the unit price.",
          "items": {
            "$ref": "UnitInvoiceTaxLine"
          },
          "type": "array"
        },
        "additionalCharges": {
          "type": "array",
          "description": "Additional charges for a unit, for example, shipping costs.",
          "items": {
            "$ref": "UnitInvoiceAdditionalCharge"
          }
        },
        "unitPrice": {
          "$ref": "Price",
          "description": "[required] Pre-tax or post-tax price of one unit depending on the locality of the order. *Note:* Invoicing works on a per unit basis. The `unitPrice` is the price of a single unit, and will be multiplied by the number of entries in `shipmentUnitId`."
        }
      },
      "id": "UnitInvoice"
    },
    "PosStore": {
      "type": "object",
      "description": "Store resource.",
      "properties": {
        "phoneNumber": {
          "description": "The store phone number.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"",
          "type": "string"
        },
        "gcidCategory": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The business type of the store."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. A store identifier that is unique for the given merchant."
        },
        "storeName": {
          "type": "string",
          "description": "The merchant or store name."
        },
        "storeAddress": {
          "description": "Required. The street address of the store.",
          "type": "string"
        },
        "placeId": {
          "description": "The Google Place Id of the store location.",
          "type": "string"
        },
        "websiteUrl": {
          "type": "string",
          "description": "The website url for the store or merchant."
        }
      },
      "id": "PosStore"
    },
    "Value": {
      "properties": {
        "pricePercentage": {
          "description": "A percentage of the price represented as a number in decimal notation (for example, `\"5.4\"`). Can only be set if all other fields are not set.",
          "type": "string"
        },
        "subtableName": {
          "description": "The name of a subtable. Can only be set in table cells (not for single values), and only if all other fields are not set.",
          "type": "string"
        },
        "noShipping": {
          "description": "If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.",
          "type": "boolean"
        },
        "carrierRateName": {
          "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.",
          "type": "string"
        },
        "flatRate": {
          "$ref": "Price",
          "description": "A flat rate. Can only be set if all other fields are not set."
        }
      },
      "type": "object",
      "id": "Value",
      "description": "The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set."
    },
    "DeliveryAreaPostalCodeRange": {
      "id": "DeliveryAreaPostalCodeRange",
      "type": "object",
      "properties": {
        "lastPostalCode": {
          "description": "A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area (for example [070* - 078*] results in the range [07000 - 07899]). It must have the same length as `firstPostalCode`: if `firstPostalCode` is a postal code then `lastPostalCode` must be a postal code too; if firstPostalCode is a pattern then `lastPostalCode` must be a pattern with the same prefix length. Ignored if not set, then the area is defined as being all the postal codes matching `firstPostalCode`.",
          "type": "string"
        },
        "firstPostalCode": {
          "description": "Required. A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`.",
          "type": "string"
        }
      },
      "description": "A range of postal codes that defines the delivery area. Only set `firstPostalCode` when specifying a single postal code."
    },
    "UnitInvoiceTaxLine": {
      "id": "UnitInvoiceTaxLine",
      "properties": {
        "taxType": {
          "description": "[required] Type of the tax. Acceptable values are: - \"`otherFee`\" - \"`otherFeeTax`\" - \"`sales`\" ",
          "type": "string"
        },
        "taxName": {
          "description": "Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`.",
          "type": "string"
        },
        "taxAmount": {
          "description": "[required] Tax amount for the tax type.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "MonetaryAmount": {
      "id": "MonetaryAmount",
      "properties": {
        "priceAmount": {
          "$ref": "Price",
          "description": "The pre-tax or post-tax price depends on the location of the order. - For countries (for example, \"US\". where price attribute excludes tax, this field corresponds to the pre-tax value. - For coutries (for example, \"France\") where price attribute includes tax, this field corresponds to the post-tax value ."
        },
        "taxAmount": {
          "description": "Tax value, present only for countries where price attribute excludes tax (for example, \"US\". No tax is referenced as 0 value with the corresponding `currency`.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "AccountItemUpdatesSettings": {
      "id": "AccountItemUpdatesSettings",
      "properties": {
        "allowConditionUpdates": {
          "description": "If condition updates are enabled, Google always updates item condition with the condition detected from the details of your product.",
          "type": "boolean"
        },
        "allowAvailabilityUpdates": {
          "description": "If availability updates are enabled, any previous availability values get overwritten if Google finds an out-of-stock annotation on the offer's page. If additionally `allow_availability_updates` field is set to true, values get overwritten if Google finds an in-stock annotation on the offer’s page.",
          "type": "boolean"
        },
        "allowPriceUpdates": {
          "type": "boolean",
          "description": "If price updates are enabled, Google always updates the active price with the crawled information."
        },
        "allowStrictAvailabilityUpdates": {
          "type": "boolean",
          "description": "If allow_availability_updates is enabled, items are automatically updated in all your Shopping target countries. By default, availability updates will only be applied to items that are 'out of stock' on your website but 'in stock' on Shopping. Set this to true to also update items that are 'in stock' on your website, but 'out of stock' on Google Shopping. In order for this field to have an effect, you must also allow availability updates."
        }
      },
      "type": "object",
      "description": "Settings for the Automatic Item Updates."
    },
    "AccountItemUpdates": {
      "id": "AccountItemUpdates",
      "type": "object",
      "description": "Turning on [item updates](https://support.google.com/merchants/answer/3246284) allows Google to automatically update items for you. When item updates are on, Google uses the structured data markup on the website and advanced data extractors to update the price and availability of the items. When the item updates are off, items with mismatched data aren't shown.",
      "properties": {
        "effectiveAllowConditionUpdates": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. The effective value of allow_condition_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
        },
        "effectiveAllowPriceUpdates": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. The effective value of allow_price_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
        },
        "effectiveAllowStrictAvailabilityUpdates": {
          "type": "boolean",
          "description": "Output only. The effective value of allow_strict_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.",
          "readOnly": true
        },
        "effectiveAllowAvailabilityUpdates": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. The effective value of allow_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
        },
        "accountItemUpdatesSettings": {
          "description": "Determines which attributes of the items should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator.",
          "$ref": "AccountItemUpdatesSettings"
        }
      }
    },
    "ProductShipping": {
      "type": "object",
      "properties": {
        "postalCode": {
          "type": "string",
          "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length."
        },
        "minTransitTime": {
          "format": "int64",
          "description": "Minimum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. minTransitTime can only be present together with maxTransitTime; but it's not required if maxTransitTime is present.",
          "type": "string"
        },
        "maxTransitTime": {
          "format": "int64",
          "description": "Maximum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.",
          "type": "string"
        },
        "minHandlingTime": {
          "format": "int64",
          "type": "string",
          "description": "Minimum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. minHandlingTime can only be present together with maxHandlingTime; but it's not required if maxHandlingTime is present."
        },
        "maxHandlingTime": {
          "type": "string",
          "format": "int64",
          "description": "Maximum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds."
        },
        "service": {
          "type": "string",
          "description": "A free-form description of the service class or delivery speed."
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country to which an item will ship."
        },
        "locationGroupName": {
          "description": "The location where the shipping is applicable, represented by a location group name.",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "format": "int64",
          "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API."
        },
        "region": {
          "description": "The geographic region to which a shipping rate applies.",
          "type": "string"
        },
        "price": {
          "description": "Fixed shipping price, represented as a number.",
          "$ref": "Price"
        }
      },
      "id": "ProductShipping"
    },
    "OrderinvoicesCreateRefundInvoiceResponse": {
      "id": "OrderinvoicesCreateRefundInvoiceResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderinvoicesCreateRefundInvoiceResponse`\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object"
    },
    "AccountCustomerService": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Customer service URL."
        },
        "email": {
          "description": "Customer service email.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Customer service phone number."
        }
      },
      "id": "AccountCustomerService"
    },
    "OrderReportTransaction": {
      "id": "OrderReportTransaction",
      "type": "object",
      "properties": {
        "productAmount": {
          "description": "Total amount for the items.",
          "$ref": "ProductAmount"
        },
        "transactionDate": {
          "description": "The date of the transaction, in ISO 8601 format.",
          "type": "string"
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant-provided ID of the order."
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the order."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "disbursementDate": {
          "type": "string",
          "description": "The date the disbursement was initiated, in ISO 8601 format."
        },
        "disbursementAmount": {
          "description": "The disbursement amount.",
          "$ref": "Price"
        },
        "disbursementId": {
          "type": "string",
          "description": "The ID of the disbursement."
        },
        "disbursementCreationDate": {
          "type": "string",
          "description": "The date the disbursement was created, in ISO 8601 format."
        }
      }
    },
    "ListMethodQuotasResponse": {
      "id": "ListMethodQuotasResponse",
      "description": "Response message for the ListMethodQuotas method.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "methodQuotas": {
          "items": {
            "$ref": "MethodQuota"
          },
          "description": "The current quota usage and limits per each method.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "PosSaleResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posSaleResponse`\"."
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "format": "int64",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The price of the item."
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.",
          "type": "string"
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        }
      },
      "id": "PosSaleResponse",
      "type": "object"
    },
    "LoyaltyPoints": {
      "id": "LoyaltyPoints",
      "properties": {
        "pointsValue": {
          "description": "The retailer's loyalty points in absolute value.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.",
          "type": "string"
        },
        "ratio": {
          "type": "number",
          "format": "double",
          "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0."
        }
      },
      "type": "object"
    },
    "Product": {
      "type": "object",
      "properties": {
        "productWidth": {
          "description": "The width of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).",
          "$ref": "ProductDimension"
        },
        "sizeType": {
          "type": "string",
          "description": "The cut of the item. Recommended for apparel items."
        },
        "gtin": {
          "description": "Global Trade Item Number (GTIN) of the item.",
          "type": "string"
        },
        "shippingWeight": {
          "$ref": "ProductShippingWeight",
          "description": "Weight of the item for shipping."
        },
        "identifierExists": {
          "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.",
          "type": "boolean"
        },
        "shipping": {
          "type": "array",
          "description": "Shipping rules.",
          "items": {
            "$ref": "ProductShipping"
          }
        },
        "availability": {
          "description": "Availability status of the item.",
          "type": "string"
        },
        "adult": {
          "type": "boolean",
          "description": "Should be set to true if the item is targeted towards adults."
        },
        "title": {
          "type": "string",
          "description": "Title of the item."
        },
        "adsRedirect": {
          "type": "string",
          "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "productHeight": {
          "description": "The height of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).",
          "$ref": "ProductDimension"
        },
        "displayAdsTitle": {
          "type": "string",
          "description": "Title of an item for dynamic remarketing campaigns."
        },
        "minEnergyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU.",
          "type": "string"
        },
        "additionalSizeType": {
          "description": "Additional cut of the item. Used together with size_type to represent combined size types for apparel items.",
          "type": "string"
        },
        "unitPricingBaseMeasure": {
          "$ref": "ProductUnitPricingBaseMeasure",
          "description": "The preference of the denominator of the unit price."
        },
        "multipack": {
          "type": "string",
          "description": "The number of identical products in a merchant-defined multipack.",
          "format": "int64"
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of the item."
        },
        "pause": {
          "description": "Publication of this item should be temporarily paused. Acceptable values are: - \"`ads`\" ",
          "type": "string"
        },
        "googleProductCategory": {
          "type": "string",
          "description": "Google's category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API."
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        },
        "subscriptionCost": {
          "description": "Number of periods (months or years) and amount of payment per period for an item with an associated subscription contract.",
          "$ref": "ProductSubscriptionCost"
        },
        "shippingHeight": {
          "$ref": "ProductShippingDimension",
          "description": "Height of the item for shipping."
        },
        "displayAdsId": {
          "type": "string",
          "description": "An identifier for an item for dynamic remarketing campaigns."
        },
        "sellOnGoogleQuantity": {
          "format": "int64",
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "type": "string"
        },
        "salePriceEffectiveDate": {
          "description": "Date range during which the item is on sale (see products data specification ).",
          "type": "string"
        },
        "gender": {
          "description": "Target gender of the item.",
          "type": "string"
        },
        "linkTemplate": {
          "type": "string",
          "description": "URL template for merchant hosted local storefront."
        },
        "availabilityDate": {
          "type": "string",
          "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format."
        },
        "id": {
          "type": "string",
          "description": "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId."
        },
        "installment": {
          "description": "Number and amount of installments to pay for an item.",
          "$ref": "Installment"
        },
        "additionalImageLinks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional URLs of images of the item."
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        },
        "customLabel3": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "displayAdsValue": {
          "format": "double",
          "description": "Offer margin for dynamic remarketing campaigns.",
          "type": "number"
        },
        "offerId": {
          "type": "string",
          "description": "Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier."
        },
        "imageLink": {
          "description": "URL of an image of the item.",
          "type": "string"
        },
        "sizes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition)."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#product`\"",
          "type": "string"
        },
        "unitPricingMeasure": {
          "description": "The measure and dimension of an item.",
          "$ref": "ProductUnitPricingMeasure"
        },
        "customLabel4": {
          "description": "Custom label 4 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "price": {
          "description": "Price of the item.",
          "$ref": "Price"
        },
        "canonicalLink": {
          "type": "string",
          "description": "URL for the canonical version of your item's landing page."
        },
        "ageGroup": {
          "description": "Target age group of the item.",
          "type": "string"
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product."
        },
        "adsGrouping": {
          "type": "string",
          "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise."
        },
        "customAttributes": {
          "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (for example, `{ \"name\": \"size type\", \"value\": \"regular\" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).",
          "items": {
            "$ref": "CustomAttribute"
          },
          "type": "array"
        },
        "isBundle": {
          "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.",
          "type": "boolean"
        },
        "expirationDate": {
          "type": "string",
          "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future."
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "shippingLabel": {
          "type": "string",
          "description": "The shipping label of the product, used to group product in account-level shipping rules."
        },
        "mobileLinkTemplate": {
          "type": "string",
          "description": "URL template for merchant hosted local storefront optimized for mobile devices."
        },
        "energyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU.",
          "type": "string"
        },
        "adsLabels": {
          "type": "array",
          "description": "Similar to ads_grouping, but only works on CPC.",
          "items": {
            "type": "string"
          }
        },
        "maxEnergyEfficiencyClass": {
          "type": "string",
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
        },
        "includedDestinations": {
          "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "brand": {
          "type": "string",
          "description": "Brand of the item."
        },
        "link": {
          "type": "string",
          "description": "URL directly linking to your item's page on your website."
        },
        "mobileLink": {
          "type": "string",
          "description": "URL for the mobile-optimized version of your item's landing page."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "ProductTax"
          },
          "description": "Tax information."
        },
        "productHighlights": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Bullet points describing the most relevant highlights of a product."
        },
        "promotionIds": {
          "type": "array",
          "description": "The unique ID of a promotion.",
          "items": {
            "type": "string"
          }
        },
        "sizeSystem": {
          "description": "System in which the size is specified. Recommended for apparel items.",
          "type": "string"
        },
        "pickupSla": {
          "type": "string",
          "description": "Item store pickup timeline. Acceptable values are: - \"`same day`\" - \"`next day`\" - \"`2-day`\" - \"`3-day`\" - \"`4-day`\" - \"`5-day`\" - \"`6-day`\" - \"`7-day`\" - \"`multi-week`\" "
        },
        "shippingWidth": {
          "$ref": "ProductShippingDimension",
          "description": "Width of the item for shipping."
        },
        "taxCategory": {
          "type": "string",
          "description": "The tax category of the product, used to configure detailed tax nexus in account-level tax settings."
        },
        "salePrice": {
          "$ref": "Price",
          "description": "Advertised sale price of the item."
        },
        "productWeight": {
          "$ref": "ProductWeight",
          "description": "The weight of the product in the units provided. The value must be between 0 (exclusive) and 2000 (inclusive)."
        },
        "externalSellerId": {
          "description": "Required for multi-seller accounts. Use this attribute if you're a marketplace uploading products for various sellers to your multi-seller account.",
          "type": "string"
        },
        "pattern": {
          "type": "string",
          "description": "The item's pattern (for example, polka dots)."
        },
        "excludedDestinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center)."
        },
        "source": {
          "description": "The source of the offer, that is, how the offer was created. Acceptable values are: - \"`api`\" - \"`crawl`\" - \"`feed`\" ",
          "type": "string"
        },
        "minHandlingTime": {
          "format": "int64",
          "description": "Minimal product handling time (in business days).",
          "type": "string"
        },
        "productTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Categories of the item (formatted as in products data specification)."
        },
        "transitTimeLabel": {
          "description": "The transit time label of the product, used to group product in account-level transit time tables.",
          "type": "string"
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item."
        },
        "maxHandlingTime": {
          "description": "Maximal product handling time (in business days).",
          "format": "int64",
          "type": "string"
        },
        "color": {
          "type": "string",
          "description": "Color of the item."
        },
        "productDetails": {
          "items": {
            "$ref": "ProductProductDetail"
          },
          "description": "Technical specification or additional product details.",
          "type": "array"
        },
        "productLength": {
          "description": "The length of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).",
          "$ref": "ProductDimension"
        },
        "channel": {
          "type": "string",
          "description": "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "costOfGoodsSold": {
          "$ref": "Price",
          "description": "Cost of goods sold. Used for gross profit reporting."
        },
        "pickupMethod": {
          "description": "The pick up option for the item. Acceptable values are: - \"`buy`\" - \"`reserve`\" - \"`ship to store`\" - \"`not supported`\" ",
          "type": "string"
        },
        "material": {
          "type": "string",
          "description": "The material of which the item is made."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "shippingLength": {
          "description": "Length of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "displayAdsLink": {
          "description": "URL directly to your item's landing page for dynamic remarketing campaigns.",
          "type": "string"
        },
        "feedLabel": {
          "description": "Feed label for the item. Either `targetCountry` or `feedLabel` is required.",
          "type": "string"
        },
        "displayAdsSimilarIds": {
          "description": "Advertiser-specified recommendations.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "customLabel0": {
          "type": "string",
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
        },
        "shoppingAdsExcludedCountries": {
          "type": "array",
          "description": "List of country codes (ISO 3166-1 alpha-2) to exclude the offer from Shopping Ads destination. Countries from this list are removed from countries configured in MC feed settings.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Product",
      "description": " Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect."
    },
    "LiasettingsCustomBatchRequestEntry": {
      "properties": {
        "contactName": {
          "description": "Inventory validation contact name. Required only for SetInventoryValidationContact.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "The country code. Required only for RequestInventoryVerification."
        },
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the account for which to get/update account LIA settings."
        },
        "posExternalAccountId": {
          "description": "The account ID by which this merchant is known to the POS provider.",
          "type": "string"
        },
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "contactEmail": {
          "type": "string",
          "description": "Inventory validation contact email. Required only for SetInventoryValidationContact."
        },
        "gmbEmail": {
          "description": "The Business Profile. Required only for RequestGmbAccess.",
          "type": "string"
        },
        "liaSettings": {
          "description": "The account Lia settings to update. Only defined if the method is `update`.",
          "$ref": "LiaSettings"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`getAccessibleGmbAccounts`\" - \"`requestGmbAccess`\" - \"`requestInventoryVerification`\" - \"`setInventoryVerificationContact`\" - \"`update`\" "
        },
        "posDataProviderId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of POS data provider. Required only for SetPosProvider."
        }
      },
      "type": "object",
      "id": "LiasettingsCustomBatchRequestEntry"
    },
    "AccountstatusesListResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of account statuses."
        },
        "resources": {
          "items": {
            "$ref": "AccountStatus"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountstatusesListResponse`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountstatusesListResponse"
    },
    "AccountsAuthInfoResponse": {
      "id": "AccountsAuthInfoResponse",
      "properties": {
        "accountIdentifiers": {
          "description": "The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. ",
          "items": {
            "$ref": "AccountIdentifier"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsAuthInfoResponse`\"."
        }
      },
      "type": "object"
    },
    "ProductViewItemIssueItemIssueSeverity": {
      "description": "Severity of an issue per destination in a region, and aggregated severity.",
      "id": "ProductViewItemIssueItemIssueSeverity",
      "properties": {
        "severityPerDestination": {
          "items": {
            "$ref": "ProductViewItemIssueIssueSeverityPerDestination"
          },
          "type": "array",
          "description": "Item issue severity for every destination."
        },
        "aggregatedSeverity": {
          "enumDescriptions": [
            "Undefined Issue severity.",
            "Issue disapproves the product in at least one of the selected destinations.",
            "Issue demotes the product in all selected destinations it affects.",
            "Issue resolution is `PENDING_PROCESSING`."
          ],
          "description": "Severity of an issue aggregated for destination.",
          "type": "string",
          "enum": [
            "AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED",
            "DISAPPROVED",
            "DEMOTED",
            "PENDING"
          ]
        }
      },
      "type": "object"
    },
    "ProductstatusesCustomBatchResponse": {
      "id": "ProductstatusesCustomBatchResponse",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductstatusesCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productstatusesCustomBatchResponse`\"."
        }
      },
      "type": "object"
    },
    "OrderinvoicesCreateRefundInvoiceRequest": {
      "type": "object",
      "id": "OrderinvoicesCreateRefundInvoiceRequest",
      "properties": {
        "invoiceId": {
          "description": "[required] The ID of the invoice.",
          "type": "string"
        },
        "refundOnlyOption": {
          "description": "Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided.",
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
        },
        "returnOption": {
          "description": "Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided.",
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption"
        },
        "shipmentInvoices": {
          "type": "array",
          "items": {
            "$ref": "ShipmentInvoice"
          },
          "description": "Invoice details for different shipment groups."
        },
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order."
        }
      }
    },
    "RequestPhoneVerificationResponse": {
      "type": "object",
      "properties": {
        "verificationId": {
          "description": "The verification ID to use in subsequent calls to `verifyphonenumber`.",
          "type": "string"
        }
      },
      "id": "RequestPhoneVerificationResponse",
      "description": "Response message for the RequestPhoneVerification method."
    },
    "DatafeedstatusesListResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "DatafeedStatus"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedstatusesListResponse`\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of datafeed statuses."
        }
      },
      "id": "DatafeedstatusesListResponse"
    },
    "OrderPickupDetails": {
      "type": "object",
      "id": "OrderPickupDetails",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of the pickup location."
        },
        "collectors": {
          "type": "array",
          "description": "Collectors authorized to pick up shipment from the pickup location.",
          "items": {
            "$ref": "OrderPickupDetailsCollector"
          }
        },
        "pickupType": {
          "type": "string",
          "description": "The pickup type of this order. Acceptable values are: - \"`merchantStore`\" - \"`merchantStoreCurbside`\" - \"`merchantStoreLocker`\" - \"`thirdPartyPickupPoint`\" - \"`thirdPartyLocker`\" "
        },
        "address": {
          "$ref": "OrderAddress",
          "description": "Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location."
        }
      }
    },
    "OrdersRefundItemResponse": {
      "type": "object",
      "id": "OrdersRefundItemResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersRefundItemResponse`\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "A boolean exposing the active status of the shipping service. Required."
        },
        "currency": {
          "type": "string",
          "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups."
        },
        "minimumOrderValue": {
          "description": "Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table.",
          "$ref": "Price"
        },
        "rateGroups": {
          "items": {
            "$ref": "RateGroup"
          },
          "type": "array",
          "description": "Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means \"everything else\". The other `applicableShippingLabels` must not overlap."
        },
        "deliveryTime": {
          "description": "Time spent in various aspects from order to the delivery of the product. Required.",
          "$ref": "DeliveryTime"
        },
        "name": {
          "description": "Free-form name of the service. Must be unique within target account. Required.",
          "type": "string"
        },
        "eligibility": {
          "description": "Eligibility for this service. Acceptable values are: - \"`All scenarios`\" - \"`All scenarios except Shopping Actions`\" - \"`Shopping Actions`\" ",
          "type": "string"
        },
        "pickupService": {
          "$ref": "PickupCarrierService",
          "description": "The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved through the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`."
        },
        "shipmentType": {
          "description": "Type of locations this service ships orders to. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "minimumOrderValueTable": {
          "description": "Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value.",
          "$ref": "MinimumOrderValueTable"
        },
        "deliveryCountry": {
          "type": "string",
          "description": "The CLDR territory code of the country to which the service applies. Required."
        }
      },
      "id": "Service"
    },
    "HolidayCutoff": {
      "properties": {
        "deadlineTimezone": {
          "description": "Timezone identifier for the deadline hour (for example, \"Europe/Zurich\"). List of identifiers. Required.",
          "type": "string"
        },
        "visibleFromDate": {
          "description": "Date on which the deadline will become visible to consumers in ISO 8601 format. For example, \"2016-10-31\" for 31st October 2016. Required.",
          "type": "string"
        },
        "holidayId": {
          "description": "Unique identifier for the holiday. Required.",
          "type": "string"
        },
        "deadlineHour": {
          "description": "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.",
          "type": "integer",
          "format": "uint32"
        },
        "deadlineDate": {
          "type": "string",
          "description": "Date of the order deadline, in ISO 8601 format. For example, \"2016-11-29\" for 29th November 2016. Required."
        }
      },
      "id": "HolidayCutoff",
      "type": "object"
    },
    "AccountReturnCarrier": {
      "description": " The return carrier information. This service is designed for merchants enrolled in the Buy on Google program. ",
      "type": "object",
      "properties": {
        "carrierAccountName": {
          "description": "Name of the carrier account.",
          "type": "string"
        },
        "carrierAccountId": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Immutable. The Google-provided unique carrier ID, used to update the resource."
        },
        "carrierCode": {
          "type": "string",
          "description": "The carrier code enum. Accepts the values FEDEX or UPS.",
          "enumDescriptions": [
            "Carrier not specified",
            "FedEx carrier",
            "UPS carrier"
          ],
          "enum": [
            "CARRIER_CODE_UNSPECIFIED",
            "FEDEX",
            "UPS"
          ]
        },
        "carrierAccountNumber": {
          "type": "string",
          "description": "Number of the carrier account."
        }
      },
      "id": "AccountReturnCarrier"
    },
    "TimePeriod": {
      "description": "A message that represents a time period.",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "The starting timestamp.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The ending timestamp.",
          "type": "string"
        }
      },
      "id": "TimePeriod",
      "type": "object"
    },
    "ReturnaddressCustomBatchResponseEntry": {
      "id": "ReturnaddressCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "returnAddress": {
          "description": "The retrieved return address.",
          "$ref": "ReturnAddress"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnaddressCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32",
          "type": "integer"
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        }
      }
    },
    "OrderTrackingSignalShippingInfo": {
      "id": "OrderTrackingSignalShippingInfo",
      "properties": {
        "carrierName": {
          "type": "string",
          "description": "The name of the shipping carrier for the delivery. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time."
        },
        "shipmentId": {
          "type": "string",
          "description": "Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response."
        },
        "earliestDeliveryPromiseTime": {
          "$ref": "DateTime",
          "description": "The earliest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name."
        },
        "shippingStatus": {
          "enum": [
            "SHIPPING_STATE_UNSPECIFIED",
            "SHIPPED",
            "DELIVERED"
          ],
          "type": "string",
          "description": "The status of the shipment.",
          "enumDescriptions": [
            "The shipping status is not known to merchant.",
            "All items are shipped.",
            "The shipment is already delivered."
          ]
        },
        "originPostalCode": {
          "type": "string",
          "description": "The origin postal code, as a continuous string without spaces or dashes, e.g. \"95016\". This field will be anonymized in returned OrderTrackingSignal creation response."
        },
        "actualDeliveryTime": {
          "$ref": "DateTime",
          "description": "The time when the shipment was actually delivered. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name."
        },
        "shippedTime": {
          "$ref": "DateTime",
          "description": "The time when the shipment was shipped. Include the year and timezone string, if available."
        },
        "carrierServiceName": {
          "description": "The service type for fulfillment, e.g., GROUND, FIRST_CLASS, etc.",
          "type": "string"
        },
        "latestDeliveryPromiseTime": {
          "$ref": "DateTime",
          "description": "The latest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name."
        },
        "trackingId": {
          "description": "The tracking ID of the shipment. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time.",
          "type": "string"
        },
        "originRegionCode": {
          "description": "The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping origin.",
          "type": "string"
        }
      },
      "description": "The shipping information for the order.",
      "type": "object"
    },
    "ProductsListResponse": {
      "type": "object",
      "id": "ProductsListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productsListResponse`\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of products.",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Product"
          }
        }
      }
    },
    "Address": {
      "id": "Address",
      "properties": {
        "administrativeArea": {
          "description": "Required. Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Required. [CLDR country code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml) (for example, \"US\")."
        },
        "streetAddress": {
          "type": "string",
          "description": "Street-level part of the address. Use `\\n` to add a second line."
        },
        "postalCode": {
          "description": "Required. Postal code or ZIP (for example, \"94043\").",
          "type": "string"
        },
        "city": {
          "description": "Required. City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Datafeed": {
      "type": "object",
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "$ref": "DatafeedTarget"
          },
          "description": "The targets this feed should apply to (country, language, destinations)."
        },
        "format": {
          "description": "Format of the feed file.",
          "$ref": "DatafeedFormat"
        },
        "name": {
          "description": "Required for insert. A descriptive name of the data feed.",
          "type": "string"
        },
        "fileName": {
          "type": "string",
          "description": "Required. The filename of the feed. All feeds must have a unique file name."
        },
        "id": {
          "format": "int64",
          "type": "string",
          "description": "Required for update. The ID of the data feed."
        },
        "fetchSchedule": {
          "description": "Fetch schedule for the feed file.",
          "$ref": "DatafeedFetchSchedule"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeed`\"",
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "description": "Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \"`local products`\" - \"`product inventory`\" - \"`products`\" "
        },
        "attributeLanguage": {
          "description": "The two-letter ISO 639-1 language in which the attributes are defined in the data feed.",
          "type": "string"
        }
      },
      "description": "Datafeed configuration data.",
      "id": "Datafeed"
    },
    "ProductId": {
      "properties": {
        "productId": {
          "description": "The Content API ID of the product, in the form `channel:contentLanguage:targetCountry:offerId`.",
          "type": "string"
        }
      },
      "description": "The Content API ID of the product.",
      "id": "ProductId",
      "type": "object"
    },
    "CollectionStatusItemLevelIssue": {
      "type": "object",
      "properties": {
        "attributeName": {
          "description": "The attribute's name, if the issue is caused by a single attribute.",
          "type": "string"
        },
        "servability": {
          "type": "string",
          "description": "How this issue affects the serving of the collection."
        },
        "detail": {
          "description": "A detailed issue description in English.",
          "type": "string"
        },
        "code": {
          "description": "The error code of the issue.",
          "type": "string"
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "applicableCountries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Country codes (ISO 3166-1 alpha-2) where issue applies to the offer."
        },
        "destination": {
          "type": "string",
          "description": "The destination the issue applies to."
        },
        "description": {
          "description": "A short issue description in English.",
          "type": "string"
        },
        "resolution": {
          "type": "string",
          "description": "Whether the issue can be resolved by the merchant."
        }
      },
      "description": "Issue associated with the collection.",
      "id": "CollectionStatusItemLevelIssue"
    },
    "ListAccountLabelsResponse": {
      "properties": {
        "accountLabels": {
          "description": "The labels from the specified account.",
          "type": "array",
          "items": {
            "$ref": "AccountLabel"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for the `ListAccountLabels` method.",
      "id": "ListAccountLabelsResponse",
      "type": "object"
    },
    "LinkedAccount": {
      "type": "object",
      "properties": {
        "services": {
          "description": "List of provided services.",
          "type": "array",
          "items": {
            "$ref": "LinkService"
          }
        },
        "linkedAccountId": {
          "type": "string",
          "description": "The ID of the linked account."
        }
      },
      "id": "LinkedAccount"
    },
    "ListRepricingRuleReportsResponse": {
      "description": "Response message for the ListRepricingRuleReports method.",
      "id": "ListRepricingRuleReportsResponse",
      "type": "object",
      "properties": {
        "repricingRuleReports": {
          "items": {
            "$ref": "RepricingRuleReport"
          },
          "description": "Daily reports for the given Repricing rule.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token for retrieving the next page. Its absence means there is no subsequent page."
        }
      }
    },
    "ReturnAddressAddress": {
      "properties": {
        "country": {
          "description": "CLDR country code (for example, \"US\").",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code or ZIP (for example, \"94043\").",
          "type": "string"
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).",
          "type": "string"
        },
        "streetAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Street-level part of the address. May be up to two lines, each line specified as an array element."
        },
        "recipientName": {
          "description": "Name of the recipient to address returns to.",
          "type": "string"
        },
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ReturnAddressAddress"
    },
    "OrdersCreateTestReturnRequest": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
          },
          "description": "Returned items."
        }
      },
      "id": "OrdersCreateTestReturnRequest"
    },
    "MerchantOrderReturn": {
      "description": "Order return. Production access (all methods) requires the order manager role. Sandbox access does not.",
      "properties": {
        "orderId": {
          "description": "Google order ID.",
          "type": "string"
        },
        "returnItems": {
          "description": "Items of the return.",
          "type": "array",
          "items": {
            "$ref": "MerchantOrderReturnItem"
          }
        },
        "returnPricingInfo": {
          "$ref": "ReturnPricingInfo",
          "description": "Information about shipping costs."
        },
        "orderReturnId": {
          "description": "Order return ID generated by Google.",
          "type": "string"
        },
        "merchantOrderId": {
          "description": "Merchant defined order ID.",
          "type": "string"
        },
        "creationDate": {
          "description": "The date of creation of the return, in ISO 8601 format.",
          "type": "string"
        },
        "returnShipments": {
          "items": {
            "$ref": "ReturnShipment"
          },
          "description": "Shipments of the return.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "MerchantOrderReturn"
    },
    "MinimumOrderValueTable": {
      "properties": {
        "storeCodeSetWithMovs": {
          "items": {
            "$ref": "MinimumOrderValueTableStoreCodeSetWithMov"
          },
          "type": "array"
        }
      },
      "id": "MinimumOrderValueTable",
      "type": "object"
    },
    "LiasettingsRequestGmbAccessResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsRequestGmbAccessResponse`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LiasettingsRequestGmbAccessResponse"
    },
    "OrdersRejectReturnLineItemRequest": {
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" ",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "type": "integer",
          "format": "uint32"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        }
      },
      "id": "OrdersRejectReturnLineItemRequest",
      "type": "object"
    },
    "PauseBuyOnGoogleProgramRequest": {
      "id": "PauseBuyOnGoogleProgramRequest",
      "type": "object",
      "description": "Request message for the PauseProgram method.",
      "properties": {}
    },
    "VerifyPhoneNumberResponse": {
      "type": "object",
      "id": "VerifyPhoneNumberResponse",
      "description": "Response message for the VerifyPhoneNumber method.",
      "properties": {
        "verifiedPhoneNumber": {
          "description": "Verified phone number if verification is successful. This phone number can only be replaced by another verified phone number.",
          "type": "string"
        }
      }
    },
    "LocalinventoryCustomBatchRequestEntry": {
      "description": "Batch entry encoding a single local inventory update request.",
      "type": "object",
      "id": "LocalinventoryCustomBatchRequestEntry",
      "properties": {
        "method": {
          "type": "string",
          "description": "Method of the batch request entry. Acceptable values are: - \"`insert`\" "
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which to update local inventory."
        },
        "localInventory": {
          "$ref": "LocalInventory",
          "description": "Local inventory of the product."
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "DatafeedstatusesCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "DatafeedstatusesCustomBatchRequestEntry"
          }
        }
      },
      "type": "object",
      "id": "DatafeedstatusesCustomBatchRequest"
    },
    "ListRepricingProductReportsResponse": {
      "id": "ListRepricingProductReportsResponse",
      "type": "object",
      "properties": {
        "repricingProductReports": {
          "type": "array",
          "description": "Periodic reports for the given Repricing product.",
          "items": {
            "$ref": "RepricingProductReport"
          }
        },
        "nextPageToken": {
          "description": "A token for retrieving the next page. Its absence means there is no subsequent page.",
          "type": "string"
        }
      },
      "description": "Response message for the ListRepricingProductReports method."
    },
    "HolidaysHoliday": {
      "properties": {
        "countryCode": {
          "description": "The CLDR territory code of the country in which the holiday is available. For example, \"US\", \"DE\", \"GB\". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.",
          "type": "string"
        },
        "deliveryGuaranteeHour": {
          "description": "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.",
          "type": "string",
          "format": "uint64"
        },
        "deliveryGuaranteeDate": {
          "description": "Date on which the order has to arrive at the customer's, in ISO 8601 format. For example, \"2016-12-24\" for 24th December 2016. Always present.",
          "type": "string"
        },
        "date": {
          "type": "string",
          "description": "Date of the holiday, in ISO 8601 format. For example, \"2016-12-25\" for Christmas 2016. Always present."
        },
        "type": {
          "description": "The holiday type. Always present. Acceptable values are: - \"`Christmas`\" - \"`Easter`\" - \"`Father's Day`\" - \"`Halloween`\" - \"`Independence Day (USA)`\" - \"`Mother's Day`\" - \"`Thanksgiving`\" - \"`Valentine's Day`\" ",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "HolidaysHoliday"
    },
    "Css": {
      "type": "object",
      "id": "Css",
      "properties": {
        "fullName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The CSS domain's full name."
        },
        "labelIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "A list of label IDs that are assigned to this CSS domain by its CSS group. Only populated for CSS group users."
        },
        "homepageUri": {
          "readOnly": true,
          "description": "Output only. Immutable. The CSS domain's homepage.",
          "type": "string"
        },
        "cssGroupId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Immutable. The ID of the CSS group this CSS domain is affiliated with. Only populated for CSS group users.",
          "format": "int64"
        },
        "cssDomainId": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Immutable. The CSS domain ID."
        },
        "displayName": {
          "type": "string",
          "description": "Output only. Immutable. The CSS domain's display name, used when space is constrained.",
          "readOnly": true
        }
      },
      "description": "Information about CSS domain."
    },
    "ProductViewItemIssue": {
      "type": "object",
      "id": "ProductViewItemIssue",
      "description": "Item issue associated with the product.",
      "properties": {
        "resolution": {
          "description": "Item issue resolution.",
          "enumDescriptions": [
            "Unknown resolution type.",
            "The merchant has to fix the issue.",
            "The issue will be resolved automatically (for example, image crawl), or Google review. No merchant action is required now. Resolution might lead to another issue (for example, if crawl fails)."
          ],
          "enum": [
            "UNKNOWN",
            "MERCHANT_ACTION",
            "PENDING_PROCESSING"
          ],
          "type": "string"
        },
        "severity": {
          "description": "Item issue severity.",
          "$ref": "ProductViewItemIssueItemIssueSeverity"
        },
        "issueType": {
          "description": "Item issue type.",
          "$ref": "ProductViewItemIssueItemIssueType"
        }
      }
    },
    "OrdersSetLineItemMetadataResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersSetLineItemMetadataResponse`\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrdersSetLineItemMetadataResponse",
      "type": "object"
    },
    "LiaCountrySettings": {
      "id": "LiaCountrySettings",
      "properties": {
        "hostedLocalStorefrontActive": {
          "description": "The status of the \"Merchant hosted local storefront\" feature.",
          "type": "boolean"
        },
        "posDataProvider": {
          "$ref": "LiaPosDataProvider",
          "description": "The POS data provider linked with this country."
        },
        "storePickupActive": {
          "type": "boolean",
          "description": "The status of the \"Store pickup\" feature."
        },
        "about": {
          "description": "The settings for the About page.",
          "$ref": "LiaAboutPageSettings"
        },
        "onDisplayToOrder": {
          "description": "LIA \"On Display To Order\" settings.",
          "$ref": "LiaOnDisplayToOrderSettings"
        },
        "country": {
          "type": "string",
          "description": "Required. CLDR country code (for example, \"US\")."
        },
        "inventory": {
          "description": "LIA inventory verification settings.",
          "$ref": "LiaInventorySettings"
        }
      },
      "type": "object"
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption": {
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption",
      "properties": {
        "reason": {
          "description": "[required] Reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional description of the return reason."
        }
      },
      "type": "object"
    },
    "ProductUnitPricingBaseMeasure": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of the denominator."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "description": "The denominator of the unit price."
        }
      },
      "type": "object",
      "id": "ProductUnitPricingBaseMeasure"
    },
    "FreeListingsProgramStatusRegionStatus": {
      "properties": {
        "eligibilityStatus": {
          "type": "string",
          "description": "Eligibility status of the standard free listing program.",
          "enumDescriptions": [
            "State is not known.",
            "If the account has no issues and review is completed successfully.",
            "There are one or more issues that needs to be resolved for account to be active for the program. Detailed list of account issues are available in [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses) API.",
            "If account has issues but offers are servable. Some of the issue can make account DISAPPROVED after a certain deadline.",
            "Account is under review.",
            "Account is waiting for review to start.",
            "Program is currently onboarding. Upload valid offers to complete onboarding."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "APPROVED",
            "DISAPPROVED",
            "WARNING",
            "UNDER_REVIEW",
            "PENDING_REVIEW",
            "ONBOARDING"
          ]
        },
        "reviewEligibilityStatus": {
          "description": "If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.",
          "enumDescriptions": [
            "Review eligibility state is unknown.",
            "Account is eligible for review for a specified region code.",
            "Account is not eligible for review for a specified region code."
          ],
          "enum": [
            "REVIEW_ELIGIBILITY_UNSPECIFIED",
            "ELIGIBLE",
            "INELIGIBLE"
          ],
          "type": "string"
        },
        "regionCodes": {
          "description": "The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onboardingIssues": {
          "description": "Issues that must be fixed to be eligible for review.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disapprovalDate": {
          "description": "Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.",
          "type": "string"
        },
        "reviewIneligibilityReasonDescription": {
          "type": "string",
          "description": "Reason a program in a specific region isn’t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`."
        },
        "reviewIssues": {
          "items": {
            "type": "string"
          },
          "description": "Issues evaluated in the review process. Fix all issues before requesting a review.",
          "type": "array"
        },
        "reviewIneligibilityReason": {
          "description": "Review ineligibility reason if account is not eligible for review.",
          "enum": [
            "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED",
            "ONBOARDING_ISSUES",
            "NOT_ENOUGH_OFFERS",
            "IN_COOLDOWN_PERIOD",
            "ALREADY_UNDER_REVIEW",
            "NO_REVIEW_REQUIRED",
            "WILL_BE_REVIEWED_AUTOMATICALLY",
            "IS_RETIRED",
            "ALREADY_REVIEWED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Requesting a review from Google is not possible.",
            "All onboarding issues needs to be fixed.",
            "Not enough offers uploaded for this country.",
            "Cooldown period applies. Wait until cooldown period ends.",
            "Account is already under review.",
            "No issues available to review.",
            "Account will be automatically reviewed at the end of the grace period.",
            "Account is retired. Should not appear in MC.",
            "Account was already reviewd."
          ]
        },
        "reviewIneligibilityReasonDetails": {
          "$ref": "FreeListingsProgramStatusReviewIneligibilityReasonDetails",
          "description": "Additional information for ineligibility. If `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is provided."
        }
      },
      "type": "object",
      "id": "FreeListingsProgramStatusRegionStatus",
      "description": "Status of program and region."
    },
    "AccountstatusesCustomBatchResponse": {
      "type": "object",
      "id": "AccountstatusesCustomBatchResponse",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccountstatusesCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountstatusesCustomBatchResponse`\".",
          "type": "string"
        }
      }
    },
    "LiasettingsRequestInventoryVerificationResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsRequestInventoryVerificationResponse`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LiasettingsRequestInventoryVerificationResponse"
    },
    "AccountImageImprovementsSettings": {
      "properties": {
        "allowAutomaticImageImprovements": {
          "description": "Enables automatic image improvements.",
          "type": "boolean"
        }
      },
      "description": "Settings for the Automatic Image Improvements.",
      "id": "AccountImageImprovementsSettings",
      "type": "object"
    },
    "AccountsListLinksResponse": {
      "id": "AccountsListLinksResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of links."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsListLinksResponse`\".",
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "LinkedAccount"
          },
          "type": "array",
          "description": "The list of available links."
        }
      },
      "type": "object"
    },
    "ShippingsettingsCustomBatchResponseEntry": {
      "id": "ShippingsettingsCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "shippingSettings": {
          "$ref": "ShippingSettings",
          "description": "The retrieved or updated account shipping settings."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry to which this entry responds."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsCustomBatchResponseEntry`\""
        }
      },
      "description": "A batch entry encoding a single non-batch shipping settings response."
    },
    "RequestReviewFreeListingsRequest": {
      "description": "Request message for the RequestReviewFreeListings Program method.",
      "type": "object",
      "properties": {
        "regionCode": {
          "type": "string",
          "description": "The code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country for which review is to be requested."
        }
      },
      "id": "RequestReviewFreeListingsRequest"
    },
    "OrdersCreateTestReturnResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCreateTestReturnResponse`\"."
        },
        "returnId": {
          "type": "string",
          "description": "The ID of the newly created test order return."
        }
      },
      "id": "OrdersCreateTestReturnResponse"
    },
    "GmbAccountsGmbAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Business Profile."
        },
        "type": {
          "type": "string",
          "description": "The type of the Business Profile (User or Business)."
        },
        "listingCount": {
          "type": "string",
          "format": "uint64",
          "description": "Number of listings under this account."
        },
        "email": {
          "type": "string",
          "description": "The email which identifies the Business Profile."
        }
      },
      "id": "GmbAccountsGmbAccount"
    },
    "ProductTax": {
      "id": "ProductTax",
      "properties": {
        "region": {
          "description": "The geographic region to which the tax rate applies.",
          "type": "string"
        },
        "locationId": {
          "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
          "format": "int64",
          "type": "string"
        },
        "country": {
          "description": "The country within which the item is taxed, specified as a CLDR territory code.",
          "type": "string"
        },
        "taxShip": {
          "description": "Should be set to true if tax is charged on shipping.",
          "type": "boolean"
        },
        "rate": {
          "type": "number",
          "description": "The percentage of tax rate that applies to the item price.",
          "format": "double"
        },
        "postalCode": {
          "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RepricingProductReport": {
      "properties": {
        "inapplicabilityDetails": {
          "description": "List of all reasons the rule did not apply to the product during the specified reporting period.",
          "items": {
            "$ref": "InapplicabilityDetails"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of the rule.",
          "type": "string",
          "enumDescriptions": [
            "Unused.",
            "Statistical measurement based rules among Google SA merchants. If this rule is chosen, repricer will adjust the offer price based on statistical metrics (currently only min is available) among other merchants who sell the same product. Details need to be provdided in the RuleDefinition.",
            "Cost of goods sale based rule. Repricer will adjust the offer price based on the offer's sale cost which is provided by the merchant.",
            "Sales volume based rule. Repricer will adjust the offer price based on the offer's sales volume in the past period of time defined within the rule.",
            "Competitive price rule. Repricer will adjust the offer price based on the min price from a list of unnamed big competitors."
          ],
          "enum": [
            "REPRICING_RULE_TYPE_UNSPECIFIED",
            "TYPE_STATS_BASED",
            "TYPE_COGS_BASED",
            "TYPE_SALES_VOLUME_BASED",
            "TYPE_COMPETITIVE_PRICE"
          ]
        },
        "lowWatermark": {
          "description": "Minimum displayed price after repriced during this reporting period.",
          "$ref": "PriceAmount"
        },
        "applicationCount": {
          "format": "int64",
          "type": "string",
          "description": "Total count of Repricer applications. This value captures how many times the rule of this type was applied to this product during this reporting period."
        },
        "totalGmv": {
          "description": "Total GMV generated by impacted products while the rule was active on the date of the report. This value includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.",
          "$ref": "PriceAmount"
        },
        "buyboxWinningProductStats": {
          "$ref": "RepricingProductReportBuyboxWinningProductStats",
          "description": "Stats specific to buybox winning rules for product report (deprecated)."
        },
        "ruleIds": {
          "type": "array",
          "description": "Ids of the Repricing rule for this report.",
          "items": {
            "type": "string"
          }
        },
        "date": {
          "$ref": "Date",
          "description": "Date of the stats in this report. The report starts and ends according to the merchant's timezone."
        },
        "orderItemCount": {
          "format": "int32",
          "description": "Total unit count of impacted products ordered while the rule was active on the date of the report. This count includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.",
          "type": "integer"
        },
        "highWatermark": {
          "$ref": "PriceAmount",
          "description": "Maximum displayed price after repriced during this reporting period."
        }
      },
      "type": "object",
      "id": "RepricingProductReport",
      "description": "Resource that represents a daily Repricing product report. Each report contains stats for a single type of Repricing rule for a single product on a given day. If there are multiple rules of the same type for the product on that day, the report lists all the rules by rule ids, combines the stats, and paginates the results by date. To retrieve the stats of a particular rule, provide the rule_id in the request."
    },
    "ReturnpolicyListResponse": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ReturnPolicy"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnpolicyListResponse`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ReturnpolicyListResponse"
    },
    "OrdersListResponse": {
      "id": "OrdersListResponse",
      "properties": {
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of orders.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersListResponse`\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Order"
          }
        }
      },
      "type": "object"
    },
    "DatafeedFormat": {
      "id": "DatafeedFormat",
      "properties": {
        "quotingMode": {
          "type": "string",
          "description": "Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`normal character`\" - \"`value quoting`\" "
        },
        "fileEncoding": {
          "type": "string",
          "description": "Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \"`latin-1`\" - \"`utf-16be`\" - \"`utf-16le`\" - \"`utf-8`\" - \"`windows-1252`\" "
        },
        "columnDelimiter": {
          "type": "string",
          "description": "Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`pipe`\" - \"`tab`\" - \"`tilde`\" "
        }
      },
      "type": "object"
    },
    "PosCustomBatchRequest": {
      "type": "object",
      "id": "PosCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "PosCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "OrderreportsListTransactionsResponse": {
      "type": "object",
      "id": "OrderreportsListTransactionsResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderreportsListTransactionsResponse`\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of transactions.",
          "type": "string"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "OrderReportTransaction"
          },
          "description": "The list of transactions."
        }
      }
    },
    "CarriersCarrier": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the carrier (for example, `\"UPS\"`). Always present."
        },
        "eddServices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of services supported for EDD (Estimated Delivery Date) calculation. This is the list of valid values for WarehouseBasedDeliveryTime.carrierService."
        },
        "country": {
          "type": "string",
          "description": "The CLDR country code of the carrier (for example, \"US\"). Always present."
        },
        "services": {
          "items": {
            "type": "string"
          },
          "description": "A list of supported services (for example, `\"ground\"`) for that carrier. Contains at least one service. This is the list of valid values for CarrierRate.carrierService.",
          "type": "array"
        }
      },
      "id": "CarriersCarrier",
      "type": "object"
    },
    "PubsubNotificationSettings": {
      "properties": {
        "cloudTopicName": {
          "type": "string",
          "description": "Cloud pub/sub topic to which notifications are sent (read-only)."
        },
        "registeredEvents": {
          "items": {
            "type": "string"
          },
          "description": "List of event types. Acceptable values are: - \"`orderPendingShipment`\" ",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#pubsubNotificationSettings`\"",
          "type": "string"
        }
      },
      "id": "PubsubNotificationSettings",
      "type": "object",
      "description": "Settings for Pub/Sub notifications, all methods require that the caller is a direct user of the merchant center account."
    },
    "LiasettingsCustomBatchResponseEntry": {
      "type": "object",
      "id": "LiasettingsCustomBatchResponseEntry",
      "properties": {
        "posDataProviders": {
          "type": "array",
          "description": "The list of POS data providers.",
          "items": {
            "$ref": "PosDataProviders"
          }
        },
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32"
        },
        "gmbAccounts": {
          "description": "The list of accessible Business Profiles.",
          "$ref": "GmbAccounts"
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The retrieved or updated Lia settings."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponseEntry`\""
        }
      }
    },
    "ReturnaddressCustomBatchRequest": {
      "id": "ReturnaddressCustomBatchRequest",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "ReturnaddressCustomBatchRequestEntry"
          }
        }
      },
      "type": "object"
    },
    "ProductAmount": {
      "type": "object",
      "id": "ProductAmount",
      "properties": {
        "remittedTaxAmount": {
          "description": "Remitted tax value.",
          "$ref": "Price"
        },
        "priceAmount": {
          "$ref": "Price",
          "description": "The pre-tax or post-tax price depending on the location of the order."
        },
        "taxAmount": {
          "$ref": "Price",
          "description": "Tax value."
        }
      }
    },
    "OrderreturnsCreateOrderReturnResponse": {
      "type": "object",
      "id": "OrderreturnsCreateOrderReturnResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "orderReturn": {
          "description": "Created order return.",
          "$ref": "MerchantOrderReturn"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderreturnsCreateOrderReturnResponse`\"."
        }
      }
    },
    "AccountAdsLink": {
      "properties": {
        "status": {
          "description": "Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google Ads or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" ",
          "type": "string"
        },
        "adsId": {
          "format": "uint64",
          "type": "string",
          "description": "Customer ID of the Ads account."
        }
      },
      "type": "object",
      "id": "AccountAdsLink"
    },
    "ReturnAddress": {
      "type": "object",
      "id": "ReturnAddress",
      "properties": {
        "address": {
          "$ref": "ReturnAddressAddress",
          "description": "Required. The address."
        },
        "label": {
          "type": "string",
          "description": "Required. The user-defined label of the return address. For the default address, use the label \"default\"."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Required. The merchant's contact phone number regarding the return."
        },
        "returnAddressId": {
          "type": "string",
          "description": "Return address ID generated by Google."
        },
        "country": {
          "type": "string",
          "description": "Required. The country of sale where the return address is applicable."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnAddress`\"",
          "type": "string"
        }
      },
      "description": "Return address resource."
    },
    "OrdersInStoreRefundLineItemResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersInStoreRefundLineItemResponse`\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersInStoreRefundLineItemResponse"
    },
    "RegionalinventoryCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch regional inventory response.",
      "id": "RegionalinventoryCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#regionalinventoryCustomBatchResponseEntry`\".",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        },
        "regionalInventory": {
          "description": "Price and availability of the product.",
          "$ref": "RegionalInventory"
        },
        "errors": {
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.",
          "$ref": "Errors"
        }
      }
    },
    "InvoiceSummaryAdditionalChargeSummary": {
      "type": "object",
      "properties": {
        "totalAmount": {
          "description": "[required] Total additional charge for this type.",
          "$ref": "Amount"
        },
        "type": {
          "type": "string",
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" "
        }
      },
      "id": "InvoiceSummaryAdditionalChargeSummary"
    },
    "LiaSettings": {
      "properties": {
        "accountId": {
          "format": "uint64",
          "description": "The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liaSettings`\"",
          "type": "string"
        },
        "countrySettings": {
          "items": {
            "$ref": "LiaCountrySettings"
          },
          "type": "array",
          "description": "The LIA settings for each country."
        }
      },
      "description": "Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.",
      "type": "object",
      "id": "LiaSettings"
    },
    "OrdersCancelLineItemRequest": {
      "properties": {
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`failedToCaptureFunds`\" ",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "quantity": {
          "description": "The quantity to cancel.",
          "type": "integer",
          "format": "uint32"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required."
        }
      },
      "id": "OrdersCancelLineItemRequest",
      "type": "object"
    },
    "OrderRefund": {
      "properties": {
        "amount": {
          "$ref": "Price",
          "description": "The amount that is refunded."
        },
        "creationDate": {
          "type": "string",
          "description": "Date on which the item has been created, in ISO 8601 format."
        },
        "actor": {
          "type": "string",
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" "
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrderRefund"
    },
    "OrderCustomerMarketingRightsInfo": {
      "id": "OrderCustomerMarketingRightsInfo",
      "type": "object",
      "properties": {
        "explicitMarketingPreference": {
          "description": "Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - \"`denied`\" - \"`granted`\" ",
          "type": "string"
        },
        "marketingEmailAddress": {
          "description": "Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account.",
          "type": "string"
        },
        "lastUpdatedTimestamp": {
          "type": "string",
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet."
        }
      }
    },
    "OrderPickupDetailsCollector": {
      "id": "OrderPickupDetailsCollector",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the person picking up the shipment."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the person picking up the shipment."
        }
      },
      "type": "object"
    },
    "TransitTableTransitTimeRowTransitTimeValue": {
      "properties": {
        "minTransitTimeInDays": {
          "type": "integer",
          "description": "Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.",
          "format": "uint32"
        },
        "maxTransitTimeInDays": {
          "type": "integer",
          "format": "uint32",
          "description": "Must be greater than or equal to `minTransitTimeInDays`."
        }
      },
      "id": "TransitTableTransitTimeRowTransitTimeValue",
      "type": "object"
    },
    "PosSale": {
      "type": "object",
      "id": "PosSale",
      "description": "The change of the available quantity of an item at the given store.",
      "properties": {
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posSale`\""
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.",
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "Required. The relative change of the available quantity. Negative for items returned."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        }
      }
    },
    "OrderreturnsProcessResponse": {
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderreturnsProcessResponse`\".",
          "type": "string"
        }
      },
      "id": "OrderreturnsProcessResponse",
      "type": "object"
    },
    "TestOrder": {
      "properties": {
        "predefinedPickupDetails": {
          "type": "string",
          "description": "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "shippingOption": {
          "type": "string",
          "description": "Required. The requested shipping option. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" "
        },
        "deliveryDetails": {
          "description": "Overrides the predefined delivery details if provided.",
          "$ref": "TestOrderDeliveryDetails"
        },
        "predefinedEmail": {
          "description": "Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" ",
          "type": "string"
        },
        "predefinedBillingAddress": {
          "type": "string",
          "description": "Required. The billing address. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "lineItems": {
          "items": {
            "$ref": "TestOrderLineItem"
          },
          "type": "array",
          "description": "Required. Line items that are ordered. At least one line item must be provided."
        },
        "enableOrderinvoices": {
          "type": "boolean",
          "description": "Whether the orderinvoices service should support this order."
        },
        "pickupDetails": {
          "description": "Overrides the predefined pickup details if provided.",
          "$ref": "TestOrderPickupDetails"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#testOrder`\"",
          "type": "string"
        },
        "notificationMode": {
          "description": "Restricted. Do not use.",
          "type": "string"
        },
        "promotions": {
          "items": {
            "$ref": "OrderPromotion"
          },
          "type": "array",
          "description": "Promotions associated with the order."
        },
        "predefinedDeliveryAddress": {
          "description": "Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
          "type": "string"
        },
        "shippingCost": {
          "$ref": "Price",
          "description": "Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states."
        }
      },
      "type": "object",
      "id": "TestOrder"
    },
    "DatafeedstatusesCustomBatchRequestEntry": {
      "id": "DatafeedstatusesCustomBatchRequestEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch datafeedstatuses request.",
      "properties": {
        "datafeedId": {
          "type": "string",
          "description": "The ID of the data feed to get.",
          "format": "uint64"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" "
        },
        "country": {
          "type": "string",
          "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required."
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        },
        "language": {
          "type": "string",
          "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required."
        }
      }
    },
    "LocalinventoryCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "LocalinventoryCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "LocalinventoryCustomBatchRequest"
    },
    "RegionGeoTargetArea": {
      "id": "RegionGeoTargetArea",
      "type": "object",
      "properties": {
        "geotargetCriteriaIds": {
          "description": "Required. A non-empty list of [location IDs](https://developers.google.com/adwords/api/docs/appendix/geotargeting). They must all be of the same location type (e.g., state).",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "description": "A list of geotargets that defines the region area."
    },
    "ProductStatusDestinationStatus": {
      "id": "ProductStatusDestinationStatus",
      "type": "object",
      "properties": {
        "destination": {
          "description": "The name of the destination",
          "type": "string"
        },
        "disapprovedCountries": {
          "items": {
            "type": "string"
          },
          "description": "List of country codes (ISO 3166-1 alpha-2) where the offer is disapproved.",
          "type": "array"
        },
        "approvedCountries": {
          "description": "List of country codes (ISO 3166-1 alpha-2) where the offer is approved.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "Destination approval status in `targetCountry` of the offer."
        },
        "pendingCountries": {
          "description": "List of country codes (ISO 3166-1 alpha-2) where the offer is pending approval.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "OrderreturnsPartialRefund": {
      "id": "OrderreturnsPartialRefund",
      "type": "object",
      "properties": {
        "taxAmount": {
          "description": "Tax amount to be refunded. Note: This has different meaning depending on the location of the order.",
          "$ref": "Price"
        },
        "priceAmount": {
          "description": "The pre-tax or post-tax amount to be refunded, depending on the location of the order.",
          "$ref": "Price"
        }
      }
    },
    "OrderinvoicesCreateChargeInvoiceResponse": {
      "id": "OrderinvoicesCreateChargeInvoiceResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderinvoicesCreateChargeInvoiceResponse`\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "OrdersShipLineItemsRequest": {
      "type": "object",
      "properties": {
        "lineItems": {
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "description": "Line items to ship.",
          "type": "array"
        },
        "shipmentInfos": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          },
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs)."
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      },
      "id": "OrdersShipLineItemsRequest"
    },
    "OrderReportDisbursement": {
      "id": "OrderReportDisbursement",
      "properties": {
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "disbursementDate": {
          "description": "The date the disbursement was initiated, in ISO 8601 format.",
          "type": "string"
        },
        "disbursementId": {
          "type": "string",
          "description": "The ID of the disbursement."
        },
        "disbursementCreationDate": {
          "type": "string",
          "description": "The disbursement date, in ISO 8601 format."
        },
        "disbursementAmount": {
          "$ref": "Price",
          "description": "The disbursement amount."
        }
      },
      "description": "Order disbursement. All methods require the payment analyst role.",
      "type": "object"
    },
    "ShippingsettingsListResponse": {
      "id": "ShippingsettingsListResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsListResponse`\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ShippingSettings"
          }
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of shipping settings.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MinimumOrderValueTableStoreCodeSetWithMov": {
      "id": "MinimumOrderValueTableStoreCodeSetWithMov",
      "type": "object",
      "description": "A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.",
      "properties": {
        "value": {
          "$ref": "Price",
          "description": "The minimum order value for the given stores."
        },
        "storeCodes": {
          "description": "A list of unique store codes or empty for the catch all.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "OrdersRefundOrderRequest": {
      "type": "object",
      "properties": {
        "fullRefund": {
          "description": "If true, the full order will be refunded, including shipping. If this is true, amount shouldn't be provided and will be ignored.",
          "type": "boolean"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund. Acceptable values are: - \"`courtesyAdjustment`\" - \"`other`\" "
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amount": {
          "$ref": "MonetaryAmount",
          "description": "The amount that is refunded. If this is not the first refund for the order, this should be the newly refunded amount."
        }
      },
      "id": "OrdersRefundOrderRequest"
    },
    "Amount": {
      "properties": {
        "priceAmount": {
          "$ref": "Price",
          "description": "[required] The pre-tax or post-tax price depending on the location of the order."
        },
        "taxAmount": {
          "$ref": "Price",
          "description": "[required] Tax value."
        }
      },
      "id": "Amount",
      "type": "object"
    },
    "Promotion": {
      "type": "object",
      "properties": {
        "offerType": {
          "enum": [
            "OFFER_TYPE_UNSPECIFIED",
            "NO_CODE",
            "GENERIC_CODE"
          ],
          "description": "Required. Type of the promotion.",
          "type": "string",
          "enumDescriptions": [
            "Unknown offer type.",
            "Offer type without a code.",
            "Offer type with a code."
          ]
        },
        "redemptionChannel": {
          "items": {
            "enumDescriptions": [
              "Indicates that the channel is unspecified.",
              "Indicates that the channel is in store.",
              "Indicates that the channel is online."
            ],
            "enum": [
              "REDEMPTION_CHANNEL_UNSPECIFIED",
              "IN_STORE",
              "ONLINE"
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Required. Redemption channel for the promotion. At least one channel is required."
        },
        "freeGiftValue": {
          "$ref": "PriceAmount",
          "description": "Free gift value for the promotion."
        },
        "minimumPurchaseQuantity": {
          "format": "int32",
          "type": "integer",
          "description": "Minimum purchase quantity for the promotion."
        },
        "productType": {
          "description": "Product filter by product type for the promotion.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "getThisQuantityDiscounted": {
          "description": "The number of items discounted in the promotion.",
          "type": "integer",
          "format": "int32"
        },
        "productApplicability": {
          "enum": [
            "PRODUCT_APPLICABILITY_UNSPECIFIED",
            "ALL_PRODUCTS",
            "SPECIFIC_PRODUCTS"
          ],
          "description": "Required. Applicability of the promotion to either all products or only specific products.",
          "type": "string",
          "enumDescriptions": [
            "Which products the promotion applies to is unknown.",
            "Applicable to all products.",
            "Applicable to only a single product or list of products."
          ]
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The target country used as part of the unique identifier. Can be `AU`, `CA`, `DE`, `FR`, `GB`, `IN` or `US`."
        },
        "moneyOffAmount": {
          "description": "The money off amount offered in the promotion.",
          "$ref": "PriceAmount"
        },
        "freeGiftDescription": {
          "description": "Free gift description for the promotion.",
          "type": "string"
        },
        "itemGroupIdExclusion": {
          "items": {
            "type": "string"
          },
          "description": "Product filter by item group ID exclusion for the promotion.",
          "type": "array"
        },
        "orderLimit": {
          "type": "integer",
          "description": "Order limit for the promotion.",
          "format": "int32"
        },
        "itemIdExclusion": {
          "description": "Product filter by item ID exclusion for the promotion.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "itemId": {
          "description": "Product filter by item ID for the promotion.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limitQuantity": {
          "format": "int32",
          "description": "Maximum purchase quantity for the promotion.",
          "type": "integer"
        },
        "promotionId": {
          "type": "string",
          "description": "Required. The user provided promotion ID to uniquely identify the promotion."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The content language used as part of the unique identifier. `en` content language is available for all target countries. `fr` content language is available for `CA` and `FR` target countries, and `de` content language is available for `DE` target country."
        },
        "id": {
          "description": "Required. Output only. The REST promotion ID to uniquely identify the promotion. Content API methods that operate on promotions take this as their `promotionId` parameter. The REST ID for a promotion is of the form channel:contentLanguage:targetCountry:promotionId The `channel` field has a value of `\"online\"`, `\"in_store\"`, or `\"online_in_store\"`.",
          "readOnly": true,
          "type": "string"
        },
        "shippingServiceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Shipping service names for the promotion."
        },
        "freeGiftItemId": {
          "type": "string",
          "description": "Free gift item ID for the promotion."
        },
        "promotionDisplayDates": {
          "description": "String representation of the promotion display dates. Deprecated. Use `promotion_display_time_period` instead.",
          "type": "string"
        },
        "brandExclusion": {
          "type": "array",
          "description": "Product filter by brand exclusion for the promotion.",
          "items": {
            "type": "string"
          }
        },
        "itemGroupId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Product filter by item group ID for the promotion."
        },
        "productTypeExclusion": {
          "type": "array",
          "description": "Product filter by product type exclusion for the promotion.",
          "items": {
            "type": "string"
          }
        },
        "promotionDestinationIds": {
          "description": "Destination ID for the promotion.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "brand": {
          "items": {
            "type": "string"
          },
          "description": "Product filter by brand for the promotion.",
          "type": "array"
        },
        "promotionEffectiveTimePeriod": {
          "description": "Required. `TimePeriod` representation of the promotion's effective dates.",
          "$ref": "TimePeriod"
        },
        "percentOff": {
          "description": "The percentage discount offered in the promotion.",
          "format": "int32",
          "type": "integer"
        },
        "promotionDisplayTimePeriod": {
          "$ref": "TimePeriod",
          "description": "`TimePeriod` representation of the promotion's display dates."
        },
        "longTitle": {
          "type": "string",
          "description": "Required. Long title for the promotion."
        },
        "minimumPurchaseAmount": {
          "description": "Minimum purchase amount for the promotion.",
          "$ref": "PriceAmount"
        },
        "moneyBudget": {
          "description": "Cost cap for the promotion.",
          "$ref": "PriceAmount"
        },
        "limitValue": {
          "description": "Maximum purchase value for the promotion.",
          "$ref": "PriceAmount"
        },
        "couponValueType": {
          "enumDescriptions": [
            "Indicates that the coupon value type is unspecified.",
            "Money off coupon value type.",
            "Percent off coupon value type.",
            "Buy M quantity, get N money off coupon value type. `buy_this_quantity` and `get_this_quantity` must be present. `money_off_amount` must also be present.",
            "Buy M quantity, get N percent off coupon value type. `buy_this_quantity` and `get_this_quantity` must be present. `percent_off_percentage` must also be present.",
            "Buy M quantity, get money off. `buy_this_quantity` and `money_off_amount` must be present.",
            "Buy M quantity, get money off. `buy_this_quantity` and `percent_off_percentage` must be present.",
            "Free gift with description only.",
            "Free gift with value (description is optional).",
            "Free gift with item ID (description is optional).",
            "Standard free shipping coupon value type.",
            "Overnight free shipping coupon value type.",
            "Two day free shipping coupon value type."
          ],
          "description": "Required. Coupon value type for the promotion.",
          "type": "string",
          "enum": [
            "COUPON_VALUE_TYPE_UNSPECIFIED",
            "MONEY_OFF",
            "PERCENT_OFF",
            "BUY_M_GET_N_MONEY_OFF",
            "BUY_M_GET_N_PERCENT_OFF",
            "BUY_M_GET_MONEY_OFF",
            "BUY_M_GET_PERCENT_OFF",
            "FREE_GIFT",
            "FREE_GIFT_WITH_VALUE",
            "FREE_GIFT_WITH_ITEM_ID",
            "FREE_SHIPPING_STANDARD",
            "FREE_SHIPPING_OVERNIGHT",
            "FREE_SHIPPING_TWO_DAY"
          ]
        },
        "promotionEffectiveDates": {
          "description": "String representation of the promotion effective dates. Deprecated. Use `promotion_effective_time_period` instead.",
          "type": "string"
        },
        "genericRedemptionCode": {
          "description": "Generic redemption code for the promotion. To be used with the `offerType` field.",
          "type": "string"
        }
      },
      "description": "Represents a promotion. See the following articles for more details. * [Promotions feed specification](https://support.google.com/merchants/answer/2906014) * [Local promotions feed specification](https://support.google.com/merchants/answer/10146130) * [Promotions on Buy on Google product data specification](https://support.google.com/merchants/answer/9173673)",
      "id": "Promotion"
    },
    "ProductProductDetail": {
      "properties": {
        "sectionName": {
          "type": "string",
          "description": "The section header used to group a set of product details."
        },
        "attributeName": {
          "type": "string",
          "description": "The name of the product detail."
        },
        "attributeValue": {
          "description": "The value of the product detail.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProductProductDetail"
    },
    "ShippingsettingsCustomBatchRequestEntry": {
      "id": "ShippingsettingsCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch shippingsettings request.",
      "type": "object",
      "properties": {
        "shippingSettings": {
          "$ref": "ShippingSettings",
          "description": "The account shipping settings to update. Only defined if the method is `update`."
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" ",
          "type": "string"
        },
        "accountId": {
          "format": "uint64",
          "description": "The ID of the account for which to get/update account shipping settings.",
          "type": "string"
        }
      }
    },
    "ReturnPolicyOnlineRestockingFee": {
      "properties": {
        "microPercent": {
          "description": "Percent of total price in micros. 15,000,000 means 15% of the total price would be charged.",
          "format": "int32",
          "type": "integer"
        },
        "fixedFee": {
          "description": "Fixed restocking fee.",
          "$ref": "PriceAmount"
        }
      },
      "id": "ReturnPolicyOnlineRestockingFee",
      "description": "The restocking fee. This can either be a fixed fee or a micro percent.",
      "type": "object"
    },
    "LiaPosDataProvider": {
      "id": "LiaPosDataProvider",
      "properties": {
        "posDataProviderId": {
          "type": "string",
          "description": "The ID of the POS data provider.",
          "format": "uint64"
        },
        "posExternalAccountId": {
          "type": "string",
          "description": "The account ID by which this merchant is known to the POS data provider."
        }
      },
      "type": "object"
    },
    "ProductstatusesCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductstatusesCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      },
      "type": "object",
      "id": "ProductstatusesCustomBatchRequest"
    },
    "OrderTrackingSignalShipmentLineItemMapping": {
      "type": "object",
      "description": "Represents how many items are in the shipment for the given shipment_id and line_item_id.",
      "properties": {
        "shipmentId": {
          "type": "string",
          "description": "Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response."
        },
        "quantity": {
          "format": "int64",
          "description": "The line item quantity in the shipment.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "Required. The line item ID."
        }
      },
      "id": "OrderTrackingSignalShipmentLineItemMapping"
    },
    "Table": {
      "properties": {
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required."
        },
        "name": {
          "description": "Name of the table. Required for subtables, ignored for the main table.",
          "type": "string"
        },
        "rowHeaders": {
          "description": "Headers of the table's rows. Required.",
          "$ref": "Headers"
        },
        "columnHeaders": {
          "description": "Headers of the table's columns. Optional: if not set then the table has only one dimension.",
          "$ref": "Headers"
        }
      },
      "id": "Table",
      "type": "object"
    },
    "ReturnPolicy": {
      "type": "object",
      "id": "ReturnPolicy",
      "description": "Return policy resource.",
      "properties": {
        "policy": {
          "description": "Required. The policy.",
          "$ref": "ReturnPolicyPolicy"
        },
        "name": {
          "description": "Required. The name of the policy as shown in Merchant Center.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Required. The country of sale where the return policy is applicable."
        },
        "nonFreeReturnReasons": {
          "type": "array",
          "description": "Return reasons that will incur return fees.",
          "items": {
            "type": "string"
          }
        },
        "returnShippingFee": {
          "description": "The return shipping fee that will apply to non free return reasons.",
          "$ref": "Price"
        },
        "returnPolicyId": {
          "type": "string",
          "description": "Return policy ID generated by Google."
        },
        "label": {
          "type": "string",
          "description": "Required. The user-defined label of the return policy. For the default policy, use the label \"default\"."
        },
        "seasonalOverrides": {
          "description": "An optional list of seasonal overrides.",
          "type": "array",
          "items": {
            "$ref": "ReturnPolicySeasonalOverride"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnPolicy`\""
        }
      }
    },
    "LiasettingsListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsListResponse`\"."
        },
        "resources": {
          "items": {
            "$ref": "LiaSettings"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of LIA settings.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LiasettingsListResponse"
    },
    "ReturnShipment": {
      "id": "ReturnShipment",
      "properties": {
        "shipmentId": {
          "description": "Shipment ID generated by Google.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "State of the shipment. Acceptable values are: - \"`completed`\" - \"`new`\" - \"`shipped`\" - \"`undeliverable`\" - \"`pending`\" "
        },
        "shippingDate": {
          "description": "The date of shipping of the shipment, in ISO 8601 format.",
          "type": "string"
        },
        "creationDate": {
          "description": "The date of creation of the shipment, in ISO 8601 format.",
          "type": "string"
        },
        "deliveryDate": {
          "type": "string",
          "description": "The date of delivery of the shipment, in ISO 8601 format."
        },
        "returnMethodType": {
          "type": "string",
          "description": "Type of the return method. Acceptable values are: - \"`byMail`\" - \"`contactCustomerSupport`\" - \"`returnless`\" - \"`inStore`\" "
        },
        "shipmentTrackingInfos": {
          "items": {
            "$ref": "ShipmentTrackingInfo"
          },
          "type": "array",
          "description": "Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially."
        }
      },
      "type": "object"
    },
    "Region": {
      "properties": {
        "regionalInventoryEligible": {
          "description": "Output only. Indicates if the region is eligible to use in the Regional Inventory configuration.",
          "type": "boolean",
          "readOnly": true
        },
        "geotargetArea": {
          "$ref": "RegionGeoTargetArea",
          "description": "A list of geotargets that defines the region area."
        },
        "merchantId": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. Immutable. Merchant that owns the region."
        },
        "regionId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The ID uniquely identifying each region."
        },
        "shippingEligible": {
          "description": "Output only. Indicates if the region is eligible to use in the Shipping Services configuration.",
          "readOnly": true,
          "type": "boolean"
        },
        "postalCodeArea": {
          "$ref": "RegionPostalCodeArea",
          "description": "A list of postal codes that defines the region area."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the region."
        }
      },
      "description": "Represents a geographic region that you can use as a target with both the `RegionalInventory` and `ShippingSettings` services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets.",
      "type": "object",
      "id": "Region"
    },
    "Metrics": {
      "properties": {
        "ctr": {
          "format": "double",
          "type": "number",
          "description": "Click-through rate - the number of clicks merchant's products receive (clicks) divided by the number of times the products are shown (impressions)."
        },
        "orders": {
          "format": "int64",
          "type": "string",
          "description": "Number of placed orders. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by product dimensions and customer_country_code.**"
        },
        "daysToShip": {
          "description": "Average number of days between an order being placed and the order being fully shipped, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**",
          "format": "double",
          "type": "number"
        },
        "unshippedOrders": {
          "description": "Number of orders not shipped or partially shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped orders over the days in the queried period. **This metric cannot be segmented by product dimensions and customer_country_code.**",
          "format": "double",
          "type": "number"
        },
        "shippedItems": {
          "description": "Number of shipped items, reported on the shipment date. **This metric cannot be segmented by customer_country_code.**",
          "type": "string",
          "format": "int64"
        },
        "unshippedItems": {
          "description": "Number of ordered items not shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped items over the days in the queried period. **This metric cannot be segmented by customer_country_code.**",
          "type": "number",
          "format": "double"
        },
        "returnRate": {
          "type": "number",
          "format": "double",
          "description": "Total price of returned items divided by the total price of shipped items, reported on the order date. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**"
        },
        "shippedItemSalesMicros": {
          "format": "int64",
          "type": "string",
          "description": "Total price of shipped items, reported on the order date. Excludes shipping and taxes (US only). The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**"
        },
        "shippedOrders": {
          "description": "Number of fully shipped orders, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**",
          "format": "int64",
          "type": "string"
        },
        "rejectedItems": {
          "description": "Number of ordered items canceled by the merchant, reported on the order date. **This metric cannot be segmented by customer_country_code.**",
          "type": "string",
          "format": "int64"
        },
        "clicks": {
          "description": "Number of clicks.",
          "format": "int64",
          "type": "string"
        },
        "itemFillRate": {
          "format": "double",
          "type": "number",
          "description": "Percentage of shipped items in relation to all finalized items (shipped or rejected by the merchant; unshipped items are not taken into account), reported on the order date. Item fill rate is lowered by merchant rejections. **This metric cannot be segmented by customer_country_code.**"
        },
        "impressions": {
          "type": "string",
          "description": "Number of times merchant's products are shown.",
          "format": "int64"
        },
        "returnedItems": {
          "description": "Number of ordered items sent back for return, reported on the date when the merchant accepted the return. **This metric cannot be segmented by customer_country_code.**",
          "format": "int64",
          "type": "string"
        },
        "orderedItemSalesMicros": {
          "format": "int64",
          "description": "Total price of ordered items. Excludes shipping, taxes (US only), and customer cancellations that happened within 30 minutes of placing the order. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**",
          "type": "string"
        },
        "orderedItems": {
          "type": "string",
          "format": "int64",
          "description": "Number of ordered items. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by customer_country_code.**"
        },
        "conversionValueMicros": {
          "description": "Value of conversions in micros attributed to the product, reported on the conversion date. The metric is currently available only for the FREE_PRODUCT_LISTING program. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response.",
          "format": "int64",
          "type": "string"
        },
        "conversions": {
          "type": "number",
          "format": "double",
          "description": "Number of conversions attributed to the product, reported on the conversion date. Depending on the attribution model, a conversion might be distributed across multiple clicks, where each click gets its own credit assigned. This metric is a sum of all such credits. The metric is currently available only for the FREE_PRODUCT_LISTING program."
        },
        "itemDaysToShip": {
          "description": "Average number of days between an item being ordered and the item being **This metric cannot be segmented by customer_country_code.**",
          "type": "number",
          "format": "double"
        },
        "aovMicros": {
          "format": "double",
          "description": "Average order value - the average value (total price of items) of all placed orders. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by product dimensions and customer_country_code.**",
          "type": "number"
        },
        "returnsMicros": {
          "type": "string",
          "description": "Total price of ordered items sent back for return, reported on the date when the merchant accepted the return. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**",
          "format": "int64"
        },
        "aos": {
          "type": "number",
          "format": "double",
          "description": "Average order size - the average number of items in an order. **This metric cannot be segmented by product dimensions and customer_country_code.**"
        },
        "conversionRate": {
          "description": "Number of conversions divided by the number of clicks, reported on the impression date. The metric is currently available only for the FREE_PRODUCT_LISTING program.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "Metrics",
      "description": "Performance metrics. Values are only set for metrics requested explicitly in the request's search query.",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryRefundItemItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "fullRefund": {
          "description": "If true, the full item will be refunded. If this is true, amount shouldn't be provided and will be ignored.",
          "type": "boolean"
        },
        "amount": {
          "$ref": "MonetaryAmount",
          "description": "The total amount that is refunded. (for example, refunding $5 each for 2 products should be done by setting quantity to 2 and amount to 10$) In case of multiple refunds, this should be the amount you currently want to refund to the customer."
        },
        "lineItemId": {
          "description": "The ID of the line item. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "description": "The number of products that are refunded.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "OrdersCustomBatchRequestEntryRefundItemItem"
    },
    "ECommercePlatformLinkInfo": {
      "type": "object",
      "id": "ECommercePlatformLinkInfo",
      "properties": {
        "externalAccountId": {
          "type": "string",
          "description": "The id used by the third party service provider to identify the merchant."
        }
      },
      "description": "Additional information required for E_COMMERCE_PLATFORM link type."
    },
    "OrderAddress": {
      "properties": {
        "recipientName": {
          "description": "Name of the recipient.",
          "type": "string"
        },
        "fullAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States "
        },
        "country": {
          "description": "CLDR country code (for example, \"US\").",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal Code or ZIP (for example, \"94043\").",
          "type": "string"
        },
        "streetAddress": {
          "description": "Street-level part of the address. Use `\\n` to add a second line.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPostOfficeBox": {
          "description": "Whether the address is a post office box.",
          "type": "boolean"
        },
        "locality": {
          "type": "string",
          "description": "City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs)."
        },
        "region": {
          "type": "string",
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\")."
        }
      },
      "id": "OrderAddress",
      "type": "object"
    },
    "PriceAmount": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The price represented as a number."
        },
        "currency": {
          "description": "The currency of the price.",
          "type": "string"
        }
      },
      "id": "PriceAmount",
      "description": "The price represented as a number and currency."
    },
    "LocalInventory": {
      "type": "object",
      "description": "Local inventory resource. For accepted attribute values, see the local product inventory feed specification.",
      "properties": {
        "price": {
          "description": "Price of the product.",
          "$ref": "Price"
        },
        "customAttributes": {
          "items": {
            "$ref": "CustomAttribute"
          },
          "description": "A list of custom (merchant-provided) attributes. Can also be used to submit any attribute of the feed specification in its generic form, for example, `{ \"name\": \"size type\", \"value\": \"regular\" }`.",
          "type": "array"
        },
        "salePrice": {
          "description": "Sale price of the product. Mandatory if `sale_price_effective_date` is defined.",
          "$ref": "Price"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#localInventory`\"",
          "type": "string"
        },
        "pickupMethod": {
          "type": "string",
          "description": "Supported pickup method for this offer. Unless the value is \"not supported\", this field must be submitted together with `pickupSla`. For accepted attribute values, see the local product inventory feed specification."
        },
        "instoreProductLocation": {
          "type": "string",
          "description": "In-store product location."
        },
        "availability": {
          "description": "Availability of the product. For accepted attribute values, see the local product inventory feed specification.",
          "type": "string"
        },
        "salePriceEffectiveDate": {
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates may be specified as 'null' if undecided.",
          "type": "string"
        },
        "pickupSla": {
          "type": "string",
          "description": "Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the local product inventory feed specification."
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "Quantity of the product. Must be nonnegative."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. Store code of this local inventory resource."
        }
      },
      "id": "LocalInventory"
    },
    "MerchantRejectionReason": {
      "type": "object",
      "id": "MerchantRejectionReason",
      "properties": {
        "description": {
          "description": "Description of the reason.",
          "type": "string"
        },
        "reasonCode": {
          "type": "string",
          "description": "Code of the rejection reason."
        }
      }
    },
    "LiasettingsSetInventoryVerificationContactResponse": {
      "type": "object",
      "id": "LiasettingsSetInventoryVerificationContactResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsSetInventoryVerificationContactResponse`\".",
          "type": "string"
        }
      }
    },
    "AccountYouTubeChannelLink": {
      "id": "AccountYouTubeChannelLink",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.",
          "type": "string"
        },
        "channelId": {
          "description": "Channel ID.",
          "type": "string"
        }
      }
    },
    "WarehouseCutoffTime": {
      "properties": {
        "minute": {
          "format": "int32",
          "type": "integer",
          "description": "Required. Minute of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Minute is based on the timezone of warehouse."
        },
        "hour": {
          "type": "integer",
          "description": "Required. Hour (24-hour clock) of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Hour is based on the timezone of warehouse.",
          "format": "int32"
        }
      },
      "id": "WarehouseCutoffTime",
      "type": "object"
    },
    "AccountShippingImprovements": {
      "description": "Not available for MCAs [accounts](https://support.google.com/merchants/answer/188487). By turning on [automatic shipping improvements](https://support.google.com/merchants/answer/10027038), you are allowing Google to improve the accuracy of your delivery times shown to shoppers using Google. More accurate delivery times, especially when faster, typically lead to better conversion rates. Google will improve your estimated delivery times based on various factors: * Delivery address of an order * Current handling time and shipping time settings * Estimated weekdays or business days * Parcel tracking data",
      "properties": {
        "allowShippingImprovements": {
          "type": "boolean",
          "description": "Enables automatic shipping improvements."
        }
      },
      "id": "AccountShippingImprovements",
      "type": "object"
    },
    "PosCustomBatchResponse": {
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "PosCustomBatchResponseEntry"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponse`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PosCustomBatchResponse"
    },
    "OrdersUpdateMerchantOrderIdRequest": {
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "The merchant order id to be assigned to the order. Must be unique per merchant."
        }
      },
      "id": "OrdersUpdateMerchantOrderIdRequest",
      "type": "object"
    },
    "ReturnpolicyCustomBatchResponse": {
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "ReturnpolicyCustomBatchResponseEntry"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnpolicyCustomBatchResponse`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ReturnpolicyCustomBatchResponse"
    },
    "PickupCarrierService": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the pickup service (for example, `\"Access point\"`). Required."
        },
        "carrierName": {
          "type": "string",
          "description": "The name of the pickup carrier (for example, `\"UPS\"`). Required."
        }
      },
      "id": "PickupCarrierService",
      "type": "object"
    },
    "PaymentServiceProviderLinkInfo": {
      "id": "PaymentServiceProviderLinkInfo",
      "description": "Additional information required for PAYMENT_SERVICE_PROVIDER link type.",
      "type": "object",
      "properties": {
        "externalAccountId": {
          "type": "string",
          "description": "The id used by the third party service provider to identify the merchant."
        },
        "externalAccountBusinessCountry": {
          "description": "The business country of the merchant account as identified by the third party service provider.",
          "type": "string"
        }
      }
    },
    "ProductsCustomBatchRequest": {
      "id": "ProductsCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "ProductsCustomBatchRequestEntry"
          }
        }
      }
    },
    "DatafeedFetchSchedule": {
      "description": "The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.",
      "properties": {
        "dayOfMonth": {
          "type": "integer",
          "format": "uint32",
          "description": "The day of the month the feed file should be fetched (1-31)."
        },
        "username": {
          "type": "string",
          "description": "An optional user name for fetch_url."
        },
        "timeZone": {
          "description": "Time zone used for schedule. UTC by default. For example, \"America/Los_Angeles\".",
          "type": "string"
        },
        "hour": {
          "format": "uint32",
          "description": "The hour of the day the feed file should be fetched (0-23).",
          "type": "integer"
        },
        "paused": {
          "type": "boolean",
          "description": "Whether the scheduled fetch is paused or not."
        },
        "minuteOfHour": {
          "type": "integer",
          "format": "uint32",
          "description": "The minute of the hour the feed file should be fetched (0-59). Read-only."
        },
        "password": {
          "description": "An optional password for fetch_url.",
          "type": "string"
        },
        "fetchUrl": {
          "description": "The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.",
          "type": "string"
        },
        "weekday": {
          "type": "string",
          "description": "The day of the week the feed file should be fetched. Acceptable values are: - \"`monday`\" - \"`tuesday`\" - \"`wednesday`\" - \"`thursday`\" - \"`friday`\" - \"`saturday`\" - \"`sunday`\" "
        }
      },
      "id": "DatafeedFetchSchedule",
      "type": "object"
    },
    "AccountsListResponse": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Account"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of accounts."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsListResponse`\".",
          "type": "string"
        }
      },
      "id": "AccountsListResponse",
      "type": "object"
    },
    "VerifyPhoneNumberRequest": {
      "id": "VerifyPhoneNumberRequest",
      "description": "Request message for the VerifyPhoneNumber method.",
      "type": "object",
      "properties": {
        "phoneVerificationMethod": {
          "enumDescriptions": [
            "Unknown method.",
            "Receive verification code by SMS.",
            "Receive verification code by phone call."
          ],
          "enum": [
            "PHONE_VERIFICATION_METHOD_UNSPECIFIED",
            "SMS",
            "PHONE_CALL"
          ],
          "description": "Verification method used to receive verification code.",
          "type": "string"
        },
        "verificationId": {
          "description": "The verification ID returned by `requestphoneverification`.",
          "type": "string"
        },
        "verificationCode": {
          "description": "The verification code that was sent to the phone number for validation.",
          "type": "string"
        }
      }
    },
    "AccountsCustomBatchResponseEntry": {
      "id": "AccountsCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch accounts response.",
      "properties": {
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsCustomBatchResponseEntry`\""
        },
        "account": {
          "description": "The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`.",
          "$ref": "Account"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request."
        }
      },
      "type": "object"
    },
    "Headers": {
      "properties": {
        "weights": {
          "type": "array",
          "items": {
            "$ref": "Weight"
          },
          "description": "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"\u003c= 10kg\", \"\u003c= 50kg\", and \"\u003e 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set."
        },
        "postalCodeGroupNames": {
          "type": "array",
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "type": "string"
          }
        },
        "prices": {
          "description": "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"\u003c= $10\", \"\u003c= $500\", and \"\u003e $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "$ref": "Price"
          },
          "type": "array"
        },
        "numberOfItems": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of inclusive number of items upper bounds. The last value can be `\"infinity\"`. For example `[\"10\", \"50\", \"infinity\"]` represents the headers \"\u003c= 10 items\", \"\u003c= 50 items\", and \"\u003e 50 items\". Must be non-empty. Can only be set if all other fields are not set."
        },
        "locations": {
          "description": "A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array",
          "items": {
            "$ref": "LocationIdSet"
          }
        }
      },
      "id": "Headers",
      "description": "A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.",
      "type": "object"
    },
    "TestOrderPickupDetails": {
      "id": "TestOrderPickupDetails",
      "type": "object",
      "properties": {
        "pickupLocationType": {
          "description": "Pickup location type. Acceptable values are: - \"`locker`\" - \"`store`\" - \"`curbside`\" ",
          "type": "string"
        },
        "pickupPersons": {
          "description": "Required. all pickup persons set by users.",
          "items": {
            "$ref": "TestOrderPickupDetailsPickupPerson"
          },
          "type": "array"
        },
        "locationCode": {
          "type": "string",
          "description": "Required. Code of the location defined by provider or merchant."
        },
        "pickupLocationAddress": {
          "$ref": "TestOrderAddress",
          "description": "Required. Pickup location address."
        }
      }
    },
    "RegionalinventoryCustomBatchRequest": {
      "type": "object",
      "id": "RegionalinventoryCustomBatchRequest",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "RegionalinventoryCustomBatchRequestEntry"
          }
        }
      }
    },
    "Price": {
      "id": "Price",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The currency of the price."
        },
        "value": {
          "type": "string",
          "description": "The price represented as a number."
        }
      },
      "type": "object"
    },
    "OrderShipment": {
      "type": "object",
      "properties": {
        "shipmentGroupId": {
          "type": "string",
          "description": "The shipment group ID of the shipment. This is set in shiplineitems request."
        },
        "id": {
          "type": "string",
          "description": "The ID of the shipment."
        },
        "creationDate": {
          "description": "Date on which the shipment has been created, in ISO 8601 format.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "The status of the shipment. Acceptable values are: - \"`delivered`\" - \"`readyForPickup`\" - \"`shipped`\" - \"`undeliverable`\" "
        },
        "lineItems": {
          "description": "The line items that are shipped.",
          "type": "array",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          }
        },
        "deliveryDate": {
          "type": "string",
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`"
        },
        "trackingId": {
          "description": "The tracking ID for the shipment.",
          "type": "string"
        },
        "carrier": {
          "description": "The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers won't include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for \"US\" are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) - \"`lso`\" (Lone Star Overnight) - \"`tww`\" (Team Worldwide) - \"`deliver-it`\" (Deliver-IT) - \"`cdl last mile`\" (CDL Last Mile) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) ",
          "type": "string"
        },
        "scheduledDeliveryDetails": {
          "description": "Delivery details of the shipment if scheduling is needed.",
          "$ref": "OrderShipmentScheduledDeliveryDetails"
        }
      },
      "id": "OrderShipment"
    },
    "TestOrderLineItemProduct": {
      "type": "object",
      "id": "TestOrderLineItemProduct",
      "properties": {
        "brand": {
          "type": "string",
          "description": "Required. Brand of the item."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code of the target country of the product."
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied."
        },
        "imageLink": {
          "description": "Required. URL of an image of the item.",
          "type": "string"
        },
        "title": {
          "description": "Required. The title of the product.",
          "type": "string"
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product. Optional."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \"`en`\" - \"`fr`\" ",
          "type": "string"
        },
        "offerId": {
          "type": "string",
          "description": "Required. An identifier of the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item. Optional."
        },
        "mpn": {
          "type": "string",
          "description": "Manufacturer Part Number (MPN) of the item. Optional."
        },
        "fees": {
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "description": "Fees for the item. Optional.",
          "type": "array"
        },
        "variantAttributes": {
          "type": "array",
          "description": "Variant attributes for the item. Optional.",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          }
        },
        "condition": {
          "description": "Required. Condition or state of the item. Acceptable values are: - \"`new`\" ",
          "type": "string"
        }
      }
    },
    "ShoppingAdsProgramStatusReviewIneligibilityReasonDetails": {
      "id": "ShoppingAdsProgramStatusReviewIneligibilityReasonDetails",
      "properties": {
        "cooldownTime": {
          "description": "This timestamp represents end of cooldown period for review ineligbility reason `IN_COOLDOWN_PERIOD`.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Additional details for review ineligibility reasons.",
      "type": "object"
    },
    "RepricingRuleCostOfGoodsSaleRule": {
      "properties": {
        "percentageDelta": {
          "description": "The percent change against the COGS. Ex: 20 would mean to set the adjusted price 1.2X of the COGS data.",
          "type": "integer",
          "format": "int32"
        },
        "priceDelta": {
          "type": "string",
          "description": "The price delta against the COGS. E.g. 2 means $2 more of the COGS."
        }
      },
      "type": "object",
      "description": "A repricing rule that changes the sale price based on cost of goods sale.",
      "id": "RepricingRuleCostOfGoodsSaleRule"
    },
    "OrdersCancelResponse": {
      "type": "object",
      "id": "OrdersCancelResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCancelResponse`\"."
        }
      }
    },
    "DatafeedStatusError": {
      "properties": {
        "count": {
          "type": "string",
          "format": "uint64",
          "description": "The number of occurrences of the error in the feed."
        },
        "code": {
          "description": "The code of the error, for example, \"validation/invalid_value\".",
          "type": "string"
        },
        "examples": {
          "items": {
            "$ref": "DatafeedStatusExample"
          },
          "description": "A list of example occurrences of the error, grouped by product.",
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "The error message, for example, \"Invalid price\"."
        }
      },
      "type": "object",
      "id": "DatafeedStatusError",
      "description": "An error occurring in the feed, like \"invalid price\"."
    },
    "AccountStatusProducts": {
      "properties": {
        "channel": {
          "type": "string",
          "description": "The channel the data applies to. Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "destination": {
          "type": "string",
          "description": "The destination the data applies to."
        },
        "statistics": {
          "description": "Aggregated product statistics.",
          "$ref": "AccountStatusStatistics"
        },
        "country": {
          "description": "The country the data applies to.",
          "type": "string"
        },
        "itemLevelIssues": {
          "items": {
            "$ref": "AccountStatusItemLevelIssue"
          },
          "description": "List of item-level issues.",
          "type": "array"
        }
      },
      "id": "AccountStatusProducts",
      "type": "object"
    },
    "AccountstatusesCustomBatchRequestEntry": {
      "type": "object",
      "description": "A batch entry encoding a single non-batch accountstatuses request.",
      "id": "AccountstatusesCustomBatchRequestEntry",
      "properties": {
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "accountId": {
          "description": "The ID of the (sub-)account whose status to get.",
          "type": "string",
          "format": "uint64"
        },
        "destinations": {
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        }
      }
    },
    "CustomAttribute": {
      "type": "object",
      "id": "CustomAttribute",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the attribute."
        },
        "groupValues": {
          "description": "Subattributes within this attribute group. Exactly one of value or groupValues must be provided.",
          "type": "array",
          "items": {
            "$ref": "CustomAttribute"
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion."
        }
      }
    },
    "DatafeedstatusesCustomBatchResponse": {
      "id": "DatafeedstatusesCustomBatchResponse",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DatafeedstatusesCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedstatusesCustomBatchResponse`\"."
        }
      },
      "type": "object"
    },
    "DatafeedstatusesCustomBatchResponseEntry": {
      "type": "object",
      "description": "A batch entry encoding a single non-batch datafeedstatuses response.",
      "properties": {
        "errors": {
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.",
          "$ref": "Errors"
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer",
          "format": "uint32"
        },
        "datafeedStatus": {
          "description": "The requested data feed status. Defined if and only if the request was successful.",
          "$ref": "DatafeedStatus"
        }
      },
      "id": "DatafeedstatusesCustomBatchResponseEntry"
    },
    "OrdersUpdateMerchantOrderIdResponse": {
      "type": "object",
      "id": "OrdersUpdateMerchantOrderIdResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersUpdateMerchantOrderIdResponse`\".",
          "type": "string"
        }
      }
    },
    "RepricingRuleRestrictionBoundary": {
      "description": "Definition of a boundary.",
      "properties": {
        "percentageDelta": {
          "description": "The percentage delta relative to the offer selling price. This field is signed. It must be negative in floor. When it is used in floor, it should be \u003e -100. For example, if an offer is selling at $10 and this field is -30 in floor, the repricing rule only applies if the calculated new price is \u003e= $7.",
          "type": "integer",
          "format": "int32"
        },
        "priceDelta": {
          "description": "The price micros relative to the offer selling price. This field is signed. It must be negative in floor. For example, if an offer is selling at $10 and this field is -$2 in floor, the repricing rule only applies if the calculated new price is \u003e= $8.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RepricingRuleRestrictionBoundary"
    },
    "OrderShipmentLineItemShipment": {
      "type": "object",
      "id": "OrderShipmentLineItemShipment",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required."
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity that is shipped."
        }
      }
    },
    "SettlementreportsListResponse": {
      "id": "SettlementreportsListResponse",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "SettlementReport"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of returns."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#settlementreportsListResponse`\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RepricingRuleRestriction": {
      "id": "RepricingRuleRestriction",
      "properties": {
        "floor": {
          "description": "The inclusive floor lower bound. The repricing rule only applies when new price \u003e= floor.",
          "$ref": "RepricingRuleRestrictionBoundary"
        },
        "useAutoPricingMinPrice": {
          "description": "If true, use the AUTO_PRICING_MIN_PRICE offer attribute as the lower bound of the rule. If use_auto_pricing_min_price is true, then only offers with `AUTO_PRICING_MIN_PRICE` existing on the offer will get Repricer treatment, even if a floor value is set on the rule. Also, if use_auto_pricing_min_price is true, the floor restriction will be ignored.",
          "type": "boolean"
        }
      },
      "description": "Definition of a rule restriction. At least one of the following needs to be true: (1) use_auto_pricing_min_price is true (2) floor.price_delta exists (3) floor.percentage_delta exists If floor.price_delta and floor.percentage_delta are both set on a rule, the highest value will be chosen by the Repricer. In other words, for a product with a price of $50, if the `floor.percentage_delta` is \"-10\" and the floor.price_delta is \"-12\", the offer price will only be lowered $5 (10% lower than the original offer price).",
      "type": "object"
    },
    "AccountsCustomBatchRequest": {
      "id": "AccountsCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "AccountsCustomBatchRequestEntry"
          }
        }
      }
    },
    "DeliveryArea": {
      "id": "DeliveryArea",
      "description": "A delivery area for the product. Only one of `countryCode` or `postalCodeRange` must be set.",
      "properties": {
        "postalCodeRange": {
          "$ref": "DeliveryAreaPostalCodeRange",
          "description": "A postal code, postal code range or postal code prefix that defines this area. Limited to US and AUS."
        },
        "regionCode": {
          "description": "A state, territory, or prefecture. This is supported for the United States, Australia, and Japan. Provide a subdivision code from the ISO 3166-2 code tables ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US), [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country prefix (for example, `\"NY\"`, `\"NSW\"`, `\"03\"`).",
          "type": "string"
        },
        "countryCode": {
          "type": "string",
          "description": "Required. The country that the product can be delivered to. Submit a [unicode CLDR region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) such as `US` or `CH`."
        }
      },
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails": {
      "id": "OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails",
      "properties": {
        "carrierPhoneNumber": {
          "description": "The phone number of the carrier fulfilling the delivery. The phone number should be formatted as the international notation in",
          "type": "string"
        },
        "scheduledDate": {
          "description": "The date a shipment is scheduled for delivery, in ISO 8601 format.",
          "type": "string"
        }
      },
      "description": "ScheduledDeliveryDetails used to update the scheduled delivery order.",
      "type": "object"
    },
    "Errors": {
      "type": "object",
      "description": "A list of errors returned by a failed batch entry.",
      "id": "Errors",
      "properties": {
        "code": {
          "format": "uint32",
          "description": "The HTTP status of the first error in `errors`.",
          "type": "integer"
        },
        "message": {
          "description": "The message of the first error in `errors`.",
          "type": "string"
        },
        "errors": {
          "type": "array",
          "description": "A list of errors.",
          "items": {
            "$ref": "Error"
          }
        }
      }
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "[required] Reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "description": {
          "description": "Optional description of the refund reason.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
    },
    "OrderreturnsCreateOrderReturnRequest": {
      "type": "object",
      "id": "OrderreturnsCreateOrderReturnRequest",
      "properties": {
        "lineItems": {
          "items": {
            "$ref": "OrderreturnsLineItem"
          },
          "type": "array",
          "description": "The list of line items to return."
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the order."
        },
        "returnMethodType": {
          "description": "The way of the package being returned.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        }
      }
    },
    "ReturnpolicyCustomBatchResponseEntry": {
      "id": "ReturnpolicyCustomBatchResponseEntry",
      "properties": {
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if, and only if, the request failed."
        },
        "returnPolicy": {
          "description": "The retrieved return policy.",
          "$ref": "ReturnPolicy"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnpolicyCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry to which this entry responds."
        }
      },
      "type": "object"
    },
    "WarehouseBasedDeliveryTime": {
      "properties": {
        "originCountry": {
          "description": "Shipping origin's country represented as a [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).",
          "type": "string"
        },
        "warehouseName": {
          "description": "The name of the warehouse. Warehouse name need to be matched with name. If warehouseName is set, the below fields will be ignored. The warehouse info will be read from warehouse.",
          "type": "string"
        },
        "carrier": {
          "type": "string",
          "description": "Required. Carrier, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved through the `listSupportedCarriers` method."
        },
        "originStreetAddress": {
          "description": "Shipping origin's street address.",
          "type": "string"
        },
        "carrierService": {
          "type": "string",
          "description": "Required. Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved through the `listSupportedCarriers` method. The name of the service must be in the eddSupportedServices list."
        },
        "originAdministrativeArea": {
          "type": "string",
          "description": "Shipping origin's state."
        },
        "originPostalCode": {
          "description": "Shipping origin.",
          "type": "string"
        },
        "originCity": {
          "description": "Shipping origin's city.",
          "type": "string"
        }
      },
      "id": "WarehouseBasedDeliveryTime",
      "type": "object"
    },
    "OrderLineItemProductFee": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the fee."
        },
        "amount": {
          "$ref": "Price",
          "description": "Amount of the fee."
        }
      },
      "id": "OrderLineItemProductFee"
    },
    "SettlementTransactionAmount": {
      "id": "SettlementTransactionAmount",
      "properties": {
        "commission": {
          "$ref": "SettlementTransactionAmountCommission"
        },
        "type": {
          "type": "string",
          "description": "The type of the amount. Acceptable values are: - \"`itemPrice`\" - \"`orderPrice`\" - \"`refund`\" - \"`earlyRefund`\" - \"`courtesyRefund`\" - \"`returnRefund`\" - \"`returnLabelShippingFeeAmount`\" - \"`lumpSumCorrectionAmount`\" "
        },
        "description": {
          "description": "The description of the event. Acceptable values are: - \"`taxWithhold`\" - \"`principal`\" - \"`principalAdjustment`\" - \"`shippingFee`\" - \"`merchantRemittedSalesTax`\" - \"`googleRemittedSalesTax`\" - \"`merchantCoupon`\" - \"`merchantCouponTax`\" - \"`merchantRemittedDisposalTax`\" - \"`googleRemittedDisposalTax`\" - \"`merchantRemittedRedemptionFee`\" - \"`googleRemittedRedemptionFee`\" - \"`eeeEcoFee`\" - \"`furnitureEcoFee`\" - \"`copyPrivateFee`\" - \"`eeeEcoFeeCommission`\" - \"`furnitureEcoFeeCommission`\" - \"`copyPrivateFeeCommission`\" - \"`principalRefund`\" - \"`principalRefundTax`\" - \"`itemCommission`\" - \"`adjustmentCommission`\" - \"`shippingFeeCommission`\" - \"`commissionRefund`\" - \"`damaged`\" - \"`damagedOrDefectiveItem`\" - \"`expiredItem`\" - \"`faultyItem`\" - \"`incorrectItemReceived`\" - \"`itemMissing`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`storePackageMissing`\" - \"`transitPackageMissing`\" - \"`unsuccessfulDeliveryUndeliverable`\" - \"`wrongChargeInStore`\" - \"`wrongItem`\" - \"`returns`\" - \"`undeliverable`\" - \"`issueRelatedRefundAndReplacementAmountDescription`\" - \"`refundFromMerchant`\" - \"`returnLabelShippingFee`\" - \"`lumpSumCorrection`\" - \"`pspFee`\" - \"`principalRefundDoesNotFit`\" - \"`principalRefundOrderedWrongItem`\" - \"`principalRefundQualityNotExpected`\" - \"`principalRefundBetterPriceFound`\" - \"`principalRefundNoLongerNeeded`\" - \"`principalRefundChangedMind`\" - \"`principalRefundReceivedTooLate`\" - \"`principalRefundIncorrectItemReceived`\" - \"`principalRefundDamagedOrDefectiveItem`\" - \"`principalRefundDidNotMatchDescription`\" - \"`principalRefundExpiredItem`\" ",
          "type": "string"
        },
        "transactionAmount": {
          "description": "The amount that contributes to the line item price.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "RefundReason": {
      "id": "RefundReason",
      "properties": {
        "description": {
          "description": "Description of the reason.",
          "type": "string"
        },
        "reasonCode": {
          "type": "string",
          "description": "Code of the refund reason. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        }
      },
      "type": "object"
    },
    "PosDataProvidersPosDataProvider": {
      "type": "object",
      "id": "PosDataProvidersPosDataProvider",
      "properties": {
        "providerId": {
          "description": "The ID of the account.",
          "format": "uint64",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of Pos data Provider."
        },
        "fullName": {
          "type": "string",
          "description": "The full name of this POS data Provider."
        }
      }
    },
    "ProductView": {
      "type": "object",
      "description": "Product fields. Values are only set for fields requested explicitly in the request's search query. Available only to selected merchants. Submit the [interest form](https://forms.gle/7Uy8htzAN8oNokz9A) to request access.",
      "id": "ProductView",
      "properties": {
        "aggregatedDestinationStatus": {
          "description": "Aggregated destination status.",
          "enum": [
            "AGGREGATED_STATUS_UNSPECIFIED",
            "NOT_ELIGIBLE_OR_DISAPPROVED",
            "PENDING",
            "ELIGIBLE_LIMITED",
            "ELIGIBLE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Undefined aggregated status.",
            "Offer isn't eligible, or is disapproved for all destinations.",
            "Offer's status is pending in all destinations.",
            "Offer is eligible for some (but not all) destinations.",
            "Offer is eligible for all destinations."
          ]
        },
        "creationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the merchant created the product in timestamp seconds."
        },
        "condition": {
          "description": "Condition of the product.",
          "type": "string"
        },
        "itemGroupId": {
          "description": "Item group ID provided by the merchant for grouping variants together.",
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date for the product. Specified on insertion.",
          "$ref": "Date"
        },
        "shippingLabel": {
          "description": "The normalized shipping label specified in the feed",
          "type": "string"
        },
        "availability": {
          "type": "string",
          "description": "Availability of the product."
        },
        "priceMicros": {
          "type": "string",
          "description": "Product price specified as micros in the product currency. Absent in case the information about the price of the product is not available.",
          "format": "int64"
        },
        "languageCode": {
          "description": "Language code of the product in BCP 47 format.",
          "type": "string"
        },
        "title": {
          "description": "Title of the product.",
          "type": "string"
        },
        "id": {
          "description": "The REST ID of the product, in the form of channel:contentLanguage:targetCountry:offerId. Content API methods that operate on products take this as their productId parameter. Should always be included in the SELECT clause.",
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "description": "Product price currency code (for example, ISO 4217). Absent if product price is not available."
        },
        "offerId": {
          "description": "Merchant-provided id of the product.",
          "type": "string"
        },
        "itemIssues": {
          "type": "array",
          "items": {
            "$ref": "ProductViewItemIssue"
          },
          "description": "List of item issues for the product."
        },
        "brand": {
          "description": "Brand of the product.",
          "type": "string"
        },
        "channel": {
          "type": "string",
          "enumDescriptions": [
            "Indicates that the channel is unspecified.",
            "Indicates that the channel is local.",
            "Indicates that the channel is online."
          ],
          "description": "Channel of the product (online versus local).",
          "enum": [
            "CHANNEL_UNSPECIFIED",
            "LOCAL",
            "ONLINE"
          ]
        },
        "gtin": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "GTIN of the product."
        }
      }
    },
    "Collection": {
      "id": "Collection",
      "properties": {
        "customLabel0": {
          "type": "string",
          "description": "Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns. [Custom label](https://support.google.com/merchants/answer/9674217)"
        },
        "customLabel3": {
          "description": "Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.",
          "type": "string"
        },
        "customLabel4": {
          "description": "Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.",
          "type": "string"
        },
        "headline": {
          "description": "Your collection's name. [headline attribute](https://support.google.com/merchants/answer/9673580)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mobileLink": {
          "description": "A collection’s mobile-optimized landing page when you have a different URL for mobile and desktop traffic. [mobile_link attribute](https://support.google.com/merchants/answer/9646123)",
          "type": "string"
        },
        "language": {
          "type": "string",
          "description": "The language of a collection and the language of any featured products linked to the collection. [language attribute](https://support.google.com/merchants/answer/9673781)"
        },
        "featuredProduct": {
          "items": {
            "$ref": "CollectionFeaturedProduct"
          },
          "type": "array",
          "description": "This identifies one or more products associated with the collection. Used as a lookup to the corresponding product ID in your product feeds. Provide a maximum of 100 featuredProduct (for collections). Provide up to 10 featuredProduct (for Shoppable Images only) with ID and X and Y coordinates. [featured_product attribute](https://support.google.com/merchants/answer/9703736)"
        },
        "imageLink": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The URL of a collection’s image. [image_link attribute](https://support.google.com/merchants/answer/9703236)"
        },
        "id": {
          "description": "Required. The REST ID of the collection. Content API methods that operate on collections take this as their collectionId parameter. The REST ID for a collection is of the form collectionId. [id attribute](https://support.google.com/merchants/answer/9649290)",
          "type": "string"
        },
        "customLabel1": {
          "description": "Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.",
          "type": "string"
        },
        "link": {
          "type": "string",
          "description": "A collection’s landing page. URL directly linking to your collection's page on your website. [link attribute](https://support.google.com/merchants/answer/9673983)"
        },
        "productCountry": {
          "description": "[product_country attribute](https://support.google.com/merchants/answer/9674155)",
          "type": "string"
        },
        "customLabel2": {
          "type": "string",
          "description": "Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns."
        }
      },
      "type": "object",
      "description": "The collection message."
    },
    "ProductWeight": {
      "type": "object",
      "id": "ProductWeight",
      "properties": {
        "value": {
          "description": "Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.",
          "format": "double",
          "type": "number"
        },
        "unit": {
          "description": "Required. The weight unit. Acceptable values are: - \"`g`\" - \"`kg`\" - \"`oz`\" - \"`lb`\" ",
          "type": "string"
        }
      }
    },
    "ShippingsettingsCustomBatchRequest": {
      "id": "ShippingsettingsCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "ShippingsettingsCustomBatchRequestEntry"
          }
        }
      }
    },
    "AccountLabel": {
      "description": "Label assigned by CSS domain or CSS group to one of its sub-accounts.",
      "properties": {
        "labelType": {
          "enum": [
            "LABEL_TYPE_UNSPECIFIED",
            "MANUAL",
            "AUTOMATIC"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown label type.",
            "Indicates that the label was created manually.",
            "Indicates that the label was created automatically by CSS Center."
          ],
          "readOnly": true,
          "description": "Output only. The type of this label."
        },
        "name": {
          "description": "The display name of this label.",
          "type": "string"
        },
        "description": {
          "description": "The description of this label.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "Immutable. The ID of account this label belongs to.",
          "format": "int64"
        },
        "labelId": {
          "description": "Output only. The ID of the label.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "AccountLabel"
    },
    "ReturnPolicyOnlinePolicy": {
      "properties": {
        "type": {
          "description": "Policy type.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Number of days after a return is delivered.",
            "No returns.",
            "Life time returns."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "NUMBER_OF_DAYS_AFTER_DELIVERY",
            "NO_RETURNS",
            "LIFETIME_RETURNS"
          ],
          "type": "string"
        },
        "days": {
          "description": "The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. Required for `numberOfDaysAfterDelivery` returns.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "ReturnPolicyOnlinePolicy",
      "description": "The available policies.",
      "type": "object"
    },
    "OrdersAcknowledgeResponse": {
      "type": "object",
      "id": "OrdersAcknowledgeResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersAcknowledgeResponse`\"."
        }
      }
    },
    "AccountsCustomBatchRequestEntry": {
      "id": "AccountsCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch accounts request.",
      "type": "object",
      "properties": {
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "labelIds": {
          "items": {
            "format": "uint64",
            "type": "string"
          },
          "type": "array",
          "description": "Label IDs for the 'updatelabels' request."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`claimWebsite`\" - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`link`\" - \"`update`\" ",
          "type": "string"
        },
        "account": {
          "$ref": "Account",
          "description": "The account to create or update. Only defined if the method is `insert` or `update`."
        },
        "linkRequest": {
          "$ref": "AccountsCustomBatchRequestEntryLinkRequest",
          "description": "Details about the `link` request."
        },
        "force": {
          "type": "boolean",
          "description": "Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`."
        },
        "overwrite": {
          "description": "Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict.",
          "type": "boolean"
        },
        "view": {
          "type": "string",
          "description": "Controls which fields are visible. Only applicable if the method is 'get'."
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the targeted account. Only defined if the method is not `insert`.",
          "format": "uint64"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        }
      }
    },
    "OrderTrackingSignal": {
      "properties": {
        "lineItems": {
          "items": {
            "$ref": "OrderTrackingSignalLineItemDetails"
          },
          "type": "array",
          "description": "Information about line items in the order."
        },
        "shippingInfo": {
          "items": {
            "$ref": "OrderTrackingSignalShippingInfo"
          },
          "type": "array",
          "description": "The shipping information for the order."
        },
        "customerShippingFee": {
          "description": "The shipping fee of the order; this value should be set to zero in the case of free shipping.",
          "$ref": "PriceAmount"
        },
        "orderId": {
          "description": "Required. The ID of the order on the merchant side. This field will be hashed in returned OrderTrackingSignal creation response.",
          "type": "string"
        },
        "orderCreatedTime": {
          "$ref": "DateTime",
          "description": "Required. The time when the order was created on the merchant side. Include the year and timezone string, if available."
        },
        "orderTrackingSignalId": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. The ID that uniquely identifies this order tracking signal."
        },
        "deliveryRegionCode": {
          "description": "Required. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping destination.",
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "description": "The Google merchant ID of this order tracking signal. This value is optional. If left unset, the caller's merchant ID is used. You must request access in order to provide data on behalf of another merchant. For more information, see [Submitting Order Tracking Signals](/shopping-content/guides/order-tracking-signals).",
          "format": "int64"
        },
        "shipmentLineItemMapping": {
          "description": "The mapping of the line items to the shipment information.",
          "type": "array",
          "items": {
            "$ref": "OrderTrackingSignalShipmentLineItemMapping"
          }
        },
        "deliveryPostalCode": {
          "description": "Required. The delivery postal code, as a continuous string without spaces or dashes, e.g. \"95016\". This field will be anonymized in returned OrderTrackingSignal creation response.",
          "type": "string"
        }
      },
      "description": "Represents a merchant trade from which signals are extracted, e.g. shipping.",
      "id": "OrderTrackingSignal",
      "type": "object"
    },
    "OrderDeliveryDetails": {
      "properties": {
        "phoneNumber": {
          "description": "The phone number of the person receiving the delivery.",
          "type": "string"
        },
        "address": {
          "description": "The delivery address",
          "$ref": "OrderAddress"
        }
      },
      "id": "OrderDeliveryDetails",
      "type": "object"
    },
    "ShippingsettingsCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsCustomBatchResponse`\"."
        },
        "entries": {
          "items": {
            "$ref": "ShippingsettingsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      },
      "id": "ShippingsettingsCustomBatchResponse",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryRefundItemShipping": {
      "id": "OrdersCustomBatchRequestEntryRefundItemShipping",
      "type": "object",
      "properties": {
        "fullRefund": {
          "type": "boolean",
          "description": "If set to true, all shipping costs for the order will be refunded. If this is true, amount shouldn't be provided and will be ignored. If set to false, submit the amount of the partial shipping refund, excluding the shipping tax. The shipping tax is calculated and handled on Google's side."
        },
        "amount": {
          "description": "The amount that is refunded. If this is not the first refund for the shipment, this should be the newly refunded amount.",
          "$ref": "Price"
        }
      }
    },
    "LiaAboutPageSettings": {
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the verification process for the About page. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        },
        "url": {
          "type": "string",
          "description": "The URL for the About page."
        }
      },
      "type": "object",
      "id": "LiaAboutPageSettings"
    },
    "OrderreturnsLineItem": {
      "id": "OrderreturnsLineItem",
      "type": "object",
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item. This value is assigned by Google when an order is created. Either lineItemId or productId is required."
        },
        "productId": {
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity of this line item.",
          "format": "uint32"
        }
      }
    },
    "ListRegionsResponse": {
      "description": "Response message for the `ListRegions` method.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "regions": {
          "description": "The regions from the specified merchant.",
          "items": {
            "$ref": "Region"
          },
          "type": "array"
        }
      },
      "id": "ListRegionsResponse",
      "type": "object"
    },
    "AccounttaxCustomBatchResponse": {
      "type": "object",
      "id": "AccounttaxCustomBatchResponse",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccounttaxCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accounttaxCustomBatchResponse`\".",
          "type": "string"
        }
      }
    },
    "PosInventory": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posInventory`\""
        },
        "quantity": {
          "description": "Required. The available quantity of the item.",
          "format": "int64",
          "type": "string"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "price": {
          "description": "Required. The current price of the item.",
          "$ref": "Price"
        }
      },
      "type": "object",
      "description": "The absolute quantity of an item available at the given store.",
      "id": "PosInventory"
    },
    "RequestReviewShoppingAdsRequest": {
      "properties": {
        "regionCode": {
          "type": "string",
          "description": "The code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country for which review is to be requested."
        }
      },
      "description": "Request message for the RequestReviewShoppingAds program method.",
      "id": "RequestReviewShoppingAdsRequest",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo": {
      "properties": {
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment."
        },
        "shipmentId": {
          "description": "Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment.",
          "type": "string"
        },
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        }
      },
      "id": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo",
      "type": "object"
    },
    "AccountStatusAccountLevelIssue": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Issue identifier.",
          "type": "string"
        },
        "severity": {
          "description": "Severity of the issue. Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" ",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Country for which this issue is reported."
        },
        "title": {
          "type": "string",
          "description": "Short description of the issue."
        },
        "documentation": {
          "description": "The URL of a web page to help resolving this issue.",
          "type": "string"
        },
        "destination": {
          "type": "string",
          "description": "The destination the issue applies to. If this field is empty then the issue applies to all available destinations."
        },
        "detail": {
          "type": "string",
          "description": "Additional details about the issue."
        }
      },
      "id": "AccountStatusAccountLevelIssue"
    },
    "AccountAddress": {
      "type": "object",
      "properties": {
        "streetAddress": {
          "description": "Street-level part of the address. Use `\\n` to add a second line.",
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code or ZIP (for example, \"94043\")."
        },
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).",
          "type": "string"
        },
        "country": {
          "description": "CLDR country code (for example, \"US\"). All MCA sub-accounts inherit the country of their parent MCA by default, however the country can be updated for individual sub-accounts.",
          "type": "string"
        }
      },
      "id": "AccountAddress"
    },
    "Order": {
      "type": "object",
      "id": "Order",
      "properties": {
        "acknowledged": {
          "description": "Whether the order was acknowledged.",
          "type": "boolean"
        },
        "lineItems": {
          "description": "Line items that are ordered.",
          "items": {
            "$ref": "OrderLineItem"
          },
          "type": "array"
        },
        "customer": {
          "$ref": "OrderCustomer",
          "description": "The details of the customer who placed the order."
        },
        "refunds": {
          "items": {
            "$ref": "OrderRefund"
          },
          "description": "Refunds for the order.",
          "type": "array"
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant-provided ID of the order."
        },
        "shippingCostTax": {
          "description": "The tax for the total shipping cost.",
          "$ref": "Price"
        },
        "netPriceAmount": {
          "$ref": "Price",
          "description": "The net amount for the order (price part). For example, if an order was originally for $100 and a refund was issued for $20, the net amount will be $80."
        },
        "shipments": {
          "type": "array",
          "description": "Shipments of the order.",
          "items": {
            "$ref": "OrderShipment"
          }
        },
        "annotations": {
          "type": "array",
          "description": "List of key-value pairs that are attached to a given order.",
          "items": {
            "$ref": "OrderOrderAnnotation"
          }
        },
        "billingAddress": {
          "description": "The billing address.",
          "$ref": "OrderAddress"
        },
        "placedDate": {
          "description": "The date when the order was placed, in ISO 8601 format.",
          "type": "string"
        },
        "taxCollector": {
          "type": "string",
          "description": "The party responsible for collecting and remitting taxes. Acceptable values are: - \"`marketplaceFacilitator`\" - \"`merchant`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#order`\""
        },
        "merchantId": {
          "format": "uint64",
          "type": "string"
        },
        "shippingCost": {
          "description": "The total cost of shipping for all items.",
          "$ref": "Price"
        },
        "status": {
          "type": "string",
          "description": "The status of the order. Acceptable values are: - \"`canceled`\" - \"`delivered`\" - \"`inProgress`\" - \"`partiallyDelivered`\" - \"`partiallyReturned`\" - \"`partiallyShipped`\" - \"`pendingShipment`\" - \"`returned`\" - \"`shipped`\" "
        },
        "paymentStatus": {
          "type": "string",
          "description": "The status of the payment. Acceptable values are: - \"`paymentCaptured`\" - \"`paymentRejected`\" - \"`paymentSecured`\" - \"`pendingAuthorization`\" "
        },
        "deliveryDetails": {
          "description": "Delivery details for shipments of type `delivery`.",
          "$ref": "OrderDeliveryDetails"
        },
        "promotions": {
          "description": "Promotions associated with the order. To determine which promotions apply to which products, check the `Promotions[].appliedItems[].lineItemId` field against the `LineItems[].id` field for each promotion. If a promotion is applied to more than 1 offerId, divide the discount value by the number of affected offers to determine how much discount to apply to each offerId. Examples: 1. To calculate price paid by the customer for a single line item including the discount: For each promotion, subtract the `LineItems[].adjustments[].priceAdjustment.value` amount from the `LineItems[].Price.value`. 2. To calculate price paid by the customer for a single line item including the discount in case of multiple quantity: For each promotion, divide the `LineItems[].adjustments[].priceAdjustment.value` by the quantity of products then subtract the resulting value from the `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here.",
          "type": "array",
          "items": {
            "$ref": "OrderPromotion"
          }
        },
        "id": {
          "description": "The REST ID of the order. Globally unique.",
          "type": "string"
        },
        "pickupDetails": {
          "$ref": "OrderPickupDetails",
          "description": "Pickup details for shipments of type `pickup`."
        },
        "netTaxAmount": {
          "description": "The net amount for the order (tax part). Note that in certain cases due to taxable base adjustment `netTaxAmount` might not match to a sum of tax field across all lineItems and refunds.",
          "$ref": "Price"
        }
      },
      "description": "Order. Production access (all methods) requires the order manager role. Sandbox access does not."
    },
    "GmbAccounts": {
      "properties": {
        "gmbAccounts": {
          "type": "array",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          },
          "description": "A list of Business Profiles which are available to the merchant."
        },
        "accountId": {
          "description": "The ID of the Merchant Center account.",
          "type": "string",
          "format": "uint64"
        }
      },
      "id": "GmbAccounts",
      "type": "object"
    },
    "OrdersCreateTestOrderResponse": {
      "type": "object",
      "id": "OrdersCreateTestOrderResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCreateTestOrderResponse`\"."
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the newly created test order."
        }
      }
    },
    "DatafeedsListResponse": {
      "type": "object",
      "id": "DatafeedsListResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedsListResponse`\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of datafeeds.",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "Datafeed"
          },
          "type": "array"
        }
      }
    },
    "SettlementtransactionsListResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "$ref": "SettlementTransaction"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of returns."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#settlementtransactionsListResponse`\"."
        }
      },
      "id": "SettlementtransactionsListResponse"
    },
    "MerchantOrderReturnItem": {
      "type": "object",
      "properties": {
        "itemId": {
          "description": "Product level item ID. If the returned items are of the same product, they will have the same ID.",
          "type": "string"
        },
        "state": {
          "description": "State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" ",
          "type": "string"
        },
        "shipmentUnitId": {
          "description": "ID of the shipment unit assigned by the merchant. Provided for shipments with invoice support.",
          "type": "string"
        },
        "customerReturnReason": {
          "description": "The reason that the customer chooses to return an item.",
          "$ref": "CustomerReturnReason"
        },
        "merchantReturnReason": {
          "description": "The reason that merchant chooses to accept a return item.",
          "$ref": "RefundReason"
        },
        "refundableAmount": {
          "description": "Maximum amount that can be refunded for this return item.",
          "$ref": "MonetaryAmount"
        },
        "merchantRejectionReason": {
          "description": "The reason that the merchant chose to reject an item return.",
          "$ref": "MerchantRejectionReason"
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "ID of the original shipment group. Provided for shipments with invoice support."
        },
        "returnShipmentIds": {
          "description": "IDs of the return shipments that this return item belongs to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "returnItemId": {
          "type": "string",
          "description": "Unit level ID for the return item. Different units of the same product will have different IDs."
        },
        "product": {
          "$ref": "OrderLineItemProduct",
          "description": "Product data from the time of the order placement."
        }
      },
      "id": "MerchantOrderReturnItem"
    },
    "Error": {
      "id": "Error",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        },
        "domain": {
          "description": "The domain of the error.",
          "type": "string"
        }
      },
      "description": "An error returned by the API.",
      "type": "object"
    },
    "AccountsUpdateLabelsRequest": {
      "id": "AccountsUpdateLabelsRequest",
      "type": "object",
      "properties": {
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "The IDs of labels that should be assigned to the account."
        }
      }
    },
    "AccountTax": {
      "type": "object",
      "id": "AccountTax",
      "description": "The tax settings of a merchant account. All methods require the admin role.",
      "properties": {
        "accountId": {
          "description": "Required. The ID of the account to which these account tax settings belong.",
          "type": "string",
          "format": "uint64"
        },
        "rules": {
          "type": "array",
          "description": "Tax rules. Updating the tax rules will enable \"US\" taxes (not reversible). Defining no rules is equivalent to not charging tax at all.",
          "items": {
            "$ref": "AccountTaxTaxRule"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountTax`\".",
          "type": "string"
        }
      }
    },
    "PosCustomBatchResponseEntry": {
      "type": "object",
      "properties": {
        "store": {
          "$ref": "PosStore",
          "description": "The retrieved or updated store information."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if, and only if, the request failed."
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry to which this entry responds."
        },
        "inventory": {
          "description": "The updated inventory information.",
          "$ref": "PosInventory"
        },
        "sale": {
          "$ref": "PosSale",
          "description": "The updated sale information."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponseEntry`\""
        }
      },
      "id": "PosCustomBatchResponseEntry"
    },
    "OrdersCreateTestOrderRequest": {
      "id": "OrdersCreateTestOrderRequest",
      "type": "object",
      "properties": {
        "testOrder": {
          "description": "The test order to create.",
          "$ref": "TestOrder"
        },
        "country": {
          "description": "The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created through `template_name`, or the addresses of orders created through `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to \"`US`\".",
          "type": "string"
        },
        "templateName": {
          "type": "string",
          "description": "The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" "
        }
      }
    },
    "OnboardBuyOnGoogleProgramRequest": {
      "description": "Request message for the OnboardProgram method.",
      "id": "OnboardBuyOnGoogleProgramRequest",
      "properties": {
        "customerServiceEmail": {
          "type": "string",
          "description": "The customer service email."
        }
      },
      "type": "object"
    },
    "ProductDimension": {
      "id": "ProductDimension",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Required. The length units. Acceptable values are: - \"`in`\" - \"`cm`\" "
        },
        "value": {
          "description": "Required. The length value represented as a number. The value can have a maximum precision of four decimal places.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "OrderCustomerLoyaltyInfo": {
      "properties": {
        "loyaltyNumber": {
          "description": "The loyalty card/membership number.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of card/membership holder, this field will be populated when"
        }
      },
      "type": "object",
      "id": "OrderCustomerLoyaltyInfo"
    },
    "OrderReturn": {
      "properties": {
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "Quantity that is returned.",
          "type": "integer"
        },
        "actor": {
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "description": "Date on which the item has been created, in ISO 8601 format."
        }
      },
      "id": "OrderReturn",
      "type": "object"
    },
    "AccountsCustomBatchResponse": {
      "id": "AccountsCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsCustomBatchResponse`\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "AccountsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        }
      },
      "type": "object"
    },
    "OrderreturnsRefundOperation": {
      "properties": {
        "partialRefund": {
          "description": "If this is set, the item will be partially refunded. Merchant can choose this refund option to specify the customized amount that to be refunded to the customer.",
          "$ref": "OrderreturnsPartialRefund"
        },
        "returnRefundReason": {
          "type": "string",
          "description": "Code of the refund reason."
        },
        "fullRefund": {
          "type": "boolean",
          "description": "If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer through FOP."
        },
        "paymentType": {
          "type": "string",
          "description": "The payment way of issuing refund. Default value is ORIGINAL_FOP if not set."
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "id": "OrderreturnsRefundOperation",
      "type": "object"
    },
    "ReturnPolicySeasonalOverride": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the seasonal override as shown in Merchant Center.",
          "type": "string"
        },
        "startDate": {
          "description": "Required. First day on which the override applies. In ISO 8601 format.",
          "type": "string"
        },
        "endDate": {
          "description": "Required. Last day on which the override applies. In ISO 8601 format.",
          "type": "string"
        },
        "policy": {
          "description": "Required. The policy which is in effect during that time.",
          "$ref": "ReturnPolicyPolicy"
        }
      },
      "id": "ReturnPolicySeasonalOverride"
    },
    "OrdersRejectReturnLineItemResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersRejectReturnLineItemResponse`\"."
        }
      },
      "id": "OrdersRejectReturnLineItemResponse"
    },
    "ProductstatusesListResponse": {
      "id": "ProductstatusesListResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of products statuses."
        },
        "resources": {
          "items": {
            "$ref": "ProductStatus"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productstatusesListResponse`\".",
          "type": "string"
        }
      }
    },
    "ShippingSettings": {
      "description": "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.",
      "id": "ShippingSettings",
      "properties": {
        "postalCodeGroups": {
          "type": "array",
          "items": {
            "$ref": "PostalCodeGroup"
          },
          "description": "A list of postal code groups that can be referred to in `services`. Optional."
        },
        "warehouses": {
          "type": "array",
          "items": {
            "$ref": "Warehouse"
          },
          "description": "Optional. A list of warehouses which can be referred to in `services`."
        },
        "services": {
          "items": {
            "$ref": "Service"
          },
          "description": "The target account's list of services. Optional.",
          "type": "array"
        },
        "accountId": {
          "description": "The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.",
          "type": "string",
          "format": "uint64"
        }
      },
      "type": "object"
    },
    "ShipmentInvoiceLineItemInvoice": {
      "id": "ShipmentInvoiceLineItemInvoice",
      "type": "object",
      "properties": {
        "shipmentUnitIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units)."
        },
        "unitInvoice": {
          "$ref": "UnitInvoice",
          "description": "[required] Invoice details for a single unit."
        },
        "lineItemId": {
          "description": "ID of the line item. Either lineItemId or productId must be set.",
          "type": "string"
        },
        "productId": {
          "description": "ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.",
          "type": "string"
        }
      }
    },
    "ProductShippingWeight": {
      "type": "object",
      "id": "ProductShippingWeight",
      "properties": {
        "value": {
          "description": "The weight of the product used to calculate the shipping cost of the item.",
          "format": "double",
          "type": "number"
        },
        "unit": {
          "description": "The unit of value.",
          "type": "string"
        }
      }
    },
    "ShippingsettingsGetSupportedCarriersResponse": {
      "id": "ShippingsettingsGetSupportedCarriersResponse",
      "type": "object",
      "properties": {
        "carriers": {
          "items": {
            "$ref": "CarriersCarrier"
          },
          "type": "array",
          "description": "A list of supported carriers. May be empty."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsGetSupportedCarriersResponse`\".",
          "type": "string"
        }
      }
    },
    "FreeListingsProgramStatusReviewIneligibilityReasonDetails": {
      "id": "FreeListingsProgramStatusReviewIneligibilityReasonDetails",
      "description": "Additional details for review ineligibility reasons.",
      "properties": {
        "cooldownTime": {
          "format": "google-datetime",
          "description": "This timestamp represents end of cooldown period for review ineligbility reason `IN_COOLDOWN_PERIOD`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SettlementTransaction": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#settlementTransaction`\"",
          "type": "string"
        },
        "identifiers": {
          "description": "Identifiers of the transaction.",
          "$ref": "SettlementTransactionIdentifiers"
        },
        "transaction": {
          "$ref": "SettlementTransactionTransaction",
          "description": "Details of the transaction."
        },
        "amount": {
          "$ref": "SettlementTransactionAmount",
          "description": "The amount for the transaction."
        }
      },
      "description": "Settlement transactions give a detailed breakdown of the settlement report.",
      "id": "SettlementTransaction"
    },
    "AccounttaxListResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of account tax settings."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accounttaxListResponse`\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "AccountTax"
          }
        }
      },
      "id": "AccounttaxListResponse"
    },
    "AccountUser": {
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "User's email address."
        },
        "reportingManager": {
          "description": "Whether user is a reporting manager.",
          "type": "boolean"
        },
        "admin": {
          "type": "boolean",
          "description": "Whether user is an admin."
        },
        "paymentsManager": {
          "description": "Whether user can manage payment settings.",
          "type": "boolean"
        },
        "orderManager": {
          "type": "boolean",
          "description": "Whether user is an order manager."
        },
        "paymentsAnalyst": {
          "description": "Whether user can access payment statements.",
          "type": "boolean"
        }
      },
      "id": "AccountUser",
      "type": "object"
    },
    "ListCollectionStatusesResponse": {
      "description": "Response message for the ListCollectionStatuses method.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "resources": {
          "description": "The collectionstatuses listed.",
          "items": {
            "$ref": "CollectionStatus"
          },
          "type": "array"
        }
      },
      "id": "ListCollectionStatusesResponse",
      "type": "object"
    },
    "OrderreturnsListResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of returns."
        },
        "resources": {
          "items": {
            "$ref": "MerchantOrderReturn"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderreturnsListResponse`\".",
          "type": "string"
        }
      },
      "id": "OrderreturnsListResponse"
    },
    "OrderinvoicesCreateChargeInvoiceRequest": {
      "type": "object",
      "properties": {
        "invoiceSummary": {
          "description": "[required] Invoice summary.",
          "$ref": "InvoiceSummary"
        },
        "lineItemInvoices": {
          "type": "array",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "description": "[required] Invoice details per line item."
        },
        "invoiceId": {
          "type": "string",
          "description": "[required] The ID of the invoice."
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
        },
        "operationId": {
          "description": "[required] The ID of the operation, unique across all operations for a given order.",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCreateChargeInvoiceRequest"
    },
    "RequestPhoneVerificationRequest": {
      "id": "RequestPhoneVerificationRequest",
      "description": "Request message for the RequestPhoneVerification method.",
      "properties": {
        "phoneVerificationMethod": {
          "enum": [
            "PHONE_VERIFICATION_METHOD_UNSPECIFIED",
            "SMS",
            "PHONE_CALL"
          ],
          "type": "string",
          "description": "Verification method to receive verification code.",
          "enumDescriptions": [
            "Unknown method.",
            "Receive verification code by SMS.",
            "Receive verification code by phone call."
          ]
        },
        "languageCode": {
          "type": "string",
          "description": "Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) (for example, en-US). Language code is used to provide localized `SMS` and `PHONE_CALL`. Default language used is en-US if not provided."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number to be verified."
        },
        "phoneRegionCode": {
          "description": "Required. Two letter country code for the phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosSaleRequest": {
      "properties": {
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile."
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        }
      },
      "id": "PosSaleRequest",
      "type": "object"
    },
    "OrderShipmentScheduledDeliveryDetails": {
      "id": "OrderShipmentScheduledDeliveryDetails",
      "properties": {
        "carrierPhoneNumber": {
          "type": "string",
          "description": "The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (for example, \"+41 44 668 1800\")."
        },
        "scheduledDate": {
          "description": "The date a shipment is scheduled for delivery, in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerReturnReason": {
      "properties": {
        "reasonCode": {
          "type": "string",
          "description": "Code of the return reason. Acceptable values are: - \"`betterPriceFound`\" - \"`changedMind`\" - \"`damagedOrDefectiveItem`\" - \"`didNotMatchDescription`\" - \"`doesNotFit`\" - \"`expiredItem`\" - \"`incorrectItemReceived`\" - \"`noLongerNeeded`\" - \"`notSpecified`\" - \"`orderedWrongItem`\" - \"`other`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`undeliverable`\" "
        },
        "description": {
          "type": "string",
          "description": "Description of the reason."
        }
      },
      "type": "object",
      "id": "CustomerReturnReason"
    },
    "OrderCancellation": {
      "id": "OrderCancellation",
      "type": "object",
      "properties": {
        "creationDate": {
          "type": "string",
          "description": "Date on which the cancellation has been created, in ISO 8601 format."
        },
        "quantity": {
          "description": "The quantity that was canceled.",
          "format": "uint32",
          "type": "integer"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Buy on Google until you make an update to that product. This won't affect your Shopping ads. Acceptable values are: - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`customerCanceled`\" - \"`customerInitiatedCancel`\" - \"`customerSupportRequested`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceError`\" - \"`returnRefundAbuse`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`failedToCaptureFunds`\" "
        },
        "actor": {
          "description": "The actor that created the cancellation. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      }
    },
    "OrdersSetLineItemMetadataRequest": {
      "type": "object",
      "id": "OrdersSetLineItemMetadataRequest",
      "properties": {
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "lineItemId": {
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        }
      }
    },
    "InapplicabilityDetails": {
      "description": "Map of inapplicability details.",
      "properties": {
        "inapplicableCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of this inapplicable reason code."
        },
        "inapplicableReason": {
          "enumDescriptions": [
            "Default value. Should not be used.",
            "The rule set for this product cannot beat the buybox winner.",
            "This product can already win the buybox without rule.",
            "Another rule of the same type takes precedence over this one.",
            "Another rule of a different type takes precedence over this one.",
            "The rule restrictions are not met. For example, this may be the case if the calculated rule price is lower than floor price in the restriction.",
            "The reason is not categorized to any known reason.",
            "The auto_pricing_min_price is invalid. For example, it is missing or \u003c 0.",
            "The floor defined in the rule is invalid. For example, it has the wrong sign which results in a floor \u003c 0."
          ],
          "description": "Reason code this rule was not applicable.",
          "type": "string",
          "enum": [
            "INAPPLICABLE_REASON_UNSPECIFIED",
            "CANNOT_BEAT_BUYBOX_WINNER",
            "ALREADY_WINNING_BUYBOX",
            "TRIUMPHED_OVER_BY_SAME_TYPE_RULE",
            "TRIUMPHED_OVER_BY_OTHER_RULE_ON_OFFER",
            "RESTRICTIONS_NOT_MET",
            "UNCATEGORIZED",
            "INVALID_AUTO_PRICE_MIN",
            "INVALID_FLOOR_CONFIG"
          ]
        }
      },
      "id": "InapplicabilityDetails",
      "type": "object"
    },
    "OrderreturnsAcknowledgeResponse": {
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderreturnsAcknowledgeResponse`\"."
        }
      },
      "type": "object",
      "id": "OrderreturnsAcknowledgeResponse"
    },
    "OrdersCancelLineItemResponse": {
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCancelLineItemResponse`\"."
        }
      },
      "type": "object",
      "id": "OrdersCancelLineItemResponse"
    },
    "OrdersCancelTestOrderByCustomerResponse": {
      "id": "OrdersCancelTestOrderByCustomerResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCancelTestOrderByCustomerResponse`\".",
          "type": "string"
        }
      }
    },
    "AccounttaxCustomBatchResponseEntry": {
      "properties": {
        "errors": {
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.",
          "$ref": "Errors"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accounttaxCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        },
        "accountTax": {
          "$ref": "AccountTax",
          "description": "The retrieved or updated account tax settings."
        }
      },
      "description": "A batch entry encoding a single non-batch accounttax response.",
      "type": "object",
      "id": "AccounttaxCustomBatchResponseEntry"
    },
    "DatafeedsFetchNowResponse": {
      "id": "DatafeedsFetchNowResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedsFetchNowResponse`\"."
        }
      },
      "type": "object"
    },
    "TransitTableTransitTimeRow": {
      "id": "TransitTableTransitTimeRow",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "TransitTableTransitTimeRowTransitTimeValue"
          }
        }
      }
    },
    "InvoiceSummary": {
      "type": "object",
      "id": "InvoiceSummary",
      "properties": {
        "additionalChargeSummaries": {
          "type": "array",
          "description": "Summary of the total amounts of the additional charges.",
          "items": {
            "$ref": "InvoiceSummaryAdditionalChargeSummary"
          }
        },
        "productTotal": {
          "description": "[required] Total price for the product.",
          "$ref": "Amount"
        }
      }
    },
    "ReturnaddressCustomBatchRequestEntry": {
      "id": "ReturnaddressCustomBatchRequestEntry",
      "properties": {
        "merchantId": {
          "description": "The Merchant Center account ID.",
          "format": "uint64",
          "type": "string"
        },
        "method": {
          "description": "Method of the batch request entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" ",
          "type": "string"
        },
        "returnAddress": {
          "description": "The return address to submit. This should be set only if the method is `insert`.",
          "$ref": "ReturnAddress"
        },
        "returnAddressId": {
          "description": "The return address ID. This should be set only if the method is `delete` or `get`.",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OrdersCancelRequest": {
      "type": "object",
      "id": "OrdersCancelRequest",
      "properties": {
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`failedToCaptureFunds`\" ",
          "type": "string"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      }
    },
    "OrdersRefundOrderResponse": {
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersRefundOrderResponse`\".",
          "type": "string"
        }
      },
      "id": "OrdersRefundOrderResponse",
      "type": "object"
    },
    "LocalinventoryCustomBatchResponseEntry": {
      "properties": {
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#localinventoryCustomBatchResponseEntry`\"",
          "type": "string"
        }
      },
      "description": "Batch entry encoding a single local inventory update response.",
      "id": "LocalinventoryCustomBatchResponseEntry",
      "type": "object"
    },
    "OrderLineItem": {
      "properties": {
        "quantityCanceled": {
          "type": "integer",
          "description": "Number of items canceled.",
          "format": "uint32"
        },
        "quantityShipped": {
          "description": "Number of items shipped.",
          "type": "integer",
          "format": "uint32"
        },
        "quantityUndeliverable": {
          "type": "integer",
          "description": "Number of items undeliverable.",
          "format": "uint32"
        },
        "price": {
          "$ref": "Price",
          "description": "Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20."
        },
        "tax": {
          "$ref": "Price",
          "description": "Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4."
        },
        "quantityPending": {
          "description": "Number of items pending.",
          "type": "integer",
          "format": "uint32"
        },
        "quantityReturned": {
          "description": "Number of items returned.",
          "format": "uint32",
          "type": "integer"
        },
        "returns": {
          "description": "Returns of the line item.",
          "items": {
            "$ref": "OrderReturn"
          },
          "type": "array"
        },
        "returnInfo": {
          "$ref": "OrderLineItemReturnInfo",
          "description": "Details of the return policy for the line item."
        },
        "adjustments": {
          "type": "array",
          "items": {
            "$ref": "OrderLineItemAdjustment"
          },
          "description": "Price and tax adjustments applied on the line item."
        },
        "id": {
          "description": "The ID of the line item.",
          "type": "string"
        },
        "cancellations": {
          "description": "Cancellations of the line item.",
          "items": {
            "$ref": "OrderCancellation"
          },
          "type": "array"
        },
        "product": {
          "description": "Product data as seen by customer from the time of the order placement. Note that certain attributes values (for example, title or gtin) might be reformatted and no longer match values submitted through product feed.",
          "$ref": "OrderLineItemProduct"
        },
        "quantityDelivered": {
          "format": "uint32",
          "description": "Number of items delivered.",
          "type": "integer"
        },
        "quantityOrdered": {
          "type": "integer",
          "format": "uint32",
          "description": "Number of items ordered."
        },
        "shippingDetails": {
          "description": "Details of the requested shipping for the line item.",
          "$ref": "OrderLineItemShippingDetails"
        },
        "quantityReadyForPickup": {
          "description": "Number of items ready for pickup.",
          "format": "uint32",
          "type": "integer"
        },
        "annotations": {
          "description": "Annotations that are attached to the line item.",
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        }
      },
      "id": "OrderLineItem",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem": {
      "properties": {
        "quantity": {
          "description": "Quantity that is returned.",
          "type": "integer",
          "format": "uint32"
        },
        "lineItemId": {
          "description": "The ID of the line item to return.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
    },
    "ProductViewItemIssueIssueSeverityPerDestination": {
      "description": "Issue severity for all affected regions in a destination.",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Issue destination."
        },
        "disapprovedCountries": {
          "description": "List of disapproved countries in the destination.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "demotedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of demoted countries in the destination."
        }
      },
      "type": "object",
      "id": "ProductViewItemIssueIssueSeverityPerDestination"
    },
    "AccountsUpdateLabelsResponse": {
      "id": "AccountsUpdateLabelsResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsUpdateLabelsResponse`\"."
        }
      },
      "type": "object"
    },
    "ProductDeliveryTime": {
      "id": "ProductDeliveryTime",
      "type": "object",
      "properties": {
        "productId": {
          "$ref": "ProductId",
          "description": "Required. The `id` of the product."
        },
        "areaDeliveryTimes": {
          "items": {
            "$ref": "ProductDeliveryTimeAreaDeliveryTime"
          },
          "type": "array",
          "description": "Required. A set of associations between `DeliveryArea` and `DeliveryTime` entries. The total number of `areaDeliveryTimes` can be at most 100."
        }
      },
      "description": "The estimated days to deliver a product after an order is placed. Only authorized shipping signals partners working with a merchant can use this resource. Merchants should use the [`products`](https://developers.google.com/shopping-content/reference/rest/v2.1/products#productshipping) resource instead."
    },
    "OrderreturnsRejectOperation": {
      "type": "object",
      "id": "OrderreturnsRejectOperation",
      "properties": {
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "description": "The reason for the return.",
          "type": "string"
        }
      }
    },
    "MethodQuota": {
      "description": "The quota information per method in the Content API.",
      "type": "object",
      "id": "MethodQuota",
      "properties": {
        "quotaUsage": {
          "format": "int64",
          "description": "The current quota usage, for example the number of calls for the method.",
          "type": "string"
        },
        "method": {
          "description": "The method name, for example “products.list”. Method name does not contain version because quota can be shared between different API versions of the same method.",
          "type": "string"
        },
        "quotaLimit": {
          "description": "The current quota limit, for example the maximum number of calls for the method.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "ProductsCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch products response.",
      "id": "ProductsCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "product": {
          "description": "The inserted product. Only defined if the method is `insert` and if the request was successful.",
          "$ref": "Product"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "errors": {
          "description": "A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.",
          "$ref": "Errors"
        }
      }
    },
    "ReturnpolicyCustomBatchRequest": {
      "type": "object",
      "id": "ReturnpolicyCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "ReturnpolicyCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "OrderTrackingSignalLineItemDetails": {
      "id": "OrderTrackingSignalLineItemDetails",
      "properties": {
        "gtin": {
          "type": "string",
          "description": "The Global Trade Item Number."
        },
        "brand": {
          "description": "Brand of the product.",
          "type": "string"
        },
        "productTitle": {
          "description": "Plain text title of this product.",
          "type": "string"
        },
        "sku": {
          "description": "Merchant SKU for this item (deprecated).",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "Required. The Content API REST ID of the product, in the form channel:contentLanguage:targetCountry:offerId."
        },
        "upc": {
          "type": "string",
          "description": "Universal product code for this item (deprecated: Please use GTIN instead)."
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the line item in the order.",
          "format": "int64"
        },
        "productDescription": {
          "type": "string",
          "description": "Plain text description of this product (deprecated: Please use product_title instead)."
        },
        "lineItemId": {
          "description": "Required. The ID for this line item.",
          "type": "string"
        },
        "mpn": {
          "description": "The manufacturer part number.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The line items of the order."
    },
    "OrderCustomer": {
      "properties": {
        "fullName": {
          "type": "string",
          "description": "Full name of the customer."
        },
        "invoiceReceivingEmail": {
          "type": "string",
          "description": "Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Buy on Google."
        },
        "marketingRightsInfo": {
          "$ref": "OrderCustomerMarketingRightsInfo",
          "description": "Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order."
        },
        "loyaltyInfo": {
          "$ref": "OrderCustomerLoyaltyInfo",
          "description": "Loyalty program information."
        }
      },
      "id": "OrderCustomer",
      "type": "object"
    },
    "OrderLineItemAdjustment": {
      "id": "OrderLineItemAdjustment",
      "properties": {
        "taxAdjustment": {
          "description": "Adjustment for total tax of the line item.",
          "$ref": "Price"
        },
        "type": {
          "description": "Type of this adjustment. Acceptable values are: - \"`promotion`\" ",
          "type": "string"
        },
        "priceAdjustment": {
          "$ref": "Price",
          "description": "Adjustment for total price of the line item."
        }
      },
      "type": "object"
    },
    "ProductViewItemIssueItemIssueType": {
      "type": "object",
      "id": "ProductViewItemIssueItemIssueType",
      "description": "Type of the item issue.",
      "properties": {
        "canonicalAttribute": {
          "description": "Canonical attribute name for attribute-specific issues.",
          "type": "string"
        }
      }
    },
    "ShoppingAdsProgramStatus": {
      "properties": {
        "globalState": {
          "type": "string",
          "enumDescriptions": [
            "State is unknown.",
            "Program is not enabled for any country.",
            "No products have been uploaded for any region. Upload products to Merchant Center.",
            "Program is enabled and offers are uploaded for at least one country."
          ],
          "enum": [
            "PROGRAM_STATE_UNSPECIFIED",
            "NOT_ENABLED",
            "NO_OFFERS_UPLOADED",
            "ENABLED"
          ],
          "description": "State of the program. `ENABLED` if there are offers for at least one region."
        },
        "regionStatuses": {
          "type": "array",
          "description": "Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`.",
          "items": {
            "$ref": "ShoppingAdsProgramStatusRegionStatus"
          }
        }
      },
      "id": "ShoppingAdsProgramStatus",
      "type": "object",
      "description": "Response message for GetShoppingAdsProgramStatus."
    },
    "PosInventoryRequest": {
      "type": "object",
      "id": "PosInventoryRequest",
      "properties": {
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.",
          "type": "string"
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "quantity": {
          "format": "int64",
          "type": "string",
          "description": "Required. The available quantity of the item."
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "LiasettingsListPosDataProvidersResponse": {
      "type": "object",
      "properties": {
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProviders"
          },
          "description": "The list of POS data providers for each eligible country",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsListPosDataProvidersResponse`\".",
          "type": "string"
        }
      },
      "id": "LiasettingsListPosDataProvidersResponse"
    },
    "ShipmentTrackingInfo": {
      "id": "ShipmentTrackingInfo",
      "properties": {
        "trackingNumber": {
          "description": "The tracking number for the package.",
          "type": "string"
        },
        "carrier": {
          "type": "string",
          "description": "The shipping carrier that handles the package. Acceptable values are: - \"`boxtal`\" - \"`bpost`\" - \"`chronopost`\" - \"`colisPrive`\" - \"`colissimo`\" - \"`cxt`\" - \"`deliv`\" - \"`dhl`\" - \"`dpd`\" - \"`dynamex`\" - \"`eCourier`\" - \"`easypost`\" - \"`efw`\" - \"`fedex`\" - \"`fedexSmartpost`\" - \"`geodis`\" - \"`gls`\" - \"`googleCourier`\" - \"`gsx`\" - \"`jdLogistics`\" - \"`laPoste`\" - \"`lasership`\" - \"`manual`\" - \"`mpx`\" - \"`onTrac`\" - \"`other`\" - \"`tnt`\" - \"`uds`\" - \"`ups`\" - \"`usps`\" "
        }
      },
      "type": "object"
    },
    "Account": {
      "description": "Account data. After the creation of a new account it may take a few minutes before it's fully operational. The methods delete, insert, and update require the admin role.",
      "properties": {
        "users": {
          "items": {
            "$ref": "AccountUser"
          },
          "type": "array",
          "description": "Users with access to the account. Every account (except for subaccounts) must have at least one admin user."
        },
        "id": {
          "format": "uint64",
          "type": "string",
          "description": "Required. 64-bit Merchant Center account ID."
        },
        "googleMyBusinessLink": {
          "$ref": "AccountGoogleMyBusinessLink",
          "description": "The Business Profile which is linked or in the process of being linked with the Merchant Center account."
        },
        "websiteUrl": {
          "type": "string",
          "description": "The merchant's website."
        },
        "businessInformation": {
          "$ref": "AccountBusinessInformation",
          "description": "The business information of the account."
        },
        "adsLinks": {
          "items": {
            "$ref": "AccountAdsLink"
          },
          "type": "array",
          "description": "Linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the Ads interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list."
        },
        "automaticImprovements": {
          "description": "The automatic improvements of the account can be used to automatically update items, improve images and shipping. Each section inside AutomaticImprovements is updated separately.",
          "$ref": "AccountAutomaticImprovements"
        },
        "name": {
          "description": "Required. Display name for the account.",
          "type": "string"
        },
        "youtubeChannelLinks": {
          "type": "array",
          "description": "Linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.",
          "items": {
            "$ref": "AccountYouTubeChannelLink"
          }
        },
        "sellerId": {
          "description": "Client-specific, locally-unique, internal ID for the child account.",
          "type": "string"
        },
        "accountManagement": {
          "type": "string",
          "description": "Output only. How the account is managed. Acceptable values are: - \"`manual`\" - \"`automatic`\" ",
          "readOnly": true
        },
        "labelIds": {
          "items": {
            "format": "uint64",
            "type": "string"
          },
          "description": "Manually created label IDs that are assigned to the account by CSS.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#account`\"."
        },
        "cssId": {
          "type": "string",
          "format": "uint64",
          "description": "ID of CSS the account belongs to."
        },
        "automaticLabelIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Automatically created label IDs that are assigned to the account by CSS Center."
        },
        "adultContent": {
          "type": "boolean",
          "description": "Indicates whether the merchant sells adult content."
        }
      },
      "type": "object",
      "id": "Account"
    },
    "AccountstatusesCustomBatchRequest": {
      "type": "object",
      "id": "AccountstatusesCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccountstatusesCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "PostalCodeGroup": {
      "type": "object",
      "id": "PostalCodeGroup",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the postal code group, referred to in headers. Required."
        },
        "postalCodeRanges": {
          "type": "array",
          "items": {
            "$ref": "PostalCodeRange"
          },
          "description": "A range of postal codes. Required."
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country the postal code group applies to. Required."
        }
      }
    },
    "AccountsClaimWebsiteResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsClaimWebsiteResponse`\"."
        }
      },
      "id": "AccountsClaimWebsiteResponse"
    },
    "Segments": {
      "properties": {
        "categoryL1": {
          "type": "string",
          "description": "[Product category (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
        },
        "productTypeL1": {
          "description": "[Product type (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.",
          "type": "string"
        },
        "customLabel3": {
          "description": "Custom label 3 for custom grouping of products.",
          "type": "string"
        },
        "categoryL4": {
          "type": "string",
          "description": "[Product category (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
        },
        "categoryL3": {
          "description": "[Product category (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy.",
          "type": "string"
        },
        "customLabel0": {
          "description": "Custom label 0 for custom grouping of products.",
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency in which price metrics are represented, for example, if you select `ordered_item_sales_micros`, the returned value will be represented by this currency."
        },
        "customerCountryCode": {
          "description": "Code of the country where the customer is located at the time of the event. Represented in the ISO 3166 format. If the customer country cannot be determined, a special 'ZZ' code is returned.",
          "type": "string"
        },
        "categoryL5": {
          "type": "string",
          "description": "[Product category (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
        },
        "date": {
          "description": "Date in the merchant timezone to which metrics apply.",
          "$ref": "Date"
        },
        "categoryL2": {
          "type": "string",
          "description": "[Product category (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
        },
        "week": {
          "$ref": "Date",
          "description": "First day of the week (Monday) of the metrics date in the merchant timezone."
        },
        "offerId": {
          "type": "string",
          "description": "Merchant-provided id of the product."
        },
        "program": {
          "enum": [
            "PROGRAM_UNSPECIFIED",
            "SHOPPING_ADS",
            "FREE_PRODUCT_LISTING",
            "FREE_LOCAL_PRODUCT_LISTING",
            "BUY_ON_GOOGLE_LISTING"
          ],
          "description": "Program to which metrics apply, for example, Free Product Listing.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Shopping Ads.",
            "Free Product Listing.",
            "Free Local Product Listing.",
            "Buy on Google Listing."
          ]
        },
        "brand": {
          "type": "string",
          "description": "Brand of the product."
        },
        "title": {
          "description": "Title of the product.",
          "type": "string"
        },
        "productTypeL3": {
          "description": "[Product type (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.",
          "type": "string"
        },
        "customLabel1": {
          "type": "string",
          "description": "Custom label 1 for custom grouping of products."
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of products.",
          "type": "string"
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 4 for custom grouping of products."
        },
        "productTypeL4": {
          "type": "string",
          "description": "[Product type (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy."
        },
        "productTypeL2": {
          "description": "[Product type (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy.",
          "type": "string"
        },
        "productTypeL5": {
          "type": "string",
          "description": "[Product type (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy."
        }
      },
      "id": "Segments",
      "type": "object",
      "description": "Dimensions according to which metrics are segmented in the response. Values of product dimensions, such as `offer_id`, reflect the state of a product at the time of the corresponding event, for example, impression or order. Segment fields cannot be selected in queries without also selecting at least one metric field. Values are only set for dimensions requested explicitly in the request's search query."
    },
    "CollectionStatusDestinationStatus": {
      "description": "Destination status message.",
      "id": "CollectionStatusDestinationStatus",
      "properties": {
        "destination": {
          "type": "string",
          "description": "The name of the destination"
        },
        "status": {
          "type": "string",
          "description": "The status for the specified destination in the collections target country."
        },
        "pendingCountries": {
          "items": {
            "type": "string"
          },
          "description": "Country codes (ISO 3166-1 alpha-2) where the collection is pending approval.",
          "type": "array"
        },
        "disapprovedCountries": {
          "description": "Country codes (ISO 3166-1 alpha-2) where the collection is disapproved.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "approvedCountries": {
          "items": {
            "type": "string"
          },
          "description": "Country codes (ISO 3166-1 alpha-2) where the collection is approved.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchResponse": {
      "description": "Response message for the ReportService.Search method.",
      "properties": {
        "results": {
          "description": "Rows that matched the search query.",
          "type": "array",
          "items": {
            "$ref": "ReportRow"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token which can be sent as `page_token` to retrieve the next page. If omitted, there are no subsequent pages."
        }
      },
      "id": "SearchResponse",
      "type": "object"
    },
    "ReturnPolicyOnlineReturnShippingFee": {
      "id": "ReturnPolicyOnlineReturnShippingFee",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "FIXED",
            "CUSTOMER_PAYING_ACTUAL_FEE"
          ],
          "description": "Type of return shipping fee.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The return shipping fee is a fixed value.",
            "Customer will pay the actual return shipping fee."
          ],
          "type": "string"
        },
        "fixedFee": {
          "description": "Fixed return shipping fee amount. This value is only applicable when type is FIXED. We will treat the return shipping fee as free if type is FIXED and this value is not set.",
          "$ref": "PriceAmount"
        }
      },
      "description": "The return shipping fee. This can either be a fixed fee or a boolean to indicate that the customer pays the actual shipping cost.",
      "type": "object"
    },
    "RepricingRuleStatsBasedRule": {
      "description": "Definition of stats based rule.",
      "properties": {
        "percentageDelta": {
          "description": "The percent change against the price target. Valid from 0 to 100 inclusively.",
          "format": "int32",
          "type": "integer"
        },
        "priceDelta": {
          "type": "string",
          "description": "The price delta against the above price target. A positive value means the price should be adjusted to be above statistical measure, and a negative value means below. Currency code must not be included."
        }
      },
      "type": "object",
      "id": "RepricingRuleStatsBasedRule"
    },
    "LiasettingsSetPosDataProviderResponse": {
      "id": "LiasettingsSetPosDataProviderResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsSetPosDataProviderResponse`\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersInStoreRefundLineItemRequest": {
      "id": "OrdersInStoreRefundLineItemRequest",
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "priceAmount": {
          "$ref": "Price",
          "description": "The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. Required."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity to return and refund.",
          "format": "uint32"
        },
        "taxAmount": {
          "description": "The amount of tax to be refunded. Required.",
          "$ref": "Price"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountImageImprovements": {
      "properties": {
        "accountImageImprovementsSettings": {
          "$ref": "AccountImageImprovementsSettings",
          "description": "Determines how the images should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator."
        },
        "effectiveAllowAutomaticImageImprovements": {
          "readOnly": true,
          "description": "Output only. The effective value of allow_automatic_image_improvements. If account_image_improvements_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "AccountImageImprovements",
      "description": "This improvement will attempt to automatically correct submitted images if they don't meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973)"
    },
    "PosListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posListResponse`\".",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "PosStore"
          },
          "type": "array"
        }
      },
      "id": "PosListResponse"
    },
    "OrdersReturnRefundLineItemRequest": {
      "properties": {
        "priceAmount": {
          "$ref": "Price",
          "description": "The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. If omitted, refundless return is assumed."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "taxAmount": {
          "description": "The amount of tax to be refunded. Optional, but if filled, then priceAmount must be set. Calculated automatically if not provided.",
          "$ref": "Price"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity to return and refund. Quantity is required.",
          "type": "integer"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        }
      },
      "id": "OrdersReturnRefundLineItemRequest",
      "type": "object"
    },
    "OrderLineItemProductVariantAttribute": {
      "type": "object",
      "properties": {
        "dimension": {
          "type": "string",
          "description": "The dimension of the variant."
        },
        "value": {
          "description": "The value for the dimension.",
          "type": "string"
        }
      },
      "id": "OrderLineItemProductVariantAttribute"
    },
    "OrderOrderAnnotation": {
      "properties": {
        "key": {
          "description": "Key for additional google provided (as key-value pairs) annotation.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Value for additional google provided (as key-value pairs) annotation."
        }
      },
      "id": "OrderOrderAnnotation",
      "type": "object"
    },
    "CarrierRate": {
      "type": "object",
      "id": "CarrierRate",
      "properties": {
        "percentageAdjustment": {
          "type": "string",
          "description": "Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `\"5.4\"` increases the rate by 5.4%, `\"-3\"` decreases the rate by 3%. Optional."
        },
        "flatAdjustment": {
          "description": "Additive shipping rate modifier. Can be negative. For example `{ \"value\": \"1\", \"currency\" : \"USD\" }` adds $1 to the rate, `{ \"value\": \"-3\", \"currency\" : \"USD\" }` removes $3 from the rate. Optional.",
          "$ref": "Price"
        },
        "carrierService": {
          "type": "string",
          "description": "Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved through the `getSupportedCarriers` method. Required."
        },
        "originPostalCode": {
          "description": "Shipping origin for this carrier rate. Required.",
          "type": "string"
        },
        "carrierName": {
          "description": "Carrier service, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved through the `getSupportedCarriers` method. Required.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the carrier rate. Must be unique per rate group. Required."
        }
      }
    },
    "ProductUnitPricingMeasure": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The measure of an item.",
          "format": "double",
          "type": "number"
        },
        "unit": {
          "type": "string",
          "description": "The unit of the measure."
        }
      },
      "id": "ProductUnitPricingMeasure"
    },
    "DatafeedsCustomBatchResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedsCustomBatchResponse`\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "DatafeedsCustomBatchResponseEntry"
          }
        }
      },
      "id": "DatafeedsCustomBatchResponse"
    },
    "AccountStatus": {
      "id": "AccountStatus",
      "description": "The status of an account, that is, information about its products, which is computed offline and not returned immediately at insertion time.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountStatus`\""
        },
        "accountLevelIssues": {
          "items": {
            "$ref": "AccountStatusAccountLevelIssue"
          },
          "description": "A list of account level issues.",
          "type": "array"
        },
        "accountManagement": {
          "type": "string",
          "description": "How the account is managed. Acceptable values are: - \"`manual`\" - \"`automatic`\" "
        },
        "products": {
          "description": "List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.",
          "type": "array",
          "items": {
            "$ref": "AccountStatusProducts"
          }
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the account for which the status is reported."
        },
        "websiteClaimed": {
          "description": "Whether the account's website is claimed or not.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "OrdersAdvanceTestOrderResponse": {
      "id": "OrdersAdvanceTestOrderResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersAdvanceTestOrderResponse`\"."
        }
      }
    },
    "AccountAutomaticImprovements": {
      "id": "AccountAutomaticImprovements",
      "properties": {
        "shippingImprovements": {
          "$ref": "AccountShippingImprovements",
          "description": "Not available for MCAs [accounts](https://support.google.com/merchants/answer/188487). By turning on [automatic shipping improvements](https://support.google.com/merchants/answer/10027038), you are allowing Google to improve the accuracy of your delivery times shown to shoppers using Google. More accurate delivery times, especially when faster, typically lead to better conversion rates. Google will improve your estimated delivery times based on various factors: - Delivery address of an order - Current handling time and shipping time settings - Estimated weekdays or business days - Parcel tracking data This field is only updated (cleared) if provided."
        },
        "imageImprovements": {
          "description": "This improvement will attempt to automatically correct submitted images if they don't meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973) This field is only updated (cleared) if provided.",
          "$ref": "AccountImageImprovements"
        },
        "itemUpdates": {
          "$ref": "AccountItemUpdates",
          "description": "Turning on [item updates](https://support.google.com/merchants/answer/3246284) allows Google to automatically update items for you. When item updates are on, Google uses the structured data markup on the website and advanced data extractors to update the price and availability of the items. When the item updates are off, items with mismatched data aren't shown. This field is only updated (cleared) if provided."
        }
      },
      "type": "object",
      "description": "The automatic improvements of the account can be used to automatically update items, improve images and shipping."
    },
    "ProductStatusItemLevelIssue": {
      "type": "object",
      "id": "ProductStatusItemLevelIssue",
      "properties": {
        "detail": {
          "type": "string",
          "description": "A detailed issue description in English."
        },
        "code": {
          "type": "string",
          "description": "The error code of the issue."
        },
        "applicableCountries": {
          "description": "List of country codes (ISO 3166-1 alpha-2) where issue applies to the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resolution": {
          "type": "string",
          "description": "Whether the issue can be resolved by the merchant."
        },
        "attributeName": {
          "type": "string",
          "description": "The attribute's name, if the issue is caused by a single attribute."
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "servability": {
          "description": "How this issue affects serving of the offer.",
          "type": "string"
        },
        "destination": {
          "type": "string",
          "description": "The destination the issue applies to."
        },
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        }
      }
    },
    "CollectionFeaturedProduct": {
      "id": "CollectionFeaturedProduct",
      "description": "The message for FeaturedProduct. [FeaturedProduct](https://support.google.com/merchants/answer/9703736)",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Required. X-coordinate of the product callout on the Shoppable Image.",
          "format": "float"
        },
        "y": {
          "description": "Required. Y-coordinate of the product callout on the Shoppable Image.",
          "format": "float",
          "type": "number"
        },
        "offerId": {
          "type": "string",
          "description": "The unique identifier for the product item."
        }
      }
    },
    "SettlementTransactionTransaction": {
      "type": "object",
      "properties": {
        "postDate": {
          "type": "string",
          "description": "The time on which the event occurred in ISO 8601 format."
        },
        "type": {
          "type": "string",
          "description": "The type of the transaction that occurred. Acceptable values are: - \"`order`\" - \"`reversal`\" - \"`orderRefund`\" - \"`reversalRefund`\" - \"`issueRelatedRefundAndReplacement`\" - \"`returnLabelShippingFeeTransaction`\" - \"`reversalIssueRelatedRefundAndReplacement`\" - \"`reversalReturnLabelShippingFeeTransaction`\" - \"`lumpSumCorrectionTransaction`\" "
        }
      },
      "id": "SettlementTransactionTransaction"
    },
    "LiaInventorySettings": {
      "properties": {
        "inventoryVerificationContactName": {
          "description": "The name of the contact for the inventory verification process.",
          "type": "string"
        },
        "inventoryVerificationContactEmail": {
          "type": "string",
          "description": "The email of the contact for the inventory verification process."
        },
        "inventoryVerificationContactStatus": {
          "type": "string",
          "description": "The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        },
        "status": {
          "description": "The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LiaInventorySettings"
    },
    "RepricingRuleReportBuyboxWinningRuleStats": {
      "type": "object",
      "id": "RepricingRuleReportBuyboxWinningRuleStats",
      "properties": {
        "buyboxWonProductCount": {
          "format": "int32",
          "description": "Number of unique products that won the buybox with this rule during this period of time.",
          "type": "integer"
        }
      },
      "description": "Stats specific to buybox winning rules for rule report."
    },
    "LiasettingsCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "LiasettingsCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "LiasettingsCustomBatchRequest"
    },
    "PostalCodeRange": {
      "type": "object",
      "id": "PostalCodeRange",
      "properties": {
        "postalCodeRangeEnd": {
          "type": "string",
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`."
        },
        "postalCodeRangeBegin": {
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required.",
          "type": "string"
        }
      }
    },
    "RepricingRuleEffectiveTime": {
      "properties": {
        "fixedTimePeriods": {
          "type": "array",
          "items": {
            "$ref": "RepricingRuleEffectiveTimeFixedTimePeriod"
          },
          "description": "A list of fixed time periods combined with OR. The maximum number of entries is limited to 5."
        }
      },
      "type": "object",
      "id": "RepricingRuleEffectiveTime"
    },
    "AccountBusinessInformation": {
      "type": "object",
      "id": "AccountBusinessInformation",
      "properties": {
        "address": {
          "$ref": "AccountAddress",
          "description": "The address of the business. Use `\\n` to add a second address line."
        },
        "customerService": {
          "$ref": "AccountCustomerService",
          "description": "The customer service information of the business."
        },
        "koreanBusinessRegistrationNumber": {
          "type": "string",
          "description": "The 10-digit [Korean business registration number](https://support.google.com/merchants/answer/9037766) separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set."
        },
        "phoneVerificationStatus": {
          "type": "string",
          "description": "Verification status of the phone number of the business. This status is read only and can be updated only by successful phone verification. Acceptable values are: - \"`verified`\" - \"`unverified`\" "
        },
        "phoneNumber": {
          "description": "The phone number of the business. This can only be updated if a verified phone number is not already set. To replace a verified phone number use the `Accounts.requestphoneverification` and `Accounts.verifyphonenumber`.",
          "type": "string"
        }
      }
    },
    "OrdersUpdateShipmentRequest": {
      "id": "OrdersUpdateShipmentRequest",
      "properties": {
        "undeliveredDate": {
          "type": "string",
          "description": "Date on which the shipment has been undeliverable, in ISO 8601 format. Optional and can be provided only if `status` is `undeliverable`."
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment. Not updated if missing."
        },
        "carrier": {
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "readyPickupDate": {
          "description": "Date on which the shipment has been ready for pickup, in ISO 8601 format. Optional and can be provided only if `status` is `ready for pickup`.",
          "type": "string"
        },
        "deliveryDate": {
          "type": "string",
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`."
        },
        "status": {
          "type": "string",
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" "
        },
        "shipmentId": {
          "description": "The ID of the shipment.",
          "type": "string"
        },
        "scheduledDeliveryDetails": {
          "$ref": "OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails",
          "description": "Delivery details of the shipment if scheduling is needed."
        },
        "lastPickupDate": {
          "description": "Date after which the pickup will expire, in ISO 8601 format. Required only when order is buy-online-pickup-in-store(BOPIS) and `status` is `ready for pickup`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegionalinventoryCustomBatchRequestEntry": {
      "type": "object",
      "id": "RegionalinventoryCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch regional inventory request.",
      "properties": {
        "method": {
          "type": "string",
          "description": "Method of the batch request entry. Acceptable values are: - \"`insert`\" "
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "regionalInventory": {
          "description": "Price and availability of the product.",
          "$ref": "RegionalInventory"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which to update price and availability."
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        }
      }
    },
    "OrderreportsListDisbursementsResponse": {
      "id": "OrderreportsListDisbursementsResponse",
      "type": "object",
      "properties": {
        "disbursements": {
          "type": "array",
          "description": "The list of disbursements.",
          "items": {
            "$ref": "OrderReportDisbursement"
          }
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of disbursements.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#orderreportsListDisbursementsResponse`\".",
          "type": "string"
        }
      }
    },
    "TransitTable": {
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "TransitTableTransitTimeRow"
          }
        },
        "transitTimeLabels": {
          "description": "A list of transit time labels. The last value can be `\"all other labels\"`. Example: `[\"food\", \"electronics\", \"all other labels\"]`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "postalCodeGroupNames": {
          "type": "array",
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TransitTable",
      "type": "object"
    },
    "TimeZone": {
      "type": "object",
      "id": "TimeZone",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "properties": {
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        }
      }
    },
    "OrderreturnsReturnItem": {
      "properties": {
        "refund": {
          "$ref": "OrderreturnsRefundOperation",
          "description": "Refunds the item."
        },
        "returnItemId": {
          "description": "Unit level ID for the return item. Different units of the same product will have different IDs.",
          "type": "string"
        },
        "reject": {
          "description": "Rejects the item.",
          "$ref": "OrderreturnsRejectOperation"
        }
      },
      "id": "OrderreturnsReturnItem",
      "type": "object"
    },
    "OrderLineItemShippingDetails": {
      "id": "OrderLineItemShippingDetails",
      "type": "object",
      "properties": {
        "method": {
          "$ref": "OrderLineItemShippingDetailsMethod",
          "description": "Required. Details of the shipping method."
        },
        "type": {
          "description": "Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "pickupPromiseInMinutes": {
          "format": "uint32",
          "type": "integer",
          "description": "The promised time in minutes in which the order will be ready for pickup. This only applies to buy-online-pickup-in-store same-day order."
        },
        "shipByDate": {
          "type": "string",
          "description": "Required. The ship by date, in ISO 8601 format."
        },
        "deliverByDate": {
          "type": "string",
          "description": "Required. The delivery by date, in ISO 8601 format."
        }
      }
    },
    "AccounttaxCustomBatchRequestEntry": {
      "id": "AccounttaxCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch accounttax request.",
      "properties": {
        "accountTax": {
          "$ref": "AccountTax",
          "description": "The account tax settings to update. Only defined if the method is `update`."
        },
        "accountId": {
          "description": "The ID of the account for which to get/update account tax settings.",
          "type": "string",
          "format": "uint64"
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" "
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OrdersUpdateLineItemShippingDetailsResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersUpdateLineItemShippingDetailsResponse`\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrdersUpdateLineItemShippingDetailsResponse",
      "type": "object"
    },
    "Warehouse": {
      "id": "Warehouse",
      "properties": {
        "businessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "Business days of the warehouse. If not set, will be Monday to Friday by default."
        },
        "shippingAddress": {
          "$ref": "Address",
          "description": "Required. Shipping address of the warehouse."
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the warehouse. Must be unique within account."
        },
        "cutoffTime": {
          "description": "Required. The latest time of day that an order can be accepted and begin processing. Later orders will be processed in the next day. The time is based on the warehouse postal code.",
          "$ref": "WarehouseCutoffTime"
        },
        "handlingDays": {
          "type": "string",
          "format": "int64",
          "description": "Required. The number of days it takes for this warehouse to pack up and ship an item. This is on the warehouse level, but can be overridden on the offer level based on the attributes of an item."
        }
      },
      "description": "A fulfillment warehouse, which stores and handles inventory.",
      "type": "object"
    },
    "Installment": {
      "properties": {
        "months": {
          "format": "int64",
          "type": "string",
          "description": "The number of installments the buyer has to pay."
        },
        "amount": {
          "$ref": "Price",
          "description": "The amount the buyer has to pay per month."
        }
      },
      "type": "object",
      "id": "Installment"
    },
    "OrderreturnsProcessRequest": {
      "type": "object",
      "id": "OrderreturnsProcessRequest",
      "properties": {
        "refundShippingFee": {
          "$ref": "OrderreturnsRefundOperation",
          "description": "Refunds for original shipping fee."
        },
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order return."
        },
        "returnItems": {
          "description": "The list of items to return.",
          "items": {
            "$ref": "OrderreturnsReturnItem"
          },
          "type": "array"
        },
        "fullChargeReturnShippingCost": {
          "description": "Option to charge the customer return shipping cost.",
          "type": "boolean"
        }
      }
    },
    "ReturnPolicyPolicy": {
      "properties": {
        "lastReturnDate": {
          "type": "string",
          "description": "Required. Last day for returning the items. In ISO 8601 format. When specifying the return window like this, set the policy type to \"lastReturnDate\". Use this for seasonal overrides only."
        },
        "numberOfDays": {
          "type": "string",
          "description": "The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. When specifying the return window like this, set the policy type to \"numberOfDaysAfterDelivery\". Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the default policy. Additional policies further allow 14, 15, 21 and 28 days, but note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics. A policy of less than 30 days can only be applied to those items.",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "description": "Policy type. Use \"lastReturnDate\" for seasonal overrides only. Note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics or non-returnable items such as food, perishables, and living things. A policy of less than 30 days can only be applied to those items. Acceptable values are: - \"`lastReturnDate`\" - \"`lifetimeReturns`\" - \"`noReturns`\" - \"`numberOfDaysAfterDelivery`\" "
        }
      },
      "type": "object",
      "id": "ReturnPolicyPolicy"
    }
  },
  "title": "Content API for Shopping",
  "ownerName": "Google",
  "id": "content:v2.1",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "version": "v2.1",
  "resources": {
    "accounttax": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "response": {
            "$ref": "AccounttaxListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists the tax settings of the sub-accounts in your Merchant Center account.",
          "path": "{merchantId}/accounttax",
          "flatPath": "{merchantId}/accounttax",
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. This must be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true
            },
            "maxResults": {
              "description": "The maximum number of tax settings to return in the response, used for paging.",
              "location": "query",
              "type": "integer",
              "format": "uint32"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            }
          },
          "id": "content.accounttax.list",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "update": {
          "request": {
            "$ref": "AccountTax"
          },
          "id": "content.accounttax.update",
          "flatPath": "{merchantId}/accounttax/{accountId}",
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            },
            "accountId": {
              "format": "uint64",
              "description": "The ID of the account for which to get/update account tax settings.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "description": "Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/accounttax/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "response": {
            "$ref": "AccountTax"
          },
          "httpMethod": "PUT"
        },
        "custombatch": {
          "parameters": {},
          "response": {
            "$ref": "AccounttaxCustomBatchResponse"
          },
          "flatPath": "accounttax/batch",
          "path": "accounttax/batch",
          "request": {
            "$ref": "AccounttaxCustomBatchRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "description": "Retrieves and updates tax settings of multiple accounts in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.accounttax.custombatch"
        },
        "get": {
          "id": "content.accounttax.get",
          "response": {
            "$ref": "AccountTax"
          },
          "description": "Retrieves the tax settings of the account.",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "accountId": {
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account for which to get/update account tax settings.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "flatPath": "{merchantId}/accounttax/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "{merchantId}/accounttax/{accountId}"
        }
      }
    },
    "settlementreports": {
      "methods": {
        "list": {
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.settlementreports.list",
          "path": "{merchantId}/settlementreports",
          "httpMethod": "GET",
          "response": {
            "$ref": "SettlementreportsListResponse"
          },
          "parameters": {
            "transferStartDate": {
              "location": "query",
              "type": "string",
              "description": "Obtains settlements which have transactions after this date (inclusively), in ISO 8601 format."
            },
            "merchantId": {
              "format": "uint64",
              "description": "The Merchant Center account to list settlements for.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "description": "The maximum number of settlements to return in the response, used for paging. The default value is 200 returns per page, and the maximum allowed value is 5000 returns per page.",
              "type": "integer"
            },
            "transferEndDate": {
              "description": "Obtains settlements which have transactions before this date (inclusively), in ISO 8601 format.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "{merchantId}/settlementreports",
          "description": "Retrieves a list of settlement reports from your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "description": "Retrieves a settlement report from your Merchant Center account.",
          "httpMethod": "GET",
          "path": "{merchantId}/settlementreports/{settlementId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/settlementreports/{settlementId}",
          "parameters": {
            "settlementId": {
              "description": "The Google-provided ID of the settlement.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The Merchant Center account of the settlement report.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "settlementId"
          ],
          "id": "content.settlementreports.get",
          "response": {
            "$ref": "SettlementReport"
          }
        }
      }
    },
    "accounts": {
      "resources": {
        "labels": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "description": "Deletes a label and removes it from all accounts to which it was assigned.",
              "flatPath": "accounts/{accountId}/labels/{labelId}",
              "id": "content.accounts.labels.delete",
              "path": "accounts/{accountId}/labels/{labelId}",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "description": "Required. The id of the account that owns the label.",
                  "type": "string"
                },
                "labelId": {
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "description": "Required. The id of the label to delete."
                }
              },
              "parameterOrder": [
                "accountId",
                "labelId"
              ]
            },
            "create": {
              "response": {
                "$ref": "AccountLabel"
              },
              "flatPath": "accounts/{accountId}/labels",
              "parameters": {
                "accountId": {
                  "location": "path",
                  "format": "int64",
                  "description": "Required. The id of the account this label belongs to.",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "accountId"
              ],
              "request": {
                "$ref": "AccountLabel"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Creates a new label, not assigned to any account.",
              "id": "content.accounts.labels.create",
              "path": "accounts/{accountId}/labels"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "response": {
                "$ref": "ListAccountLabelsResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "path": "accounts/{accountId}/labels",
              "flatPath": "accounts/{accountId}/labels",
              "description": "Lists the labels assigned to an account.",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of labels to return. The service may return fewer than this value. If unspecified, at most 50 labels will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAccountLabels` must match the call that provided the page token."
                },
                "accountId": {
                  "format": "int64",
                  "location": "path",
                  "description": "Required. The account id for whose labels are to be listed.",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "content.accounts.labels.list"
            },
            "patch": {
              "request": {
                "$ref": "AccountLabel"
              },
              "httpMethod": "PATCH",
              "description": "Updates a label.",
              "response": {
                "$ref": "AccountLabel"
              },
              "parameterOrder": [
                "accountId",
                "labelId"
              ],
              "path": "accounts/{accountId}/labels/{labelId}",
              "id": "content.accounts.labels.patch",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "parameters": {
                "accountId": {
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The id of the account this label belongs to."
                },
                "labelId": {
                  "location": "path",
                  "format": "int64",
                  "description": "Required. The id of the label to update.",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "accounts/{accountId}/labels/{labelId}"
            }
          }
        },
        "returncarrier": {
          "methods": {
            "create": {
              "response": {
                "$ref": "AccountReturnCarrier"
              },
              "parameterOrder": [
                "accountId"
              ],
              "request": {
                "$ref": "AccountReturnCarrier"
              },
              "path": "accounts/{accountId}/returncarrier",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "flatPath": "accounts/{accountId}/returncarrier",
              "httpMethod": "POST",
              "id": "content.accounts.returncarrier.create",
              "parameters": {
                "accountId": {
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "description": "Required. The Merchant Center Account Id under which the Return Carrier is to be linked."
                }
              },
              "description": "Links return carrier to a merchant account."
            },
            "patch": {
              "request": {
                "$ref": "AccountReturnCarrier"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "parameters": {
                "accountId": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The Merchant Center Account Id under which the Return Carrier is to be linked.",
                  "location": "path",
                  "format": "int64"
                },
                "carrierAccountId": {
                  "description": "Required. The Google-provided unique carrier ID, used to update the resource.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "format": "int64"
                }
              },
              "path": "accounts/{accountId}/returncarrier/{carrierAccountId}",
              "flatPath": "accounts/{accountId}/returncarrier/{carrierAccountId}",
              "id": "content.accounts.returncarrier.patch",
              "description": "Updates a return carrier in the merchant account.",
              "response": {
                "$ref": "AccountReturnCarrier"
              },
              "parameterOrder": [
                "accountId",
                "carrierAccountId"
              ],
              "httpMethod": "PATCH"
            },
            "list": {
              "parameters": {
                "accountId": {
                  "location": "path",
                  "required": true,
                  "format": "int64",
                  "description": "Required. The Merchant Center Account Id under which the Return Carrier is to be linked.",
                  "type": "string"
                }
              },
              "flatPath": "accounts/{accountId}/returncarrier",
              "id": "content.accounts.returncarrier.list",
              "description": "Lists available return carriers in the merchant account.",
              "path": "accounts/{accountId}/returncarrier",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "response": {
                "$ref": "ListAccountReturnCarrierResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "accountId"
              ]
            },
            "delete": {
              "id": "content.accounts.returncarrier.delete",
              "parameters": {
                "accountId": {
                  "description": "Required. The Merchant Center Account Id under which the Return Carrier is to be linked.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "format": "int64"
                },
                "carrierAccountId": {
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The Google-provided unique carrier ID, used to update the resource."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Delete a return carrier in the merchant account.",
              "path": "accounts/{accountId}/returncarrier/{carrierAccountId}",
              "flatPath": "accounts/{accountId}/returncarrier/{carrierAccountId}",
              "parameterOrder": [
                "accountId",
                "carrierAccountId"
              ],
              "httpMethod": "DELETE"
            }
          }
        },
        "credentials": {
          "methods": {
            "create": {
              "id": "content.accounts.credentials.create",
              "parameterOrder": [
                "accountId"
              ],
              "request": {
                "$ref": "AccountCredentials"
              },
              "flatPath": "accounts/{accountId}/credentials",
              "description": "Uploads credentials for the Merchant Center account. If credentials already exist for this Merchant Center account and purpose, this method updates them.",
              "response": {
                "$ref": "AccountCredentials"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "httpMethod": "POST",
              "parameters": {
                "accountId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "format": "int64",
                  "description": "Required. The merchant id of the account these credentials belong to."
                }
              },
              "path": "accounts/{accountId}/credentials"
            }
          }
        }
      },
      "methods": {
        "claimwebsite": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "required": true
            },
            "overwrite": {
              "description": "Only available to selected merchants, for example multi-client accounts (MCAs) and their sub-accounts. When set to `True`, this option removes any existing claim on the requested website and replaces it with a claim from the account that makes the request.",
              "type": "boolean",
              "location": "query"
            },
            "accountId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account whose website is claimed.",
              "required": true,
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Claims the website of a Merchant Center sub-account.",
          "httpMethod": "POST",
          "flatPath": "{merchantId}/accounts/{accountId}/claimwebsite",
          "response": {
            "$ref": "AccountsClaimWebsiteResponse"
          },
          "path": "{merchantId}/accounts/{accountId}/claimwebsite",
          "id": "content.accounts.claimwebsite"
        },
        "requestphoneverification": {
          "response": {
            "$ref": "RequestPhoneVerificationResponse"
          },
          "path": "{merchantId}/accounts/{accountId}/requestphoneverification",
          "parameters": {
            "accountId": {
              "description": "Required. The ID of the account.",
              "type": "string",
              "location": "path",
              "required": true,
              "format": "int64"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "int64",
              "description": "Required. The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.",
              "type": "string"
            }
          },
          "description": "Request verification code to start phone verification.",
          "id": "content.accounts.requestphoneverification",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/accounts/{accountId}/requestphoneverification",
          "request": {
            "$ref": "RequestPhoneVerificationRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        },
        "update": {
          "description": "Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "response": {
            "$ref": "Account"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "request": {
            "$ref": "Account"
          },
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "accountId": {
              "type": "string",
              "description": "The ID of the account.",
              "required": true,
              "format": "uint64",
              "location": "path"
            }
          },
          "id": "content.accounts.update",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/accounts/{accountId}",
          "flatPath": "{merchantId}/accounts/{accountId}",
          "httpMethod": "PUT"
        },
        "authinfo": {
          "description": "Returns information about the authenticated user.",
          "parameters": {},
          "response": {
            "$ref": "AccountsAuthInfoResponse"
          },
          "httpMethod": "GET",
          "flatPath": "accounts/authinfo",
          "path": "accounts/authinfo",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.accounts.authinfo",
          "parameterOrder": []
        },
        "updatelabels": {
          "flatPath": "{merchantId}/accounts/{accountId}/updatelabels",
          "response": {
            "$ref": "AccountsUpdateLabelsResponse"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the managing account.",
              "location": "path",
              "required": true
            },
            "accountId": {
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account whose labels are updated.",
              "required": true
            }
          },
          "id": "content.accounts.updatelabels",
          "request": {
            "$ref": "AccountsUpdateLabelsRequest"
          },
          "description": "Updates labels that are assigned to the Merchant Center account by CSS user.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/accounts/{accountId}/updatelabels"
        },
        "link": {
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "accountId": {
              "format": "uint64",
              "description": "The ID of the account that should be linked.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "{merchantId}/accounts/{accountId}/link",
          "httpMethod": "POST",
          "request": {
            "$ref": "AccountsLinkRequest"
          },
          "path": "{merchantId}/accounts/{accountId}/link",
          "response": {
            "$ref": "AccountsLinkResponse"
          },
          "id": "content.accounts.link",
          "description": "Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId."
        },
        "delete": {
          "description": "Deletes a Merchant Center sub-account.",
          "httpMethod": "DELETE",
          "flatPath": "{merchantId}/accounts/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "accountId": {
              "required": true,
              "format": "uint64",
              "description": "The ID of the account.",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "force": {
              "location": "query",
              "type": "boolean",
              "description": "Option to delete sub-accounts with products. The default value is false.",
              "default": "false"
            }
          },
          "id": "content.accounts.delete",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "{merchantId}/accounts/{accountId}"
        },
        "insert": {
          "httpMethod": "POST",
          "response": {
            "$ref": "Account"
          },
          "description": "Creates a Merchant Center sub-account.",
          "request": {
            "$ref": "Account"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/accounts",
          "id": "content.accounts.insert",
          "flatPath": "{merchantId}/accounts",
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "list": {
          "id": "content.accounts.list",
          "response": {
            "$ref": "AccountsListResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Lists the sub-accounts in your Merchant Center account.",
          "parameters": {
            "label": {
              "type": "string",
              "description": "If view is set to \"css\", only return accounts that are assigned label with given ID.",
              "format": "uint64",
              "location": "query"
            },
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of accounts to return in the response, used for paging.",
              "location": "query",
              "format": "uint32"
            },
            "view": {
              "location": "query",
              "enum": [
                "MERCHANT",
                "CSS"
              ],
              "type": "string",
              "enumDescriptions": [
                "Default. View is populated with Merchant Center fields.",
                "View is populated with Comparison Shopping Services fields."
              ],
              "description": "Controls which fields will be populated. Acceptable values are: \"merchant\" and \"css\". The default value is \"merchant\"."
            },
            "name": {
              "type": "string",
              "location": "query",
              "description": "If set, only the accounts with the given name (case sensitive) will be returned."
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "required": true
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "{merchantId}/accounts",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/accounts"
        },
        "custombatch": {
          "parameterOrder": [],
          "request": {
            "$ref": "AccountsCustomBatchRequest"
          },
          "response": {
            "$ref": "AccountsCustomBatchResponse"
          },
          "id": "content.accounts.custombatch",
          "parameters": {},
          "flatPath": "accounts/batch",
          "httpMethod": "POST",
          "description": "Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "accounts/batch"
        },
        "get": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "type": "string",
              "required": true
            },
            "accountId": {
              "description": "The ID of the account.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64"
            },
            "view": {
              "description": "Controls which fields will be populated. Acceptable values are: \"merchant\" and \"css\". The default value is \"merchant\".",
              "location": "query",
              "enum": [
                "MERCHANT",
                "CSS"
              ],
              "enumDescriptions": [
                "Default. View is populated with Merchant Center fields.",
                "View is populated with Comparison Shopping Services fields."
              ],
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "{merchantId}/accounts/{accountId}",
          "description": "Retrieves a Merchant Center account.",
          "httpMethod": "GET",
          "id": "content.accounts.get",
          "response": {
            "$ref": "Account"
          },
          "flatPath": "{merchantId}/accounts/{accountId}"
        },
        "verifyphonenumber": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/accounts/{accountId}/verifyphonenumber",
          "flatPath": "{merchantId}/accounts/{accountId}/verifyphonenumber",
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Validates verification code to verify phone number for the account. If successful this will overwrite the value of `accounts.businessinformation.phoneNumber`. Only verified phone number will replace an existing verified phone number.",
          "request": {
            "$ref": "VerifyPhoneNumberRequest"
          },
          "parameters": {
            "accountId": {
              "description": "Required. The ID of the account.",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "int64"
            },
            "merchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.",
              "format": "int64"
            }
          },
          "response": {
            "$ref": "VerifyPhoneNumberResponse"
          },
          "id": "content.accounts.verifyphonenumber"
        },
        "listlinks": {
          "response": {
            "$ref": "AccountsListLinksResponse"
          },
          "id": "content.accounts.listlinks",
          "path": "{merchantId}/accounts/{accountId}/listlinks",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "{merchantId}/accounts/{accountId}/listlinks",
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "description": "The maximum number of links to return in the response, used for pagination. The minimum allowed value is 5 results per page. If provided value is lower than 5, it will be automatically increased to 5.",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "accountId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account for which to list links."
            }
          },
          "description": "Returns the list of accounts linked to your Merchant Center account."
        }
      }
    },
    "freelistingsprogram": {
      "methods": {
        "requestreview": {
          "request": {
            "$ref": "RequestReviewFreeListingsRequest"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "description": "Required. The ID of the account.",
              "format": "int64",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "description": "Requests a review of free listings in a specific region. This method is only available to selected merchants.",
          "id": "content.freelistingsprogram.requestreview",
          "path": "{merchantId}/freelistingsprogram/requestreview",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/freelistingsprogram/requestreview"
        },
        "get": {
          "description": "Retrieves the status and review eligibility for the free listing program.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.freelistingsprogram.get",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/freelistingsprogram",
          "parameters": {
            "merchantId": {
              "format": "int64",
              "location": "path",
              "description": "Required. The ID of the account.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "FreeListingsProgramStatus"
          },
          "path": "{merchantId}/freelistingsprogram"
        }
      }
    },
    "datafeedstatuses": {
      "methods": {
        "list": {
          "id": "content.datafeedstatuses.list",
          "path": "{merchantId}/datafeedstatuses",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "description": "The maximum number of products to return in the response, used for paging.",
              "format": "uint32",
              "type": "integer",
              "location": "query"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "type": "string"
            }
          },
          "description": "Lists the statuses of the datafeeds in your Merchant Center account.",
          "response": {
            "$ref": "DatafeedstatusesListResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "flatPath": "{merchantId}/datafeedstatuses"
        },
        "get": {
          "flatPath": "{merchantId}/datafeedstatuses/{datafeedId}",
          "id": "content.datafeedstatuses.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "path": "{merchantId}/datafeedstatuses/{datafeedId}",
          "response": {
            "$ref": "DatafeedStatus"
          },
          "parameters": {
            "country": {
              "location": "query",
              "type": "string",
              "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target."
            },
            "language": {
              "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.",
              "location": "query",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "format": "uint64",
              "location": "path"
            },
            "datafeedId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the datafeed.",
              "type": "string"
            }
          },
          "description": "Retrieves the status of a datafeed from your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "parameters": {},
          "httpMethod": "POST",
          "description": "Gets multiple Merchant Center datafeed statuses in a single request.",
          "path": "datafeedstatuses/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "DatafeedstatusesCustomBatchResponse"
          },
          "id": "content.datafeedstatuses.custombatch",
          "flatPath": "datafeedstatuses/batch",
          "request": {
            "$ref": "DatafeedstatusesCustomBatchRequest"
          }
        }
      }
    },
    "returnpolicyonline": {
      "methods": {
        "patch": {
          "request": {
            "$ref": "ReturnPolicyOnline"
          },
          "parameterOrder": [
            "merchantId",
            "returnPolicyId"
          ],
          "httpMethod": "PATCH",
          "path": "{merchantId}/returnpolicyonline/{returnPolicyId}",
          "response": {
            "$ref": "ReturnPolicyOnline"
          },
          "parameters": {
            "returnPolicyId": {
              "type": "string",
              "location": "path",
              "description": "Required. The id of the return policy to update.",
              "required": true
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "Required. The id of the merchant for which to retrieve the return policy online object."
            }
          },
          "id": "content.returnpolicyonline.patch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/returnpolicyonline/{returnPolicyId}",
          "description": "Updates an existing return policy."
        },
        "get": {
          "httpMethod": "GET",
          "id": "content.returnpolicyonline.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "returnPolicyId"
          ],
          "flatPath": "{merchantId}/returnpolicyonline/{returnPolicyId}",
          "path": "{merchantId}/returnpolicyonline/{returnPolicyId}",
          "response": {
            "$ref": "ReturnPolicyOnline"
          },
          "parameters": {
            "returnPolicyId": {
              "type": "string",
              "description": "Required. The id of the return policy to retrieve.",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "description": "Required. The id of the merchant for which to retrieve the return policy online object.",
              "location": "path",
              "format": "int64",
              "type": "string",
              "required": true
            }
          },
          "description": "Gets an existing return policy."
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "merchantId": {
              "description": "Required. The id of the merchant for which to retrieve the return policy online object.",
              "required": true,
              "type": "string",
              "format": "int64",
              "location": "path"
            },
            "returnPolicyId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Required. The id of the return policy to delete."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.returnpolicyonline.delete",
          "description": "Deletes an existing return policy.",
          "flatPath": "{merchantId}/returnpolicyonline/{returnPolicyId}",
          "parameterOrder": [
            "merchantId",
            "returnPolicyId"
          ],
          "path": "{merchantId}/returnpolicyonline/{returnPolicyId}"
        },
        "list": {
          "id": "content.returnpolicyonline.list",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/returnpolicyonline",
          "path": "{merchantId}/returnpolicyonline",
          "response": {
            "$ref": "ListReturnPolicyOnlineResponse"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists all existing return policies.",
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "int64",
              "description": "Required. The id of the merchant for which to retrieve the return policy online object.",
              "location": "path"
            }
          }
        },
        "create": {
          "path": "{merchantId}/returnpolicyonline",
          "id": "content.returnpolicyonline.create",
          "flatPath": "{merchantId}/returnpolicyonline",
          "description": "Creates a new return policy.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "format": "int64",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The id of the merchant for which to retrieve the return policy online object."
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "ReturnPolicyOnline"
          },
          "request": {
            "$ref": "ReturnPolicyOnline"
          },
          "parameterOrder": [
            "merchantId"
          ]
        }
      }
    },
    "returnaddress": {
      "methods": {
        "delete": {
          "flatPath": "{merchantId}/returnaddress/{returnAddressId}",
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The Merchant Center account from which to delete the given return address.",
              "type": "string"
            },
            "returnAddressId": {
              "required": true,
              "description": "Return address ID generated by Google.",
              "type": "string",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.returnaddress.delete",
          "description": "Deletes a return address for the given Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "returnAddressId"
          ],
          "path": "{merchantId}/returnaddress/{returnAddressId}",
          "httpMethod": "DELETE"
        },
        "insert": {
          "request": {
            "$ref": "ReturnAddress"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/returnaddress",
          "id": "content.returnaddress.insert",
          "response": {
            "$ref": "ReturnAddress"
          },
          "httpMethod": "POST",
          "flatPath": "{merchantId}/returnaddress",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "description": "The Merchant Center account to insert a return address for.",
              "type": "string",
              "location": "path"
            }
          },
          "description": "Inserts a return address for the Merchant Center account."
        },
        "list": {
          "description": "Lists the return addresses of the Merchant Center account.",
          "response": {
            "$ref": "ReturnaddressListResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/returnaddress",
          "id": "content.returnaddress.list",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "merchantId": {
              "required": true,
              "description": "The Merchant Center account to list return addresses for.",
              "location": "path",
              "type": "string",
              "format": "uint64"
            },
            "country": {
              "type": "string",
              "description": "List only return addresses applicable to the given country of sale. When omitted, all return addresses are listed.",
              "location": "query"
            },
            "maxResults": {
              "description": "The maximum number of addresses in the response, used for paging.",
              "type": "integer",
              "location": "query",
              "format": "uint32"
            }
          },
          "flatPath": "{merchantId}/returnaddress",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "httpMethod": "POST",
          "description": "Batches multiple return address related calls in a single request.",
          "path": "returnaddress/batch",
          "request": {
            "$ref": "ReturnaddressCustomBatchRequest"
          },
          "parameters": {},
          "id": "content.returnaddress.custombatch",
          "flatPath": "returnaddress/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "ReturnaddressCustomBatchResponse"
          }
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The Merchant Center account to get a return address for."
            },
            "returnAddressId": {
              "required": true,
              "description": "Return address ID generated by Google.",
              "location": "path",
              "type": "string"
            }
          },
          "description": "Gets a return address of the Merchant Center account.",
          "id": "content.returnaddress.get",
          "flatPath": "{merchantId}/returnaddress/{returnAddressId}",
          "path": "{merchantId}/returnaddress/{returnAddressId}",
          "parameterOrder": [
            "merchantId",
            "returnAddressId"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "ReturnAddress"
          }
        }
      }
    },
    "regions": {
      "methods": {
        "patch": {
          "description": "Updates a region definition in your Merchant Center account.",
          "flatPath": "{merchantId}/regions/{regionId}",
          "request": {
            "$ref": "Region"
          },
          "httpMethod": "PATCH",
          "response": {
            "$ref": "Region"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "regionId"
          ],
          "parameters": {
            "regionId": {
              "description": "Required. The id of the region to update.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "description": "Required. The id of the merchant for which to update region definition.",
              "location": "path",
              "format": "int64",
              "required": true,
              "type": "string"
            },
            "updateMask": {
              "type": "string",
              "description": "Optional. The comma-separated field mask indicating the fields to update. Example: `\"displayName,postalCodeArea.regionCode\"`.",
              "location": "query",
              "format": "google-fieldmask"
            }
          },
          "path": "{merchantId}/regions/{regionId}",
          "id": "content.regions.patch"
        },
        "create": {
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Creates a region definition in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "id": "content.regions.create",
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "int64",
              "location": "path",
              "type": "string",
              "description": "Required. The id of the merchant for which to create region definition."
            },
            "regionId": {
              "type": "string",
              "description": "Required. The id of the region to create.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Region"
          },
          "request": {
            "$ref": "Region"
          },
          "path": "{merchantId}/regions",
          "flatPath": "{merchantId}/regions"
        },
        "get": {
          "id": "content.regions.get",
          "parameterOrder": [
            "merchantId",
            "regionId"
          ],
          "parameters": {
            "regionId": {
              "type": "string",
              "description": "Required. The id of the region to retrieve.",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "format": "int64",
              "description": "Required. The id of the merchant for which to retrieve region definition.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Region"
          },
          "path": "{merchantId}/regions/{regionId}",
          "description": "Retrieves a region defined in your Merchant Center account.",
          "httpMethod": "GET",
          "flatPath": "{merchantId}/regions/{regionId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "list": {
          "path": "{merchantId}/regions",
          "httpMethod": "GET",
          "flatPath": "{merchantId}/regions",
          "response": {
            "$ref": "ListRegionsResponse"
          },
          "description": "Lists the regions in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.regions.list",
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "A page token, received from a previous `ListRegions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRegions` must match the call that provided the page token.",
              "location": "query"
            },
            "pageSize": {
              "description": "The maximum number of regions to return. The service may return fewer than this value. If unspecified, at most 50 rules will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "merchantId": {
              "description": "Required. The id of the merchant for which to list region definitions.",
              "format": "int64",
              "location": "path",
              "type": "string",
              "required": true
            }
          }
        },
        "delete": {
          "parameters": {
            "merchantId": {
              "description": "Required. The id of the merchant for which to delete region definition.",
              "location": "path",
              "format": "int64",
              "required": true,
              "type": "string"
            },
            "regionId": {
              "description": "Required. The id of the region to delete.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/regions/{regionId}",
          "description": "Deletes a region definition from your Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "regionId"
          ],
          "id": "content.regions.delete",
          "httpMethod": "DELETE",
          "flatPath": "{merchantId}/regions/{regionId}"
        }
      }
    },
    "csses": {
      "methods": {
        "get": {
          "flatPath": "{cssGroupId}/csses/{cssDomainId}",
          "path": "{cssGroupId}/csses/{cssDomainId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "cssGroupId",
            "cssDomainId"
          ],
          "id": "content.csses.get",
          "parameters": {
            "cssGroupId": {
              "type": "string",
              "description": "Required. The ID of the managing account. If this parameter is not the same as [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be the ID of a CSS domain affiliated with this group.",
              "required": true,
              "location": "path",
              "format": "int64"
            },
            "cssDomainId": {
              "description": "Required. The ID of the CSS domain to return.",
              "required": true,
              "location": "path",
              "format": "int64",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Css"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves a single CSS domain by ID."
        },
        "updatelabels": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "cssGroupId": {
              "required": true,
              "description": "Required. The CSS group ID of the updated CSS domain.",
              "location": "path",
              "type": "string",
              "format": "int64"
            },
            "cssDomainId": {
              "location": "path",
              "type": "string",
              "format": "int64",
              "description": "Required. The ID of the updated CSS domain.",
              "required": true
            }
          },
          "response": {
            "$ref": "Css"
          },
          "id": "content.csses.updatelabels",
          "request": {
            "$ref": "LabelIds"
          },
          "path": "{cssGroupId}/csses/{cssDomainId}/updatelabels",
          "httpMethod": "POST",
          "description": "Updates labels that are assigned to a CSS domain by its CSS group.",
          "parameterOrder": [
            "cssGroupId",
            "cssDomainId"
          ],
          "flatPath": "{cssGroupId}/csses/{cssDomainId}/updatelabels"
        },
        "list": {
          "response": {
            "$ref": "ListCssesResponse"
          },
          "httpMethod": "GET",
          "flatPath": "{cssGroupId}/csses",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A page token, received from a previous `ListCsses` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCsses` must match the call that provided the page token."
            },
            "cssGroupId": {
              "location": "path",
              "required": true,
              "description": "Required. The CSS group ID of CSS domains to be listed.",
              "format": "int64",
              "type": "string"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "location": "query",
              "description": "The maximum number of CSS domains to return. The service may return fewer than this value. If unspecified, at most 50 CSS domains will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
            }
          },
          "id": "content.csses.list",
          "parameterOrder": [
            "cssGroupId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists CSS domains affiliated with a CSS group.",
          "path": "{cssGroupId}/csses"
        }
      }
    },
    "collections": {
      "methods": {
        "list": {
          "flatPath": "{merchantId}/collections",
          "description": "Lists the collections in your Merchant Center account. The response might contain fewer items than specified by page_size. Rely on next_page_token to determine if there are more items to be requested.",
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token."
            },
            "pageSize": {
              "type": "integer",
              "description": "The maximum number of collections to return in the response, used for paging. Defaults to 50; values above 1000 will be coerced to 1000.",
              "format": "int32",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "description": "Required. The ID of the account that contains the collection. This account cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "format": "int64"
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/collections",
          "id": "content.collections.list",
          "response": {
            "$ref": "ListCollectionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "path": "{merchantId}/collections/{collectionId}",
          "parameterOrder": [
            "merchantId",
            "collectionId"
          ],
          "parameters": {
            "collectionId": {
              "required": true,
              "description": "Required. The REST ID of the collection.",
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "description": "Required. The ID of the account that contains the collection. This account cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "format": "int64"
            }
          },
          "flatPath": "{merchantId}/collections/{collectionId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves a collection from your Merchant Center account.",
          "response": {
            "$ref": "Collection"
          },
          "httpMethod": "GET",
          "id": "content.collections.get"
        },
        "create": {
          "description": "Uploads a collection to your Merchant Center account. If a collection with the same collectionId already exists, this method updates that entry. In each update, the collection is completely replaced by the fields in the body of the update request.",
          "flatPath": "{merchantId}/collections",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "Required. The ID of the account that contains the collection. This account cannot be a multi-client account.",
              "location": "path",
              "format": "int64"
            }
          },
          "httpMethod": "POST",
          "id": "content.collections.create",
          "response": {
            "$ref": "Collection"
          },
          "path": "{merchantId}/collections",
          "parameterOrder": [
            "merchantId"
          ],
          "request": {
            "$ref": "Collection"
          }
        },
        "delete": {
          "id": "content.collections.delete",
          "path": "{merchantId}/collections/{collectionId}",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/collections/{collectionId}",
          "description": "Deletes a collection from your Merchant Center account.",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "Required. The ID of the account that contains the collection. This account cannot be a multi-client account.",
              "location": "path",
              "required": true,
              "format": "int64"
            },
            "collectionId": {
              "location": "path",
              "description": "Required. The collectionId of the collection. CollectionId is the same as the REST ID of the collection.",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "collectionId"
          ]
        }
      }
    },
    "pos": {
      "methods": {
        "custombatch": {
          "parameterOrder": [],
          "description": "Batches multiple POS-related calls in a single request.",
          "request": {
            "$ref": "PosCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {},
          "path": "pos/batch",
          "flatPath": "pos/batch",
          "httpMethod": "POST",
          "id": "content.pos.custombatch",
          "response": {
            "$ref": "PosCustomBatchResponse"
          }
        },
        "delete": {
          "parameters": {
            "targetMerchantId": {
              "description": "The ID of the target merchant.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64"
            },
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider.",
              "required": true
            },
            "storeCode": {
              "location": "path",
              "description": "A store code that is unique per merchant.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "DELETE",
          "description": "Deletes a store for the given merchant.",
          "id": "content.pos.delete",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "path": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}"
        },
        "get": {
          "httpMethod": "GET",
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "description": "Retrieves information about the given store.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "parameters": {
            "targetMerchantId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the target merchant."
            },
            "storeCode": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "A store code that is unique per merchant."
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the POS or inventory data provider.",
              "required": true,
              "location": "path",
              "format": "uint64"
            }
          },
          "response": {
            "$ref": "PosStore"
          },
          "id": "content.pos.get",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ]
        },
        "list": {
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "targetMerchantId": {
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the target merchant.",
              "location": "path"
            }
          },
          "description": "Lists the stores of the target merchant.",
          "id": "content.pos.list",
          "response": {
            "$ref": "PosListResponse"
          },
          "path": "{merchantId}/pos/{targetMerchantId}/store",
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store",
          "httpMethod": "GET"
        },
        "inventory": {
          "path": "{merchantId}/pos/{targetMerchantId}/inventory",
          "id": "content.pos.inventory",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "PosInventoryResponse"
          },
          "description": "Submit inventory for the given merchant.",
          "flatPath": "{merchantId}/pos/{targetMerchantId}/inventory",
          "parameters": {
            "targetMerchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the target merchant."
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true,
              "description": "The ID of the POS or inventory data provider."
            }
          },
          "request": {
            "$ref": "PosInventoryRequest"
          }
        },
        "sale": {
          "flatPath": "{merchantId}/pos/{targetMerchantId}/sale",
          "response": {
            "$ref": "PosSaleResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.pos.sale",
          "httpMethod": "POST",
          "request": {
            "$ref": "PosSaleRequest"
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "description": "Submit a sale event for the given merchant.",
          "path": "{merchantId}/pos/{targetMerchantId}/sale",
          "parameters": {
            "targetMerchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the target merchant.",
              "required": true
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the POS or inventory data provider.",
              "type": "string",
              "location": "path",
              "format": "uint64"
            }
          }
        },
        "insert": {
          "description": "Creates a store for the given merchant.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "response": {
            "$ref": "PosStore"
          },
          "id": "content.pos.insert",
          "request": {
            "$ref": "PosStore"
          },
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store",
          "path": "{merchantId}/pos/{targetMerchantId}/store",
          "parameters": {
            "targetMerchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the target merchant.",
              "format": "uint64"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "POST"
        }
      }
    },
    "orderinvoices": {
      "methods": {
        "createrefundinvoice": {
          "description": "Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice.",
          "id": "content.orderinvoices.createrefundinvoice",
          "path": "{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "response": {
            "$ref": "OrderinvoicesCreateRefundInvoiceResponse"
          },
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "OrderinvoicesCreateRefundInvoiceRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/orderinvoices/{orderId}/createRefundInvoice"
        },
        "createchargeinvoice": {
          "response": {
            "$ref": "OrderinvoicesCreateChargeInvoiceResponse"
          },
          "httpMethod": "POST",
          "flatPath": "{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "request": {
            "$ref": "OrderinvoicesCreateChargeInvoiceRequest"
          },
          "description": "Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.",
          "id": "content.orderinvoices.createchargeinvoice",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path"
            },
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "required": true,
              "location": "path"
            }
          },
          "path": "{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "promotions": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves a promotion from your Merchant Center account.",
          "id": "content.promotions.get",
          "path": "{merchantId}/promotions/{id}",
          "flatPath": "{merchantId}/promotions/{id}",
          "httpMethod": "GET",
          "parameters": {
            "merchantId": {
              "description": "Required. The ID of the account that contains the collection.",
              "type": "string",
              "format": "int64",
              "location": "path",
              "required": true
            },
            "id": {
              "location": "path",
              "required": true,
              "description": "Required. REST ID of the promotion to retrieve.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Promotion"
          },
          "parameterOrder": [
            "merchantId",
            "id"
          ]
        },
        "create": {
          "id": "content.promotions.create",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Promotion"
          },
          "parameters": {
            "merchantId": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "description": "Required. The ID of the account that contains the collection.",
              "required": true
            }
          },
          "httpMethod": "POST",
          "flatPath": "{merchantId}/promotions",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/promotions",
          "description": "Inserts a promotion for your Merchant Center account. If the promotion already exists, then it updates the promotion instead. To [end or delete] (https://developers.google.com/shopping-content/guides/promotions#end_a_promotion) a promotion update the time period of the promotion to a time that has already passed.",
          "request": {
            "$ref": "Promotion"
          }
        }
      }
    },
    "localinventory": {
      "methods": {
        "custombatch": {
          "description": "Updates local inventory for multiple products or stores in a single request.",
          "path": "localinventory/batch",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.localinventory.custombatch",
          "flatPath": "localinventory/batch",
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "LocalinventoryCustomBatchRequest"
          },
          "response": {
            "$ref": "LocalinventoryCustomBatchResponse"
          }
        },
        "insert": {
          "flatPath": "{merchantId}/products/{productId}/localinventory",
          "description": "Updates the local inventory of a product in your Merchant Center account.",
          "path": "{merchantId}/products/{productId}/localinventory",
          "request": {
            "$ref": "LocalInventory"
          },
          "httpMethod": "POST",
          "id": "content.localinventory.insert",
          "response": {
            "$ref": "LocalInventory"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "type": "string"
            },
            "productId": {
              "description": "The REST ID of the product for which to update local inventory.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          }
        }
      }
    },
    "quotas": {
      "methods": {
        "list": {
          "parameters": {
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of quotas to return in the response, used for paging. Defaults to 500; values above 1000 will be coerced to 1000.",
              "location": "query",
              "type": "integer"
            },
            "merchantId": {
              "required": true,
              "description": "Required. The ID of the account that has quota. This account must be an admin.",
              "location": "path",
              "type": "string",
              "format": "int64"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token."
            }
          },
          "path": "{merchantId}/quotas",
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Lists the quota limit and quota usage per method for your Merchant Center account.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "ListMethodQuotasResponse"
          },
          "flatPath": "{merchantId}/quotas",
          "id": "content.quotas.list"
        }
      }
    },
    "ordertrackingsignals": {
      "methods": {
        "create": {
          "response": {
            "$ref": "OrderTrackingSignal"
          },
          "path": "{merchantId}/ordertrackingsignals",
          "request": {
            "$ref": "OrderTrackingSignal"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "merchantId": {
              "format": "int64",
              "description": "The ID of the merchant for which the order signal is created.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "{merchantId}/ordertrackingsignals",
          "description": "Creates new order tracking signal.",
          "id": "content.ordertrackingsignals.create"
        }
      }
    },
    "orderreturns": {
      "resources": {
        "labels": {
          "methods": {
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "response": {
                "$ref": "ReturnShippingLabel"
              },
              "parameters": {
                "merchantId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "format": "int64",
                  "description": "Required. The merchant the Return Shipping Label belongs to."
                },
                "returnId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. Provide the Google-generated merchant order return ID."
                }
              },
              "id": "content.orderreturns.labels.create",
              "description": "Links a return shipping label to a return id. You can only create one return label per return id. Since the label is sent to the buyer, the linked return label cannot be updated or deleted. If you try to create multiple return shipping labels for a single return id, every create request except the first will fail.",
              "httpMethod": "POST",
              "parameterOrder": [
                "merchantId",
                "returnId"
              ],
              "flatPath": "{merchantId}/orderreturns/{returnId}/labels",
              "request": {
                "$ref": "ReturnShippingLabel"
              },
              "path": "{merchantId}/orderreturns/{returnId}/labels"
            }
          }
        }
      },
      "methods": {
        "process": {
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "request": {
            "$ref": "OrderreturnsProcessRequest"
          },
          "httpMethod": "POST",
          "flatPath": "{merchantId}/orderreturns/{returnId}/process",
          "path": "{merchantId}/orderreturns/{returnId}/process",
          "id": "content.orderreturns.process",
          "description": "Processes return in your Merchant Center account.",
          "response": {
            "$ref": "OrderreturnsProcessResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "returnId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the return.",
              "required": true
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "format": "uint64"
            }
          }
        },
        "createorderreturn": {
          "flatPath": "{merchantId}/orderreturns/createOrderReturn",
          "description": "Create return in your Merchant Center account.",
          "response": {
            "$ref": "OrderreturnsCreateOrderReturnResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "request": {
            "$ref": "OrderreturnsCreateOrderReturnRequest"
          },
          "path": "{merchantId}/orderreturns/createOrderReturn",
          "id": "content.orderreturns.createorderreturn",
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "response": {
            "$ref": "MerchantOrderReturn"
          },
          "description": "Retrieves an order return from your Merchant Center account.",
          "flatPath": "{merchantId}/orderreturns/{returnId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orderreturns.get",
          "path": "{merchantId}/orderreturns/{returnId}",
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string"
            },
            "returnId": {
              "required": true,
              "location": "path",
              "description": "Merchant order return ID generated by Google.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "httpMethod": "GET"
        },
        "list": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/orderreturns",
          "id": "content.orderreturns.list",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/orderreturns",
          "description": "Lists order returns in your Merchant Center account.",
          "parameters": {
            "shipmentTrackingNumbers": {
              "type": "string",
              "repeated": true,
              "description": "Obtains order returns with the specified tracking numbers. If this parameter is provided, createdStartDate, createdEndDate, shipmentType, shipmentStatus, shipmentState and acknowledged parameters must be not set. Note: if googleOrderId and shipmentTrackingNumber parameters are provided, the obtained results will include all order returns that either match the specified order id or the specified tracking number.",
              "location": "query"
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "googleOrderIds": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "Obtains order returns with the specified order ids. If this parameter is provided, createdStartDate, createdEndDate, shipmentType, shipmentStatus, shipmentState and acknowledged parameters must be not set. Note: if googleOrderId and shipmentTrackingNumber parameters are provided, the obtained results will include all order returns that either match the specified order id or the specified tracking number."
            },
            "maxResults": {
              "format": "uint32",
              "description": "The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.",
              "location": "query",
              "type": "integer"
            },
            "shipmentStatus": {
              "type": "string",
              "enumDescriptions": [
                "Return shipments with `new` status only.",
                "Return shipments with `inProgress` status only.",
                "Return shipments with `processed` status only."
              ],
              "description": "Obtains order returns that match any shipment status provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment statuses.",
              "repeated": true,
              "enum": [
                "NEW",
                "IN_PROGRESS",
                "PROCESSED"
              ],
              "location": "query"
            },
            "shipmentTypes": {
              "type": "string",
              "description": "Obtains order returns that match any shipment type provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment types.",
              "location": "query",
              "enumDescriptions": [
                "Return shipments with type `byMail` only.",
                "Return shipments with type `returnless` only.",
                "Return shipments with type `contactCustomerSupport` only."
              ],
              "enum": [
                "BY_MAIL",
                "RETURNLESS",
                "CONTACT_CUSTOMER_SUPPORT"
              ],
              "repeated": true
            },
            "acknowledged": {
              "description": "Obtains order returns that match the acknowledgement status. When set to true, obtains order returns that have been acknowledged. When false, obtains order returns that have not been acknowledged. When not provided, obtains order returns regardless of their acknowledgement status. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged order returns are returned. ",
              "location": "query",
              "type": "boolean"
            },
            "createdStartDate": {
              "description": "Obtains order returns created after this date (inclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "createdEndDate": {
              "location": "query",
              "type": "string",
              "description": "Obtains order returns created before this date (inclusively), in ISO 8601 format."
            },
            "orderBy": {
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "Return results in descending order.",
                "Return results in ascending order."
              ],
              "enum": [
                "RETURN_CREATION_TIME_DESC",
                "RETURN_CREATION_TIME_ASC"
              ],
              "description": "Return the results in the specified order."
            },
            "shipmentStates": {
              "enumDescriptions": [
                "Return shipments with `new` state only.",
                "Return shipments with `shipped` state only.",
                "Return shipments with `completed` state only.",
                "Return shipments with `undeliverable` state only.",
                "Return shipments with `pending` state only."
              ],
              "repeated": true,
              "enum": [
                "NEW",
                "SHIPPED",
                "COMPLETED",
                "UNDELIVERABLE",
                "PENDING"
              ],
              "description": "Obtains order returns that match any shipment state provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment states.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "OrderreturnsListResponse"
          }
        },
        "acknowledge": {
          "description": "Acks an order return in your Merchant Center account.",
          "path": "{merchantId}/orderreturns/{returnId}/acknowledge",
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "parameters": {
            "returnId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the return."
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "OrderreturnsAcknowledgeResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "flatPath": "{merchantId}/orderreturns/{returnId}/acknowledge",
          "id": "content.orderreturns.acknowledge",
          "request": {
            "$ref": "OrderreturnsAcknowledgeRequest"
          }
        }
      }
    },
    "shoppingadsprogram": {
      "methods": {
        "get": {
          "path": "{merchantId}/shoppingadsprogram",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "Required. The ID of the account.",
              "format": "int64",
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "{merchantId}/shoppingadsprogram",
          "response": {
            "$ref": "ShoppingAdsProgramStatus"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "description": "Retrieves the status and review eligibility for the Shopping Ads program.",
          "id": "content.shoppingadsprogram.get",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "requestreview": {
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "int64",
              "description": "Required. The ID of the account.",
              "location": "path"
            }
          },
          "description": "Requests a review of Shopping ads in a specific region. This method is only available to selected merchants.",
          "httpMethod": "POST",
          "path": "{merchantId}/shoppingadsprogram/requestreview",
          "id": "content.shoppingadsprogram.requestreview",
          "flatPath": "{merchantId}/shoppingadsprogram/requestreview",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "request": {
            "$ref": "RequestReviewShoppingAdsRequest"
          }
        }
      }
    },
    "productstatuses": {
      "methods": {
        "list": {
          "flatPath": "{merchantId}/productstatuses",
          "id": "content.productstatuses.list",
          "response": {
            "$ref": "ProductstatusesListResponse"
          },
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "The maximum number of product statuses to return in the response, used for paging.",
              "format": "uint32"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "required": true
            },
            "destinations": {
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "repeated": true,
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/productstatuses",
          "description": "Lists the statuses of the products in your Merchant Center account."
        },
        "custombatch": {
          "parameters": {},
          "description": "Gets the statuses of multiple products in a single request.",
          "id": "content.productstatuses.custombatch",
          "path": "productstatuses/batch",
          "httpMethod": "POST",
          "request": {
            "$ref": "ProductstatusesCustomBatchRequest"
          },
          "flatPath": "productstatuses/batch",
          "parameterOrder": [],
          "response": {
            "$ref": "ProductstatusesCustomBatchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "path": "{merchantId}/productstatuses/{productId}",
          "httpMethod": "GET",
          "id": "content.productstatuses.get",
          "flatPath": "{merchantId}/productstatuses/{productId}",
          "description": "Gets the status of a product from your Merchant Center account.",
          "response": {
            "$ref": "ProductStatus"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "destinations": {
              "type": "string",
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query",
              "repeated": true
            },
            "productId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The REST ID of the product."
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "required": true,
              "format": "uint64",
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "productId"
          ]
        }
      },
      "resources": {
        "repricingreports": {
          "methods": {
            "list": {
              "parameters": {
                "ruleId": {
                  "description": "Id of the Repricing rule. If specified, only gets this rule's reports.",
                  "location": "query",
                  "type": "string"
                },
                "merchantId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. Id of the merchant who owns the Repricing rule.",
                  "format": "int64"
                },
                "endDate": {
                  "type": "string",
                  "location": "query",
                  "description": "Gets Repricing reports on and before this date in the merchant's timezone. You can only retrieve data up to 7 days ago (default) or earlier. Format is YYYY-MM-DD."
                },
                "productId": {
                  "location": "path",
                  "description": "Required. Id of the Repricing product. Also known as the [REST_ID](https://developers.google.com/shopping-content/reference/rest/v2.1/products#Product.FIELDS.id)",
                  "required": true,
                  "type": "string"
                },
                "startDate": {
                  "location": "query",
                  "type": "string",
                  "description": "Gets Repricing reports on and after this date in the merchant's timezone, up to one year ago. Do not use a start date later than 7 days ago (default). Format is YYYY-MM-DD."
                },
                "pageToken": {
                  "type": "string",
                  "description": "Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token.",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Maximum number of days of reports to return. There can be more than one rule report returned per day. For example, if 3 rule types got applied to the same product within a 24-hour period, then a page_size of 1 will return 3 rule reports. The page size defaults to 50 and values above 1000 are coerced to 1000. This service may return fewer days of reports than this value, for example, if the time between your start and end date is less than the page size.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "id": "content.productstatuses.repricingreports.list",
              "parameterOrder": [
                "merchantId",
                "productId"
              ],
              "response": {
                "$ref": "ListRepricingProductReportsResponse"
              },
              "description": "Lists the metrics report for a given Repricing product.",
              "path": "{merchantId}/productstatuses/{productId}/repricingreports",
              "flatPath": "{merchantId}/productstatuses/{productId}/repricingreports",
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "reports": {
      "methods": {
        "search": {
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Retrieves merchant performance mertrics matching the search query and optionally segmented by selected dimensions.",
          "response": {
            "$ref": "SearchResponse"
          },
          "httpMethod": "POST",
          "flatPath": "{merchantId}/reports/search",
          "request": {
            "$ref": "SearchRequest"
          },
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "format": "int64",
              "description": "Required. Id of the merchant making the call. Must be a standalone account or an MCA subaccount."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/reports/search",
          "id": "content.reports.search"
        }
      }
    },
    "orders": {
      "methods": {
        "updatemerchantorderid": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrdersUpdateMerchantOrderIdResponse"
          },
          "request": {
            "$ref": "OrdersUpdateMerchantOrderIdRequest"
          },
          "description": "Updates the merchant order ID for a given order.",
          "id": "content.orders.updatemerchantorderid",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "path": "{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "flatPath": "{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "parameters": {
            "orderId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the order."
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string"
            }
          }
        },
        "cancel": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.cancel",
          "flatPath": "{merchantId}/orders/{orderId}/cancel",
          "parameters": {
            "orderId": {
              "location": "path",
              "description": "The ID of the order to cancel.",
              "required": true,
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "httpMethod": "POST",
          "path": "{merchantId}/orders/{orderId}/cancel",
          "request": {
            "$ref": "OrdersCancelRequest"
          },
          "response": {
            "$ref": "OrdersCancelResponse"
          },
          "description": "Cancels all line items in an order, making a full refund.",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "setlineitemmetadata": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided through other methods. Submitted key-value pairs can be retrieved as part of the orders resource.",
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersSetLineItemMetadataRequest"
          },
          "parameters": {
            "orderId": {
              "required": true,
              "description": "The ID of the order.",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "required": true,
              "format": "uint64"
            }
          },
          "id": "content.orders.setlineitemmetadata",
          "response": {
            "$ref": "OrdersSetLineItemMetadataResponse"
          },
          "path": "{merchantId}/orders/{orderId}/setLineItemMetadata",
          "flatPath": "{merchantId}/orders/{orderId}/setLineItemMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "captureOrder": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.captureOrder",
          "flatPath": "{merchantId}/orders/{orderId}/captureOrder",
          "path": "{merchantId}/orders/{orderId}/captureOrder",
          "request": {
            "$ref": "CaptureOrderRequest"
          },
          "response": {
            "$ref": "CaptureOrderResponse"
          },
          "description": "Capture funds from the customer for the current order total. This method should be called after the merchant verifies that they are able and ready to start shipping the order. This method blocks until a response is received from the payment processsor. If this method succeeds, the merchant is guaranteed to receive funds for the order after shipment. If the request fails, it can be retried or the order may be cancelled. This method cannot be called after the entire order is already shipped. A rejected error code is returned when the payment service provider has declined the charge. This indicates a problem between the PSP and either the merchant's or customer's account. Sometimes this error will be resolved by the customer. We recommend retrying these errors once per day or cancelling the order with reason `failedToCaptureFunds` if the items cannot be held.",
          "parameters": {
            "orderId": {
              "description": "Required. The ID of the Order.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "format": "int64",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Required. The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "advancetestorder": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.advancetestorder",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "orderId": {
              "description": "The ID of the test order to modify.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Sandbox only. Moves a test order from state \"`inProgress`\" to state \"`pendingShipment`\".",
          "flatPath": "{merchantId}/testorders/{orderId}/advance",
          "path": "{merchantId}/testorders/{orderId}/advance",
          "response": {
            "$ref": "OrdersAdvanceTestOrderResponse"
          },
          "httpMethod": "POST"
        },
        "updateshipment": {
          "description": "Updates a shipment's status, carrier, and/or tracking ID.",
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersUpdateShipmentResponse"
          },
          "flatPath": "{merchantId}/orders/{orderId}/updateShipment",
          "request": {
            "$ref": "OrdersUpdateShipmentRequest"
          },
          "id": "content.orders.updateshipment",
          "path": "{merchantId}/orders/{orderId}/updateShipment",
          "parameters": {
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string"
            }
          }
        },
        "get": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "orderId": {
              "description": "The ID of the order.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "Order"
          },
          "description": "Retrieves an order from your Merchant Center account.",
          "id": "content.orders.get",
          "path": "{merchantId}/orders/{orderId}",
          "flatPath": "{merchantId}/orders/{orderId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "createtestreturn": {
          "description": "Sandbox only. Creates a test return.",
          "parameters": {
            "orderId": {
              "required": true,
              "description": "The ID of the order.",
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "format": "uint64"
            }
          },
          "flatPath": "{merchantId}/orders/{orderId}/testreturn",
          "id": "content.orders.createtestreturn",
          "response": {
            "$ref": "OrdersCreateTestReturnResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "path": "{merchantId}/orders/{orderId}/testreturn",
          "request": {
            "$ref": "OrdersCreateTestReturnRequest"
          }
        },
        "gettestordertemplate": {
          "response": {
            "$ref": "OrdersGetTestOrderTemplateResponse"
          },
          "path": "{merchantId}/testordertemplates/{templateName}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "flatPath": "{merchantId}/testordertemplates/{templateName}",
          "id": "content.orders.gettestordertemplate",
          "description": "Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.",
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "format": "uint64"
            },
            "country": {
              "location": "query",
              "description": "The country of the template to retrieve. Defaults to \"`US`\".",
              "type": "string"
            },
            "templateName": {
              "type": "string",
              "enum": [
                "TEMPLATE1",
                "TEMPLATE2",
                "TEMPLATE1A",
                "TEMPLATE1B",
                "TEMPLATE3",
                "TEMPLATE4"
              ],
              "required": true,
              "description": "The name of the template to retrieve.",
              "location": "path",
              "enumDescriptions": [
                "Get `template1`.",
                "Get `template2`.",
                "Get `template1A`.",
                "Get `template1B`.",
                "Get `template3`.",
                "Get `template4`."
              ]
            }
          },
          "parameterOrder": [
            "merchantId",
            "templateName"
          ]
        },
        "createtestorder": {
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            }
          },
          "request": {
            "$ref": "OrdersCreateTestOrderRequest"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Sandbox only. Creates a test order.",
          "flatPath": "{merchantId}/testorders",
          "path": "{merchantId}/testorders",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "OrdersCreateTestOrderResponse"
          },
          "id": "content.orders.createtestorder"
        },
        "refunditem": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrdersRefundItemResponse"
          },
          "request": {
            "$ref": "OrdersRefundItemRequest"
          },
          "flatPath": "{merchantId}/orders/{orderId}/refunditem",
          "id": "content.orders.refunditem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Issues a partial or total refund for items and shipment.",
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            },
            "orderId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the order to refund."
            }
          },
          "path": "{merchantId}/orders/{orderId}/refunditem",
          "httpMethod": "POST"
        },
        "updatelineitemshippingdetails": {
          "parameters": {
            "orderId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the order."
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            }
          },
          "path": "{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "request": {
            "$ref": "OrdersUpdateLineItemShippingDetailsRequest"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "description": "Updates ship by and delivery by dates for a line item.",
          "id": "content.orders.updatelineitemshippingdetails",
          "response": {
            "$ref": "OrdersUpdateLineItemShippingDetailsResponse"
          }
        },
        "instorerefundlineitem": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "id": "content.orders.instorerefundlineitem",
          "path": "{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "description": "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (for example, cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding through Google then through an in-store return.",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "orderId": {
              "required": true,
              "description": "The ID of the order.",
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrdersInStoreRefundLineItemResponse"
          },
          "request": {
            "$ref": "OrdersInStoreRefundLineItemRequest"
          },
          "httpMethod": "POST"
        },
        "returnrefundlineitem": {
          "description": "Returns and refunds a line item. Note that this method can only be called on fully shipped orders. The Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.",
          "path": "{merchantId}/orders/{orderId}/returnRefundLineItem",
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "orderId": {
              "required": true,
              "location": "path",
              "description": "The ID of the order.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "OrdersReturnRefundLineItemRequest"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/orders/{orderId}/returnRefundLineItem",
          "id": "content.orders.returnrefundlineitem",
          "response": {
            "$ref": "OrdersReturnRefundLineItemResponse"
          },
          "httpMethod": "POST"
        },
        "acknowledge": {
          "request": {
            "$ref": "OrdersAcknowledgeRequest"
          },
          "path": "{merchantId}/orders/{orderId}/acknowledge",
          "response": {
            "$ref": "OrdersAcknowledgeResponse"
          },
          "httpMethod": "POST",
          "description": "Marks an order as acknowledged.",
          "flatPath": "{merchantId}/orders/{orderId}/acknowledge",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "orderId": {
              "description": "The ID of the order.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "uint64"
            }
          },
          "id": "content.orders.acknowledge"
        },
        "cancellineitem": {
          "description": "Cancels a line item, making a full refund.",
          "id": "content.orders.cancellineitem",
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true
            },
            "orderId": {
              "description": "The ID of the order.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "request": {
            "$ref": "OrdersCancelLineItemRequest"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersCancelLineItemResponse"
          },
          "path": "{merchantId}/orders/{orderId}/cancelLineItem",
          "flatPath": "{merchantId}/orders/{orderId}/cancelLineItem"
        },
        "getbymerchantorderid": {
          "flatPath": "{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "path": "{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "response": {
            "$ref": "OrdersGetByMerchantOrderIdResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantOrderId": {
              "required": true,
              "location": "path",
              "description": "The merchant order ID to be looked for.",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "merchantOrderId"
          ],
          "id": "content.orders.getbymerchantorderid",
          "httpMethod": "GET",
          "description": "Retrieves an order using merchant order ID."
        },
        "canceltestorderbycustomer": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrdersCancelTestOrderByCustomerResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/testorders/{orderId}/cancelByCustomer",
          "id": "content.orders.canceltestorderbycustomer",
          "description": "Sandbox only. Cancels a test order for customer-initiated cancellation.",
          "flatPath": "{merchantId}/testorders/{orderId}/cancelByCustomer",
          "request": {
            "$ref": "OrdersCancelTestOrderByCustomerRequest"
          },
          "parameters": {
            "orderId": {
              "description": "The ID of the test order to cancel.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "required": true
            }
          }
        },
        "refundorder": {
          "parameters": {
            "orderId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the order to refund."
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "location": "path"
            }
          },
          "path": "{merchantId}/orders/{orderId}/refundorder",
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersRefundOrderRequest"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.refundorder",
          "response": {
            "$ref": "OrdersRefundOrderResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Issues a partial or total refund for an order.",
          "flatPath": "{merchantId}/orders/{orderId}/refundorder"
        },
        "rejectreturnlineitem": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "path": "{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "response": {
            "$ref": "OrdersRejectReturnLineItemResponse"
          },
          "request": {
            "$ref": "OrdersRejectReturnLineItemRequest"
          },
          "description": "Rejects return on an line item.",
          "flatPath": "{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "id": "content.orders.rejectreturnlineitem",
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true
            }
          }
        },
        "list": {
          "path": "{merchantId}/orders",
          "id": "content.orders.list",
          "flatPath": "{merchantId}/orders",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "OrdersListResponse"
          },
          "description": "Lists the orders in your Merchant Center account.",
          "parameters": {
            "orderBy": {
              "type": "string",
              "location": "query",
              "description": "Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc "
            },
            "statuses": {
              "description": "Obtains orders that match any of the specified statuses. Note that `active` is a shortcut for `pendingShipment` and `partiallyShipped`, and `completed` is a shortcut for `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled`.",
              "enumDescriptions": [
                "Return orders with status `active`. The `active` status includes `pendingShipment` and `partiallyShipped` orders.",
                "Return orders with status `completed`. The `completed` status includes `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled` orders.",
                "Return orders with status `canceled`.",
                "Return orders with status `inProgress`.",
                "Return orders with status `pendingShipment`.",
                "Return orders with status `partiallyShipped`.",
                "Return orders with status `shipped`.",
                "Return orders with status `partiallyDelivered`.",
                "Return orders with status `delivered`.",
                "Return orders with status `partiallyReturned`.",
                "Return orders with status `returned`."
              ],
              "type": "string",
              "repeated": true,
              "enum": [
                "ACTIVE",
                "COMPLETED",
                "CANCELED",
                "IN_PROGRESS",
                "PENDING_SHIPMENT",
                "PARTIALLY_SHIPPED",
                "SHIPPED",
                "PARTIALLY_DELIVERED",
                "DELIVERED",
                "PARTIALLY_RETURNED",
                "RETURNED"
              ],
              "location": "query"
            },
            "maxResults": {
              "description": "The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.",
              "format": "uint32",
              "type": "integer",
              "location": "query"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "placedDateStart": {
              "location": "query",
              "type": "string",
              "description": "Obtains orders placed after this date (inclusively), in ISO 8601 format."
            },
            "acknowledged": {
              "location": "query",
              "description": "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged orders are returned. ",
              "type": "boolean"
            },
            "placedDateEnd": {
              "description": "Obtains orders placed before this date (exclusively), in ISO 8601 format.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "shiplineitems": {
          "path": "{merchantId}/orders/{orderId}/shipLineItems",
          "description": "Marks line item(s) as shipped.",
          "response": {
            "$ref": "OrdersShipLineItemsResponse"
          },
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            },
            "orderId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the order."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersShipLineItemsRequest"
          },
          "flatPath": "{merchantId}/orders/{orderId}/shipLineItems",
          "id": "content.orders.shiplineitems"
        }
      }
    },
    "datafeeds": {
      "methods": {
        "fetchnow": {
          "description": "Invokes a fetch for the datafeed in your Merchant Center account. If you need to call this method more than once per day, we recommend you use the [Products service](https://developers.google.com/shopping-content/reference/rest/v2.1/products) to update your product data.",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "datafeedId": {
              "description": "The ID of the datafeed to be fetched.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "httpMethod": "POST",
          "id": "content.datafeeds.fetchnow",
          "path": "{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "response": {
            "$ref": "DatafeedsFetchNowResponse"
          }
        },
        "insert": {
          "path": "{merchantId}/datafeeds",
          "httpMethod": "POST",
          "description": "Registers a datafeed configuration with your Merchant Center account.",
          "flatPath": "{merchantId}/datafeeds",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "format": "uint64",
              "required": true
            }
          },
          "request": {
            "$ref": "Datafeed"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "Datafeed"
          },
          "id": "content.datafeeds.insert"
        },
        "get": {
          "description": "Retrieves a datafeed configuration from your Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "{merchantId}/datafeeds/{datafeedId}",
          "parameters": {
            "datafeedId": {
              "type": "string",
              "required": true,
              "description": "The ID of the datafeed.",
              "location": "path",
              "format": "uint64"
            },
            "merchantId": {
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.datafeeds.get",
          "response": {
            "$ref": "Datafeed"
          },
          "httpMethod": "GET",
          "path": "{merchantId}/datafeeds/{datafeedId}"
        },
        "delete": {
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "description": "Deletes a datafeed configuration from your Merchant Center account.",
          "path": "{merchantId}/datafeeds/{datafeedId}",
          "flatPath": "{merchantId}/datafeeds/{datafeedId}",
          "parameters": {
            "datafeedId": {
              "description": "The ID of the datafeed.",
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "required": true,
              "location": "path"
            }
          },
          "id": "content.datafeeds.delete",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "DELETE"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/datafeeds/{datafeedId}",
          "parameters": {
            "datafeedId": {
              "description": "The ID of the datafeed.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path"
            }
          },
          "request": {
            "$ref": "Datafeed"
          },
          "id": "content.datafeeds.update",
          "response": {
            "$ref": "Datafeed"
          },
          "httpMethod": "PUT",
          "path": "{merchantId}/datafeeds/{datafeedId}",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "description": "Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource."
        },
        "list": {
          "description": "Lists the configurations for datafeeds in your Merchant Center account.",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "required": true,
              "format": "uint64"
            },
            "maxResults": {
              "location": "query",
              "description": "The maximum number of products to return in the response, used for paging.",
              "format": "uint32",
              "type": "integer"
            }
          },
          "id": "content.datafeeds.list",
          "path": "{merchantId}/datafeeds",
          "httpMethod": "GET",
          "flatPath": "{merchantId}/datafeeds",
          "response": {
            "$ref": "DatafeedsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ]
        },
        "custombatch": {
          "description": "Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.",
          "parameters": {},
          "path": "datafeeds/batch",
          "parameterOrder": [],
          "id": "content.datafeeds.custombatch",
          "response": {
            "$ref": "DatafeedsCustomBatchResponse"
          },
          "request": {
            "$ref": "DatafeedsCustomBatchRequest"
          },
          "flatPath": "datafeeds/batch",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "productdeliverytime": {
      "methods": {
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/productdeliverytime/{productId}",
          "description": "Deletes the delivery time of a product.",
          "id": "content.productdeliverytime.delete",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "path": "{merchantId}/productdeliverytime/{productId}",
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "int64",
              "location": "path",
              "description": "Required. The Google merchant ID of the account that contains the product. This account cannot be a multi-client account."
            },
            "productId": {
              "description": "Required. The Content API ID of the product, in the form `channel:contentLanguage:targetCountry:offerId`.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          }
        },
        "get": {
          "parameters": {
            "merchantId": {
              "format": "int64",
              "required": true,
              "type": "string",
              "description": "Required. The Google merchant ID of the account that contains the product. This account cannot be a multi-client account.",
              "location": "path"
            },
            "productId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The Content API ID of the product, in the form `channel:contentLanguage:targetCountry:offerId`."
            }
          },
          "flatPath": "{merchantId}/productdeliverytime/{productId}",
          "description": "Gets `productDeliveryTime` by `productId`.",
          "path": "{merchantId}/productdeliverytime/{productId}",
          "response": {
            "$ref": "ProductDeliveryTime"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "id": "content.productdeliverytime.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "create": {
          "parameters": {
            "merchantId": {
              "format": "int64",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The Google merchant ID of the account that contains the product. This account cannot be a multi-client account."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/productdeliverytime",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "ProductDeliveryTime"
          },
          "httpMethod": "POST",
          "description": "Creates or updates the delivery time of a product.",
          "id": "content.productdeliverytime.create",
          "request": {
            "$ref": "ProductDeliveryTime"
          },
          "path": "{merchantId}/productdeliverytime"
        }
      }
    },
    "pubsubnotificationsettings": {
      "methods": {
        "get": {
          "path": "{merchantId}/pubsubnotificationsettings",
          "description": "Retrieves a Merchant Center account's pubsub notification settings.",
          "flatPath": "{merchantId}/pubsubnotificationsettings",
          "id": "content.pubsubnotificationsettings.get",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account for which to get pubsub notification settings.",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64"
            }
          },
          "response": {
            "$ref": "PubsubNotificationSettings"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "update": {
          "httpMethod": "PUT",
          "flatPath": "{merchantId}/pubsubnotificationsettings",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "description": "The ID of the account.",
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Register a Merchant Center account for pubsub notifications. Note that cloud topic name shouldn't be provided as part of the request.",
          "request": {
            "$ref": "PubsubNotificationSettings"
          },
          "response": {
            "$ref": "PubsubNotificationSettings"
          },
          "path": "{merchantId}/pubsubnotificationsettings",
          "id": "content.pubsubnotificationsettings.update",
          "parameterOrder": [
            "merchantId"
          ]
        }
      }
    },
    "regionalinventory": {
      "methods": {
        "insert": {
          "path": "{merchantId}/products/{productId}/regionalinventory",
          "description": "Updates the regional inventory of a product in your Merchant Center account. If a regional inventory with the same region ID already exists, this method updates that entry.",
          "request": {
            "$ref": "RegionalInventory"
          },
          "httpMethod": "POST",
          "id": "content.regionalinventory.insert",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "response": {
            "$ref": "RegionalInventory"
          },
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true
            },
            "productId": {
              "description": "The REST ID of the product for which to update the regional inventory.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/products/{productId}/regionalinventory"
        },
        "custombatch": {
          "parameters": {},
          "id": "content.regionalinventory.custombatch",
          "flatPath": "regionalinventory/batch",
          "response": {
            "$ref": "RegionalinventoryCustomBatchResponse"
          },
          "request": {
            "$ref": "RegionalinventoryCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates regional inventory for multiple products or regions in a single request.",
          "path": "regionalinventory/batch",
          "parameterOrder": [],
          "httpMethod": "POST"
        }
      }
    },
    "products": {
      "methods": {
        "get": {
          "description": "Retrieves a product from your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Product"
          },
          "httpMethod": "GET",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "productId": {
              "required": true,
              "location": "path",
              "description": "The REST ID of the product.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "path": "{merchantId}/products/{productId}",
          "id": "content.products.get",
          "flatPath": "{merchantId}/products/{productId}"
        },
        "list": {
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/products",
          "response": {
            "$ref": "ProductsListResponse"
          },
          "description": "Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.",
          "id": "content.products.list",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "format": "uint64",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "description": "The maximum number of products to return in the response, used for paging.",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            }
          },
          "httpMethod": "GET",
          "path": "{merchantId}/products"
        },
        "custombatch": {
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "products/batch",
          "id": "content.products.custombatch",
          "response": {
            "$ref": "ProductsCustomBatchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "products/batch",
          "parameters": {},
          "description": "Retrieves, inserts, and deletes multiple products in a single request.",
          "request": {
            "$ref": "ProductsCustomBatchRequest"
          }
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "PATCH",
          "flatPath": "{merchantId}/products/{productId}",
          "parameters": {
            "updateMask": {
              "type": "string",
              "location": "query",
              "format": "google-fieldmask",
              "description": "The comma-separated list of product attributes to be updated. Example: `\"title,salePrice\"`. Attributes specified in the update mask without a value specified in the body will be deleted from the product. Only top-level product attributes can be updated. If not defined, product attributes with set values will be updated and other attributes will stay unchanged."
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "productId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The REST ID of the product for which to update."
            }
          },
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "description": "Updates an existing product in your Merchant Center account. Only updates attributes provided in the request.",
          "path": "{merchantId}/products/{productId}",
          "response": {
            "$ref": "Product"
          },
          "request": {
            "$ref": "Product"
          },
          "id": "content.products.update"
        },
        "delete": {
          "parameters": {
            "feedId": {
              "type": "string",
              "format": "uint64",
              "location": "query",
              "description": "The Content API Supplemental Feed ID. If present then product deletion applies to the data in a supplemental feed. If absent, entire product will be deleted."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string"
            },
            "productId": {
              "type": "string",
              "location": "path",
              "description": "The REST ID of the product.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/products/{productId}",
          "description": "Deletes a product from your Merchant Center account.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "flatPath": "{merchantId}/products/{productId}",
          "id": "content.products.delete"
        },
        "insert": {
          "response": {
            "$ref": "Product"
          },
          "description": "Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.",
          "flatPath": "{merchantId}/products",
          "parameterOrder": [
            "merchantId"
          ],
          "request": {
            "$ref": "Product"
          },
          "path": "{merchantId}/products",
          "id": "content.products.insert",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "feedId": {
              "location": "query",
              "format": "uint64",
              "type": "string",
              "description": "The Content API Supplemental Feed ID. If present then product insertion applies to the data in a supplemental feed."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account."
            }
          }
        }
      }
    },
    "orderreports": {
      "methods": {
        "listtransactions": {
          "parameterOrder": [
            "merchantId",
            "disbursementId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves a list of transactions for a disbursement from your Merchant Center account.",
          "httpMethod": "GET",
          "path": "{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "id": "content.orderreports.listtransactions",
          "flatPath": "{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "transactionStartDate": {
              "description": "The first date in which transaction occurred. In ISO 8601 format.",
              "type": "string",
              "location": "query"
            },
            "transactionEndDate": {
              "description": "The last date in which transaction occurred. In ISO 8601 format. Default: current date.",
              "type": "string",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "description": "The maximum number of disbursements to return in the response, used for paging.",
              "type": "integer",
              "location": "query"
            },
            "disbursementId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The Google-provided ID of the disbursement (found in Wallet)."
            }
          },
          "response": {
            "$ref": "OrderreportsListTransactionsResponse"
          }
        },
        "listdisbursements": {
          "flatPath": "{merchantId}/orderreports/disbursements",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "disbursementEndDate": {
              "description": "The last date which disbursements occurred. In ISO 8601 format. Default: current date.",
              "type": "string",
              "location": "query"
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of disbursements to return in the response, used for paging.",
              "location": "query",
              "format": "uint32",
              "type": "integer"
            },
            "disbursementStartDate": {
              "description": "The first date which disbursements occurred. In ISO 8601 format.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            }
          },
          "path": "{merchantId}/orderreports/disbursements",
          "description": "Retrieves a report for disbursements from your Merchant Center account.",
          "response": {
            "$ref": "OrderreportsListDisbursementsResponse"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orderreports.listdisbursements"
        }
      }
    },
    "returnpolicy": {
      "methods": {
        "custombatch": {
          "path": "returnpolicy/batch",
          "response": {
            "$ref": "ReturnpolicyCustomBatchResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "description": "Batches multiple return policy related calls in a single request.",
          "parameters": {},
          "flatPath": "returnpolicy/batch",
          "id": "content.returnpolicy.custombatch",
          "request": {
            "$ref": "ReturnpolicyCustomBatchRequest"
          }
        },
        "insert": {
          "httpMethod": "POST",
          "flatPath": "{merchantId}/returnpolicy",
          "request": {
            "$ref": "ReturnPolicy"
          },
          "id": "content.returnpolicy.insert",
          "path": "{merchantId}/returnpolicy",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Inserts a return policy for the Merchant Center account.",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The Merchant Center account to insert a return policy for.",
              "format": "uint64",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "ReturnPolicy"
          }
        },
        "delete": {
          "flatPath": "{merchantId}/returnpolicy/{returnPolicyId}",
          "description": "Deletes a return policy for the given Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "returnPolicyId"
          ],
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "returnPolicyId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Return policy ID generated by Google."
            },
            "merchantId": {
              "description": "The Merchant Center account from which to delete the given return policy.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            }
          },
          "id": "content.returnpolicy.delete",
          "path": "{merchantId}/returnpolicy/{returnPolicyId}"
        },
        "list": {
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "description": "The Merchant Center account to list return policies for.",
              "required": true
            }
          },
          "path": "{merchantId}/returnpolicy",
          "response": {
            "$ref": "ReturnpolicyListResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "id": "content.returnpolicy.list",
          "flatPath": "{merchantId}/returnpolicy",
          "description": "Lists the return policies of the Merchant Center account."
        },
        "get": {
          "parameterOrder": [
            "merchantId",
            "returnPolicyId"
          ],
          "id": "content.returnpolicy.get",
          "parameters": {
            "merchantId": {
              "description": "The Merchant Center account to get a return policy for.",
              "type": "string",
              "location": "path",
              "required": true,
              "format": "uint64"
            },
            "returnPolicyId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Return policy ID generated by Google."
            }
          },
          "httpMethod": "GET",
          "flatPath": "{merchantId}/returnpolicy/{returnPolicyId}",
          "path": "{merchantId}/returnpolicy/{returnPolicyId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Gets a return policy of the Merchant Center account.",
          "response": {
            "$ref": "ReturnPolicy"
          }
        }
      }
    },
    "liasettings": {
      "methods": {
        "list": {
          "response": {
            "$ref": "LiasettingsListResponse"
          },
          "id": "content.liasettings.list",
          "parameters": {
            "maxResults": {
              "location": "query",
              "description": "The maximum number of LIA settings to return in the response, used for paging.",
              "format": "uint32",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "merchantId": {
              "description": "The ID of the managing account. This must be a multi-client account.",
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string"
            }
          },
          "path": "{merchantId}/liasettings",
          "description": "Lists the LIA settings of the sub-accounts in your Merchant Center account.",
          "httpMethod": "GET",
          "flatPath": "{merchantId}/liasettings",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ]
        },
        "requestgmbaccess": {
          "id": "content.liasettings.requestgmbaccess",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "gmbEmail"
          ],
          "flatPath": "{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Requests access to a specified Business Profile.",
          "response": {
            "$ref": "LiasettingsRequestGmbAccessResponse"
          },
          "parameters": {
            "accountId": {
              "required": true,
              "description": "The ID of the account for which Business Profile access is requested.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "location": "path",
              "format": "uint64"
            },
            "gmbEmail": {
              "location": "query",
              "description": "The email of the Business Profile.",
              "type": "string",
              "required": true
            }
          },
          "path": "{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "httpMethod": "POST"
        },
        "update": {
          "id": "content.liasettings.update",
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "accountId": {
              "description": "The ID of the account for which to get or update LIA settings.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64"
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "format": "uint64"
            }
          },
          "path": "{merchantId}/liasettings/{accountId}",
          "response": {
            "$ref": "LiaSettings"
          },
          "request": {
            "$ref": "LiaSettings"
          },
          "flatPath": "{merchantId}/liasettings/{accountId}"
        },
        "listposdataproviders": {
          "description": "Retrieves the list of POS data providers that have active settings for the all eiligible countries.",
          "id": "content.liasettings.listposdataproviders",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "liasettings/posdataproviders",
          "response": {
            "$ref": "LiasettingsListPosDataProvidersResponse"
          },
          "parameterOrder": [],
          "path": "liasettings/posdataproviders",
          "httpMethod": "GET",
          "parameters": {}
        },
        "getaccessiblegmbaccounts": {
          "httpMethod": "GET",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path"
            },
            "accountId": {
              "description": "The ID of the account for which to retrieve accessible Business Profiles.",
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.liasettings.getaccessiblegmbaccounts",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Retrieves the list of accessible Business Profiles.",
          "flatPath": "{merchantId}/liasettings/{accountId}/accessiblegmbaccounts",
          "response": {
            "$ref": "LiasettingsGetAccessibleGmbAccountsResponse"
          },
          "path": "{merchantId}/liasettings/{accountId}/accessiblegmbaccounts"
        },
        "setinventoryverificationcontact": {
          "description": "Sets the inventory verification contract for the specified country.",
          "flatPath": "{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "response": {
            "$ref": "LiasettingsSetInventoryVerificationContactResponse"
          },
          "parameters": {
            "contactEmail": {
              "location": "query",
              "description": "The email of the inventory verification contact.",
              "type": "string",
              "required": true
            },
            "language": {
              "required": true,
              "description": "The language for which inventory verification is requested.",
              "type": "string",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "type": "string"
            },
            "country": {
              "required": true,
              "description": "The country for which inventory verification is requested.",
              "location": "query",
              "type": "string"
            },
            "contactName": {
              "location": "query",
              "required": true,
              "description": "The name of the inventory verification contact.",
              "type": "string"
            },
            "accountId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "id": "content.liasettings.setinventoryverificationcontact",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country",
            "language",
            "contactName",
            "contactEmail"
          ],
          "httpMethod": "POST"
        },
        "setposdataprovider": {
          "parameters": {
            "accountId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the account for which to retrieve accessible Business Profiles.",
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64"
            },
            "posDataProviderId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of POS data provider.",
              "location": "query"
            },
            "posExternalAccountId": {
              "description": "The account ID by which this merchant is known to the POS data provider.",
              "location": "query",
              "type": "string"
            },
            "country": {
              "location": "query",
              "required": true,
              "description": "The country for which the POS data provider is selected.",
              "type": "string"
            }
          },
          "path": "{merchantId}/liasettings/{accountId}/setposdataprovider",
          "response": {
            "$ref": "LiasettingsSetPosDataProviderResponse"
          },
          "flatPath": "{merchantId}/liasettings/{accountId}/setposdataprovider",
          "description": "Sets the POS data provider for the specified country.",
          "httpMethod": "POST",
          "id": "content.liasettings.setposdataprovider",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ]
        },
        "custombatch": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {},
          "request": {
            "$ref": "LiasettingsCustomBatchRequest"
          },
          "description": "Retrieves and/or updates the LIA settings of multiple accounts in a single request.",
          "path": "liasettings/batch",
          "response": {
            "$ref": "LiasettingsCustomBatchResponse"
          },
          "id": "content.liasettings.custombatch",
          "parameterOrder": [],
          "flatPath": "liasettings/batch"
        },
        "requestinventoryverification": {
          "id": "content.liasettings.requestinventoryverification",
          "flatPath": "{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "parameters": {
            "country": {
              "description": "The country for which inventory validation is requested.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "accountId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Requests inventory validation for the specified country.",
          "response": {
            "$ref": "LiasettingsRequestInventoryVerificationResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ],
          "path": "{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "httpMethod": "POST"
        },
        "get": {
          "description": "Retrieves the LIA settings of the account.",
          "flatPath": "{merchantId}/liasettings/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "{merchantId}/liasettings/{accountId}",
          "id": "content.liasettings.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "LiaSettings"
          },
          "parameters": {
            "accountId": {
              "location": "path",
              "description": "The ID of the account for which to get or update LIA settings.",
              "type": "string",
              "format": "uint64",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "collectionstatuses": {
      "methods": {
        "get": {
          "description": "Gets the status of a collection from your Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "collectionId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.collectionstatuses.get",
          "parameters": {
            "collectionId": {
              "description": "Required. The collectionId of the collection. CollectionId is the same as the REST ID of the collection.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "description": "Required. The ID of the account that contains the collection. This account cannot be a multi-client account.",
              "format": "int64",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "{merchantId}/collectionstatuses/{collectionId}",
          "response": {
            "$ref": "CollectionStatus"
          },
          "path": "{merchantId}/collectionstatuses/{collectionId}",
          "httpMethod": "GET"
        },
        "list": {
          "parameters": {
            "merchantId": {
              "description": "Required. The ID of the account that contains the collection. This account cannot be a multi-client account.",
              "location": "path",
              "format": "int64",
              "required": true,
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token."
            },
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "description": "The maximum number of collection statuses to return in the response, used for paging. Defaults to 50; values above 1000 will be coerced to 1000.",
              "location": "query"
            }
          },
          "description": "Lists the statuses of the collections in your Merchant Center account.",
          "response": {
            "$ref": "ListCollectionStatusesResponse"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/collectionstatuses",
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.collectionstatuses.list",
          "flatPath": "{merchantId}/collectionstatuses"
        }
      }
    },
    "settlementtransactions": {
      "methods": {
        "list": {
          "flatPath": "{merchantId}/settlementreports/{settlementId}/transactions",
          "description": "Retrieves a list of transactions for the settlement.",
          "response": {
            "$ref": "SettlementtransactionsListResponse"
          },
          "path": "{merchantId}/settlementreports/{settlementId}/transactions",
          "id": "content.settlementtransactions.list",
          "parameterOrder": [
            "merchantId",
            "settlementId"
          ],
          "parameters": {
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "The maximum number of transactions to return in the response, used for paging. The default value is 200 transactions per page, and the maximum allowed value is 5000 transactions per page.",
              "format": "uint32"
            },
            "transactionIds": {
              "type": "string",
              "repeated": true,
              "description": "The list of transactions to return. If not set, all transactions will be returned.",
              "location": "query"
            },
            "settlementId": {
              "type": "string",
              "description": "The Google-provided ID of the settlement.",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "location": "path",
              "description": "The Merchant Center account to list transactions for.",
              "type": "string",
              "format": "uint64",
              "required": true
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "accountstatuses": {
      "methods": {
        "list": {
          "response": {
            "$ref": "AccountstatusesListResponse"
          },
          "id": "content.accountstatuses.list",
          "flatPath": "{merchantId}/accountstatuses",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists the statuses of the sub-accounts in your Merchant Center account.",
          "path": "{merchantId}/accountstatuses",
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "description": "The maximum number of account statuses to return in the response, used for paging.",
              "location": "query",
              "type": "integer",
              "format": "uint32"
            },
            "name": {
              "type": "string",
              "location": "query",
              "description": "If set, only the accounts with the given name (case sensitive) will be returned."
            },
            "destinations": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account."
            }
          }
        },
        "get": {
          "description": "Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.",
          "response": {
            "$ref": "AccountStatus"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "accountId": {
              "description": "The ID of the account.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "destinations": {
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query",
              "repeated": true,
              "type": "string"
            }
          },
          "path": "{merchantId}/accountstatuses/{accountId}",
          "flatPath": "{merchantId}/accountstatuses/{accountId}",
          "id": "content.accountstatuses.get"
        },
        "custombatch": {
          "request": {
            "$ref": "AccountstatusesCustomBatchRequest"
          },
          "id": "content.accountstatuses.custombatch",
          "description": "Retrieves multiple Merchant Center account statuses in a single request.",
          "path": "accountstatuses/batch",
          "parameters": {},
          "flatPath": "accountstatuses/batch",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "AccountstatusesCustomBatchResponse"
          },
          "parameterOrder": []
        }
      }
    },
    "shippingsettings": {
      "methods": {
        "list": {
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/shippingsettings",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "The maximum number of shipping settings to return in the response, used for paging."
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "required": true,
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "ShippingsettingsListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "{merchantId}/shippingsettings",
          "description": "Lists the shipping settings of the sub-accounts in your Merchant Center account.",
          "id": "content.shippingsettings.list"
        },
        "custombatch": {
          "parameterOrder": [],
          "parameters": {},
          "flatPath": "shippingsettings/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "shippingsettings/batch",
          "response": {
            "$ref": "ShippingsettingsCustomBatchResponse"
          },
          "httpMethod": "POST",
          "id": "content.shippingsettings.custombatch",
          "description": "Retrieves and updates the shipping settings of multiple accounts in a single request.",
          "request": {
            "$ref": "ShippingsettingsCustomBatchRequest"
          }
        },
        "getsupportedpickupservices": {
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the account for which to retrieve the supported pickup services."
            }
          },
          "httpMethod": "GET",
          "description": "Retrieves supported pickup services for an account.",
          "id": "content.shippingsettings.getsupportedpickupservices",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "ShippingsettingsGetSupportedPickupServicesResponse"
          },
          "path": "{merchantId}/supportedPickupServices",
          "flatPath": "{merchantId}/supportedPickupServices",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "update": {
          "flatPath": "{merchantId}/shippingsettings/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.shippingsettings.update",
          "parameters": {
            "accountId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account for which to get/update shipping settings.",
              "location": "path"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "ShippingSettings"
          },
          "request": {
            "$ref": "ShippingSettings"
          },
          "path": "{merchantId}/shippingsettings/{accountId}",
          "httpMethod": "PUT"
        },
        "getsupportedcarriers": {
          "parameters": {
            "merchantId": {
              "description": "The ID of the account for which to retrieve the supported carriers.",
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/supportedCarriers",
          "response": {
            "$ref": "ShippingsettingsGetSupportedCarriersResponse"
          },
          "id": "content.shippingsettings.getsupportedcarriers",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/supportedCarriers",
          "description": "Retrieves supported carriers and carrier services for an account."
        },
        "get": {
          "path": "{merchantId}/shippingsettings/{accountId}",
          "response": {
            "$ref": "ShippingSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "accountId": {
              "type": "string",
              "description": "The ID of the account for which to get/update shipping settings.",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            }
          },
          "flatPath": "{merchantId}/shippingsettings/{accountId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.shippingsettings.get",
          "description": "Retrieves the shipping settings of the account."
        },
        "getsupportedholidays": {
          "flatPath": "{merchantId}/supportedHolidays",
          "id": "content.shippingsettings.getsupportedholidays",
          "description": "Retrieves supported holidays for an account.",
          "path": "{merchantId}/supportedHolidays",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "ShippingsettingsGetSupportedHolidaysResponse"
          },
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account for which to retrieve the supported holidays.",
              "required": true,
              "type": "string",
              "format": "uint64"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ]
        }
      }
    },
    "repricingrules": {
      "methods": {
        "get": {
          "flatPath": "{merchantId}/repricingrules/{ruleId}",
          "description": "Retrieves a repricing rule from your Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "ruleId"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "RepricingRule"
          },
          "id": "content.repricingrules.get",
          "parameters": {
            "merchantId": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "required": true
            },
            "ruleId": {
              "location": "path",
              "type": "string",
              "description": "Required. The id of the rule to retrieve.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/repricingrules/{ruleId}"
        },
        "patch": {
          "parameterOrder": [
            "merchantId",
            "ruleId"
          ],
          "description": "Updates a repricing rule in your Merchant Center account. All mutable fields will be overwritten in each update request. In each update, you must provide all required mutable fields, or an error will be thrown. If you do not provide an optional field in the update request, if that field currently exists, it will be deleted from the rule.",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "RepricingRule"
          },
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "format": "int64",
              "required": true,
              "type": "string"
            },
            "ruleId": {
              "type": "string",
              "description": "Required. The id of the rule to update.",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "{merchantId}/repricingrules/{ruleId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/repricingrules/{ruleId}",
          "request": {
            "$ref": "RepricingRule"
          },
          "id": "content.repricingrules.patch"
        },
        "delete": {
          "parameterOrder": [
            "merchantId",
            "ruleId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.repricingrules.delete",
          "description": "Deletes a repricing rule in your Merchant Center account.",
          "path": "{merchantId}/repricingrules/{ruleId}",
          "flatPath": "{merchantId}/repricingrules/{ruleId}",
          "parameters": {
            "ruleId": {
              "description": "Required. The id of the rule to Delete.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "type": "string",
              "format": "int64"
            }
          },
          "httpMethod": "DELETE"
        },
        "list": {
          "httpMethod": "GET",
          "response": {
            "$ref": "ListRepricingRulesResponse"
          },
          "path": "{merchantId}/repricingrules",
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.repricingrules.list",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/repricingrules",
          "description": "Lists the repricing rules in your Merchant Center account.",
          "parameters": {
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of repricing rules to return. The service may return fewer than this value. If unspecified, at most 50 rules will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
              "type": "integer",
              "location": "query"
            },
            "countryCode": {
              "type": "string",
              "description": "[CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) (e.g. \"US\"), used as a filter on repricing rules.",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A page token, received from a previous `ListRepricingRules` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRepricingRules` must match the call that provided the page token."
            },
            "merchantId": {
              "location": "path",
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "format": "int64",
              "type": "string",
              "required": true
            },
            "languageCode": {
              "description": "The two-letter ISO 639-1 language code associated with the repricing rule, used as a filter.",
              "type": "string",
              "location": "query"
            }
          }
        },
        "create": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Creates a repricing rule for your Merchant Center account.",
          "httpMethod": "POST",
          "id": "content.repricingrules.create",
          "parameters": {
            "ruleId": {
              "description": "Required. The id of the rule to create.",
              "type": "string",
              "location": "query"
            },
            "merchantId": {
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "type": "string"
            }
          },
          "flatPath": "{merchantId}/repricingrules",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "RepricingRule"
          },
          "path": "{merchantId}/repricingrules",
          "request": {
            "$ref": "RepricingRule"
          }
        }
      },
      "resources": {
        "repricingreports": {
          "methods": {
            "list": {
              "id": "content.repricingrules.repricingreports.list",
              "path": "{merchantId}/repricingrules/{ruleId}/repricingreports",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListRepricingRuleReportsResponse"
              },
              "parameters": {
                "endDate": {
                  "location": "query",
                  "description": "Gets Repricing reports on and before this date in the merchant's timezone. You can only retrieve data up to 7 days ago (default) or earlier. Format: YYYY-MM-DD.",
                  "type": "string"
                },
                "startDate": {
                  "type": "string",
                  "description": "Gets Repricing reports on and after this date in the merchant's timezone, up to one year ago. Do not use a start date later than 7 days ago (default). Format: YYYY-MM-DD.",
                  "location": "query"
                },
                "ruleId": {
                  "description": "Required. Id of the Repricing rule.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token.",
                  "location": "query"
                },
                "merchantId": {
                  "location": "path",
                  "required": true,
                  "description": "Required. Id of the merchant who owns the Repricing rule.",
                  "format": "int64",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Maximum number of daily reports to return. Each report includes data from a single 24-hour period. The page size defaults to 50 and values above 1000 are coerced to 1000. This service may return fewer days than this value, for example, if the time between your start and end date is less than page size.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "flatPath": "{merchantId}/repricingrules/{ruleId}/repricingreports",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Lists the metrics report for a given Repricing rule.",
              "parameterOrder": [
                "merchantId",
                "ruleId"
              ]
            }
          }
        }
      }
    },
    "buyongoogleprograms": {
      "methods": {
        "patch": {
          "httpMethod": "PATCH",
          "parameterOrder": [
            "merchantId",
            "regionCode"
          ],
          "description": "Updates the status of the BoG program for your Merchant Center account.",
          "request": {
            "$ref": "BuyOnGoogleProgramStatus"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "regionCode": {
              "location": "path",
              "description": "Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.",
              "type": "string",
              "required": true
            },
            "updateMask": {
              "type": "string",
              "description": "The list of fields to update. If the update mask is not provided, then all the fields set in buyOnGoogleProgramStatus will be updated. Clearing fields is only possible if update mask is provided.",
              "format": "google-fieldmask",
              "location": "query"
            },
            "merchantId": {
              "required": true,
              "description": "Required. The ID of the account.",
              "format": "int64",
              "location": "path",
              "type": "string"
            }
          },
          "path": "{merchantId}/buyongoogleprograms/{regionCode}",
          "response": {
            "$ref": "BuyOnGoogleProgramStatus"
          },
          "id": "content.buyongoogleprograms.patch",
          "flatPath": "{merchantId}/buyongoogleprograms/{regionCode}"
        },
        "activate": {
          "path": "{merchantId}/buyongoogleprograms/{regionCode}/activate",
          "flatPath": "{merchantId}/buyongoogleprograms/{regionCode}/activate",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "Required. The ID of the account.",
              "format": "int64",
              "required": true,
              "location": "path"
            },
            "regionCode": {
              "required": true,
              "description": "Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.",
              "location": "path",
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "regionCode"
          ],
          "request": {
            "$ref": "ActivateBuyOnGoogleProgramRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.buyongoogleprograms.activate",
          "description": "Reactivates the BoG program in your Merchant Center account. Moves the program to the active state when allowed, for example, when paused. This method is only available to selected merchants."
        },
        "pause": {
          "request": {
            "$ref": "PauseBuyOnGoogleProgramRequest"
          },
          "parameters": {
            "regionCode": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available."
            },
            "merchantId": {
              "description": "Required. The ID of the account.",
              "type": "string",
              "format": "int64",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "regionCode"
          ],
          "id": "content.buyongoogleprograms.pause",
          "httpMethod": "POST",
          "path": "{merchantId}/buyongoogleprograms/{regionCode}/pause",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Pauses the BoG program in your Merchant Center account. This method is only available to selected merchants.",
          "flatPath": "{merchantId}/buyongoogleprograms/{regionCode}/pause"
        },
        "requestreview": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "regionCode"
          ],
          "id": "content.buyongoogleprograms.requestreview",
          "path": "{merchantId}/buyongoogleprograms/{regionCode}/requestreview",
          "httpMethod": "POST",
          "request": {
            "$ref": "RequestReviewBuyOnGoogleProgramRequest"
          },
          "parameters": {
            "regionCode": {
              "required": true,
              "description": "Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "format": "int64",
              "required": true,
              "description": "Required. The ID of the account.",
              "type": "string"
            }
          },
          "description": "Requests review and then activates the BoG program in your Merchant Center account for the first time. Moves the program to the REVIEW_PENDING state. This method is only available to selected merchants.",
          "flatPath": "{merchantId}/buyongoogleprograms/{regionCode}/requestreview"
        },
        "onboard": {
          "flatPath": "{merchantId}/buyongoogleprograms/{regionCode}/onboard",
          "id": "content.buyongoogleprograms.onboard",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/buyongoogleprograms/{regionCode}/onboard",
          "description": "Onboards the BoG program in your Merchant Center account. By using this method, you agree to the [Terms of Service](https://merchants.google.com/mc/termsofservice/transactions/US/latest). Calling this method is only possible if the authenticated account is the same as the merchant id in the request. Calling this method multiple times will only accept Terms of Service if the latest version is not currently signed.",
          "request": {
            "$ref": "OnboardBuyOnGoogleProgramRequest"
          },
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The ID of the account.",
              "format": "int64"
            },
            "regionCode": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available."
            }
          },
          "parameterOrder": [
            "merchantId",
            "regionCode"
          ]
        },
        "get": {
          "parameterOrder": [
            "merchantId",
            "regionCode"
          ],
          "path": "{merchantId}/buyongoogleprograms/{regionCode}",
          "httpMethod": "GET",
          "id": "content.buyongoogleprograms.get",
          "flatPath": "{merchantId}/buyongoogleprograms/{regionCode}",
          "description": "Retrieves a status of the BoG program for your Merchant Center account.",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "Required. The ID of the account.",
              "format": "int64",
              "location": "path",
              "type": "string"
            },
            "regionCode": {
              "location": "path",
              "description": "Required. The Program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "BuyOnGoogleProgramStatus"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/content": {
          "description": "Manage your product listings and accounts for Google Shopping"
        }
      }
    }
  },
  "baseUrl": "https://shoppingcontent.googleapis.com/content/v2.1/",
  "parameters": {
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://shoppingcontent.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "canonicalName": "Shopping Content",
  "revision": "20221024",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "name": "content",
  "description": "Manage your product listings and accounts for Google Shopping",
  "servicePath": "content/v2.1/",
  "documentationLink": "https://developers.google.com/shopping-content/v2/",
  "rootUrl": "https://shoppingcontent.googleapis.com/",
  "basePath": "/content/v2.1/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  }
}
