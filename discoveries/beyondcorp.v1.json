{
  "ownerDomain": "google.com",
  "title": "BeyondCorp API",
  "baseUrl": "https://beyondcorp.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "httpMethod": "GET",
              "id": "beyondcorp.projects.locations.get"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "id": "beyondcorp.projects.locations.list"
            }
          },
          "resources": {
            "appConnectors": {
              "methods": {
                "create": {
                  "id": "beyondcorp.projects.locations.appConnectors.create",
                  "description": "Creates a new AppConnector in a given project and location.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/appConnectors",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource project name of the AppConnector location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "appConnectorId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. User-settable AppConnector resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter."
                    }
                  }
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors",
                  "path": "v1/{+parent}/appConnectors",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse"
                  },
                  "id": "beyondcorp.projects.locations.appConnectors.list",
                  "description": "Lists AppConnectors in a given project and location.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the AppConnector location using the form: `projects/{project_id}/locations/{location_id}`"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous ListAppConnectorsRequest, if any."
                    },
                    "filter": {
                      "description": "Optional. A filter specifying constraints of a list operation.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "format": "int32",
                      "location": "query"
                    }
                  }
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:setIamPolicy",
                  "id": "beyondcorp.projects.locations.appConnectors.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  }
                },
                "resolveInstanceConfig": {
                  "parameters": {
                    "appConnector": {
                      "location": "path",
                      "description": "Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "appConnector"
                  ],
                  "id": "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse"
                  },
                  "path": "v1/{+appConnector}:resolveInstanceConfig",
                  "description": "Gets instance configuration for a given AppConnector. An internal method called by a AppConnector to get its container config.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:resolveInstanceConfig",
                  "httpMethod": "GET"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "beyondcorp.projects.locations.appConnectors.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}",
                  "description": "Gets details of a single AppConnector."
                },
                "testIamPermissions": {
                  "id": "beyondcorp.projects.locations.appConnectors.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:testIamPermissions"
                },
                "reportStatus": {
                  "parameters": {
                    "appConnector": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector}`",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "appConnector"
                  ],
                  "path": "v1/{+appConnector}:reportStatus",
                  "httpMethod": "POST",
                  "description": "Report status for a given connector.",
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:reportStatus",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "beyondcorp.projects.locations.appConnectors.reportStatus"
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "beyondcorp.projects.locations.appConnectors.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deletes a single AppConnector.",
                  "parameters": {
                    "name": {
                      "description": "Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "beyondcorp.projects.locations.appConnectors.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}",
                  "httpMethod": "DELETE"
                },
                "patch": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
                    },
                    "name": {
                      "required": true,
                      "description": "Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.AppConnector]: * `labels` * `display_name`",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
                  },
                  "description": "Updates the parameters of a single AppConnector.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}",
                  "id": "beyondcorp.projects.locations.appConnectors.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "clientConnectorServices": {
              "methods": {
                "testIamPermissions": {
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "id": "beyondcorp.projects.locations.clientConnectorServices.testIamPermissions",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:getIamPolicy",
                  "id": "beyondcorp.projects.locations.clientConnectorServices.getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "get": {
                  "description": "Gets details of a single ClientConnectorService.",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "beyondcorp.projects.locations.clientConnectorServices.get",
                  "response": {
                    "$ref": "ClientConnectorService"
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListClientConnectorServicesResponse"
                  },
                  "description": "Lists ClientConnectorServices in a given project and location.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListClientConnectorServicesRequest.",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "description": "Optional. A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Optional. Hint for how to order the results.",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/clientConnectorServices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices",
                  "httpMethod": "GET",
                  "id": "beyondcorp.projects.locations.clientConnectorServices.list"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "beyondcorp.projects.locations.clientConnectorServices.patch",
                  "parameters": {
                    "allowMissing": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set as true, will create the resource if it is not found."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the ClientConnectorService resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten. Mutable fields: display_name, ingress.config.destination_routes.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of resource. The name is ignored during creation."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ClientConnectorService"
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}",
                  "description": "Updates the parameters of a single ClientConnectorService.",
                  "httpMethod": "PATCH"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/clientConnectorServices",
                  "description": "Creates a new ClientConnectorService in a given project and location.",
                  "request": {
                    "$ref": "ClientConnectorService"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "beyondcorp.projects.locations.clientConnectorServices.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "clientConnectorServiceId": {
                      "type": "string",
                      "description": "Optional. User-settable client connector service resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter. A random system generated name will be assigned if not specified by the user.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent."
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  }
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.clientConnectorServices.setIamPolicy",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "description": "Deletes a single ClientConnectorService.",
                  "id": "beyondcorp.projects.locations.clientConnectorServices.delete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "cancel": {
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "beyondcorp.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "list": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "path": "v1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "beyondcorp.projects.locations.operations.delete",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            },
            "appGateways": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "beyondcorp.projects.locations.appGateways.delete",
                  "description": "Deletes a single AppGateway.",
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. BeyondCorp AppGateway name using the form: `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}"
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "id": "beyondcorp.projects.locations.appGateways.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:testIamPermissions"
                },
                "create": {
                  "id": "beyondcorp.projects.locations.appGateways.create",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource project name of the AppGateway location using the form: `projects/{project_id}/locations/{location_id}`"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "appGatewayId": {
                      "location": "query",
                      "description": "Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new AppGateway in a given project and location.",
                  "request": {
                    "$ref": "AppGateway"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appGateways",
                  "path": "v1/{+parent}/appGateways"
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "beyondcorp.projects.locations.appGateways.list",
                  "description": "Lists AppGateways in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/appGateways",
                  "response": {
                    "$ref": "ListAppGatewaysResponse"
                  },
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A filter specifying constraints of a list operation."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The resource name of the AppGateway location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried."
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous ListAppGatewaysRequest, if any.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appGateways"
                },
                "get": {
                  "description": "Gets details of a single AppGateway.",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "beyondcorp.projects.locations.appGateways.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. BeyondCorp AppGateway name using the form: `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "AppGateway"
                  }
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "id": "beyondcorp.projects.locations.appGateways.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  }
                },
                "getIamPolicy": {
                  "id": "beyondcorp.projects.locations.appGateways.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                }
              }
            },
            "appConnections": {
              "methods": {
                "get": {
                  "description": "Gets details of a single AppConnection.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. BeyondCorp AppConnection name using the form: `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "required": true
                    }
                  }
                },
                "resolve": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.resolve",
                  "path": "v1/{+parent}/appConnections:resolve",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections:resolve",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse"
                  },
                  "description": "Resolves AppConnections details for a given AppConnector. An internal method called by a connector to find AppConnections to connect to.",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous ResolveAppConnectionsResponse, if any."
                    },
                    "appConnectorId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. BeyondCorp Connector name of the connector associated with those AppConnections using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`"
                    }
                  }
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:setIamPolicy",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "beyondcorp.projects.locations.appConnections.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.create",
                  "description": "Creates a new AppConnection in a given project and location.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The resource project name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "appConnectionId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean"
                    }
                  },
                  "path": "v1/{+parent}/appConnections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                  }
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "beyondcorp.projects.locations.appConnections.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "delete": {
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$"
                    }
                  },
                  "description": "Deletes a single AppConnection.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.delete",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "DELETE"
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/appConnections",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Optional. A filter specifying constraints of a list operation.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous ListAppConnectionsRequest, if any."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "description": "Lists AppConnections in a given project and location.",
                  "id": "beyondcorp.projects.locations.appConnections.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections"
                },
                "patch": {
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single AppConnection.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}",
                  "id": "beyondcorp.projects.locations.appConnections.patch",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.AppConnection]: * `labels` * `display_name` * `application_endpoint` * `connectors`",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set as true, will create the resource if it is not found."
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "clientGateways": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientGateways",
                  "id": "beyondcorp.projects.locations.clientGateways.create",
                  "path": "v1/{+parent}/clientGateways",
                  "description": "Creates a new ClientGateway in a given project and location.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "clientGatewayId": {
                      "location": "query",
                      "description": "Optional. User-settable client gateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ClientGateway"
                  }
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "httpMethod": "POST",
                  "id": "beyondcorp.projects.locations.clientGateways.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:getIamPolicy",
                  "id": "beyondcorp.projects.locations.clientGateways.getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListClientGatewaysResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Filtering results."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Hint for how to order the results."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Optional. A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListClientGatewaysRequest.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientGateways",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ClientGateways in a given project and location.",
                  "path": "v1/{+parent}/clientGateways",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "beyondcorp.projects.locations.clientGateways.list"
                },
                "delete": {
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}",
                  "description": "Deletes a single ClientGateway.",
                  "path": "v1/{+name}",
                  "id": "beyondcorp.projects.locations.clientGateways.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "id": "beyondcorp.projects.locations.clientGateways.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "get": {
                  "description": "Gets details of a single ClientGateway.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ClientGateway"
                  },
                  "path": "v1/{+name}",
                  "id": "beyondcorp.projects.locations.clientGateways.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servicePath": "",
  "canonicalName": "BeyondCorp",
  "name": "beyondcorp",
  "mtlsRootUrl": "https://beyondcorp.mtls.googleapis.com/",
  "ownerName": "Google",
  "version": "v1",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "description": "Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.",
  "schemas": {
    "ClientGatewayOperationMetadata": {
      "id": "ClientGatewayOperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        }
      }
    },
    "AppGatewayOperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        }
      },
      "id": "AppGatewayOperationMetadata"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount": {
      "type": "object",
      "properties": {
        "email": {
          "description": "Email address of the service account.",
          "type": "string"
        }
      },
      "description": "ServiceAccount represents a GCP service account.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount"
    },
    "Tunnelv1ProtoTunnelerInfo": {
      "id": "Tunnelv1ProtoTunnelerInfo",
      "properties": {
        "latestRetryTime": {
          "description": "latest_retry_time stores the time when the tunneler was last restarted.",
          "format": "google-datetime",
          "type": "string"
        },
        "latestErr": {
          "$ref": "Tunnelv1ProtoTunnelerError",
          "description": "latest_err stores the Error for the latest tunneler failure. Gets reset everytime the tunneler is retried by tunManager."
        },
        "id": {
          "description": "id is the unique id of a tunneler.",
          "type": "string"
        },
        "backoffRetryCount": {
          "type": "integer",
          "format": "uint32",
          "description": "backoff_retry_count stores the number of times the tunneler has been retried by tunManager for current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries exceeds backoffRetryResetTime."
        },
        "totalRetryCount": {
          "format": "uint32",
          "type": "integer",
          "description": "total_retry_count stores the total number of times the tunneler has been retried by tunManager."
        }
      },
      "description": "TunnelerInfo contains metadata about tunneler launched by connection manager.",
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1AppConnector": {
      "properties": {
        "createTime": {
          "description": "Output only. Timestamp when the resource was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "description": "Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector.",
          "type": "string"
        },
        "principalInfo": {
          "description": "Required. Principal information about the Identity of the AppConnector.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Timestamp when the resource was last modified.",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppConnector is being created.",
            "AppConnector has been created.",
            "AppConnector's configuration is being updated.",
            "AppConnector is being deleted.",
            "AppConnector is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ],
          "description": "Output only. The current state of the AppConnector.",
          "readOnly": true
        },
        "resourceInfo": {
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo",
          "description": "Optional. Resource info of the connector."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Resource labels to represent user provided metadata."
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. A unique identifier for the instance generated by the system.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. An arbitrary user-provided name for the AppConnector. Cannot exceed 64 characters."
        }
      },
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1AppConnector",
      "description": "A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadata": {
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadata",
      "description": "Represents the metadata of the long-running operation."
    },
    "AllocatedConnection": {
      "properties": {
        "ingressPort": {
          "format": "int32",
          "description": "Required. The ingress port of an allocated connection",
          "type": "integer"
        },
        "pscUri": {
          "description": "Required. The PSC uri of an allocated connection",
          "type": "string"
        }
      },
      "description": "Allocated connection of the AppGateway.",
      "id": "AllocatedConnection",
      "type": "object"
    },
    "ListClientGatewaysResponse": {
      "type": "object",
      "description": "Message for response to listing ClientGateways.",
      "id": "ListClientGatewaysResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "clientGateways": {
          "items": {
            "$ref": "ClientGateway"
          },
          "description": "The list of ClientGateway.",
          "type": "array"
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectionsV1AppConnection": {
      "id": "GoogleCloudBeyondcorpAppconnectionsV1AppConnection",
      "description": "A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection.",
      "type": "object",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when the resource was created."
        },
        "displayName": {
          "description": "Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters.",
          "type": "string"
        },
        "name": {
          "description": "Required. Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Timestamp when the resource was last modified.",
          "format": "google-datetime",
          "readOnly": true
        },
        "applicationEndpoint": {
          "$ref": "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint",
          "description": "Required. Address of the remote application endpoint for the BeyondCorp AppConnection."
        },
        "connectors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection."
        },
        "gateway": {
          "$ref": "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway",
          "description": "Optional. Gateway used by the AppConnection."
        },
        "type": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "TCP Proxy based BeyondCorp AppConnection. API will default to this if unset."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TCP_PROXY"
          ],
          "type": "string",
          "description": "Required. The type of network connectivity used by the AppConnection."
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ],
          "type": "string",
          "description": "Output only. The current state of the AppConnection.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppConnection is being created.",
            "AppConnection has been created.",
            "AppConnection's configuration is being updated.",
            "AppConnection is being deleted.",
            "AppConnection is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ]
        },
        "uid": {
          "type": "string",
          "description": "Output only. A unique identifier for the instance generated by the system.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user provided metadata.",
          "type": "object"
        }
      }
    },
    "GoogleIamV1Policy": {
      "properties": {
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "type": "array"
        },
        "bindings": {
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array"
        }
      },
      "id": "GoogleIamV1Policy",
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "DestinationRoute": {
      "type": "object",
      "description": "The setting used to configure ClientGateways. It is adding routes to the client's routing table after the connection is established.",
      "properties": {
        "netmask": {
          "type": "string",
          "description": "Required. The network mask of the subnet for which the packet is routed to the ClientGateway."
        },
        "address": {
          "type": "string",
          "description": "Required. The network address of the subnet for which the packet is routed to the ClientGateway."
        }
      },
      "id": "DestinationRoute"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint": {
      "type": "object",
      "description": "ApplicationEndpoint represents a remote application endpoint.",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint",
      "properties": {
        "port": {
          "type": "integer",
          "description": "Required. Port of the remote application endpoint.",
          "format": "int32"
        },
        "host": {
          "type": "string",
          "description": "Required. Hostname or IP address of the remote application endpoint."
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway": {
      "description": "Gateway represents a user facing component that serves as an entrance to enable connectivity.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Output only. Server-defined URI for this resource.",
          "readOnly": true
        },
        "l7psc": {
          "type": "string",
          "description": "Output only. L7 private service connection for this resource.",
          "readOnly": true
        },
        "type": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Gateway hosted in a GCP regional managed instance group."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "GCP_REGIONAL_MIG"
          ],
          "description": "Required. The type of hosting used by the gateway.",
          "type": "string"
        },
        "ingressPort": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443."
        },
        "appGateway": {
          "type": "string",
          "description": "Required. AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`"
        }
      },
      "id": "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadata": {
      "properties": {
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadata",
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "ListClientConnectorServicesResponse": {
      "description": "Message for response to listing ClientConnectorServices.",
      "id": "ListClientConnectorServicesResponse",
      "properties": {
        "clientConnectorServices": {
          "items": {
            "$ref": "ClientConnectorService"
          },
          "description": "The list of ClientConnectorService.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "type": "object"
    },
    "AppGateway": {
      "id": "AppGateway",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TCP_PROXY"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "TCP Proxy based BeyondCorp Connection. API will default to this if unset."
          ],
          "type": "string",
          "description": "Required. The type of network connectivity used by the AppGateway."
        },
        "displayName": {
          "description": "Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user provided metadata."
        },
        "name": {
          "description": "Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.",
          "type": "string"
        },
        "hostType": {
          "description": "Required. The type of hosting used by the AppGateway.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppGateway hosted in a GCP regional managed instance group."
          ],
          "enum": [
            "HOST_TYPE_UNSPECIFIED",
            "GCP_REGIONAL_MIG"
          ],
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Timestamp when the resource was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "allocatedConnections": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "AllocatedConnection"
          },
          "description": "Output only. A list of connections allocated for the Gateway"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. A unique identifier for the instance generated by the system.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined URI for this resource."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The current state of the AppGateway.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppGateway is being created.",
            "AppGateway has been created.",
            "AppGateway's configuration is being updated.",
            "AppGateway is being deleted.",
            "AppGateway is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Timestamp when the resource was last modified."
        }
      },
      "description": "A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway.",
      "type": "object"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "properties": {},
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "id": "GoogleLongrunningCancelOperationRequest"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "A list of locations that could not be reached.",
          "type": "array"
        },
        "appConnectors": {
          "type": "array",
          "description": "A list of BeyondCorp AppConnectors in the project.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectorsV1AppConnector"
          }
        }
      },
      "type": "object",
      "description": "Response message for BeyondCorp.ListAppConnectors.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse"
    },
    "GoogleTypeExpr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "GoogleTypeExpr",
      "type": "object",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      }
    },
    "CloudSecurityZerotrustApplinkAppConnectorProtoGateway": {
      "properties": {
        "interface": {
          "type": "string",
          "description": "interface specifies the network interface of the gateway to connect to."
        },
        "zone": {
          "type": "string",
          "description": "zone represents the zone the instance belongs. It is derived from the gateway URL. For example, zone=${zone} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}"
        },
        "port": {
          "description": "port specifies the port of the gateway for tunnel connections from the connectors.",
          "type": "integer",
          "format": "uint32"
        },
        "project": {
          "description": "project is the tenant project the gateway belongs to. Different from the project in the connection, it is a BeyondCorpAPI internally created project to manage all the gateways. It is sharing the same network with the consumer project user owned. It is derived from the gateway URL. For example, project=${project} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}",
          "type": "string"
        },
        "name": {
          "description": "name is the name of an instance running a gateway. It is the unique ID for a gateway. All gateways under the same connection have the same prefix. It is derived from the gateway URL. For example, name=${instance} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "self_link is the gateway URL in the form https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}"
        }
      },
      "type": "object",
      "id": "CloudSecurityZerotrustApplinkAppConnectorProtoGateway",
      "description": "Gateway represents a GCE VM Instance endpoint for use by IAP TCP."
    },
    "Egress": {
      "description": "The details of the egress info. One of the following options should be set.",
      "properties": {
        "peeredVpc": {
          "$ref": "PeeredVpc",
          "description": "A VPC from the consumer project."
        }
      },
      "id": "Egress",
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig": {
      "id": "GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig",
      "type": "object",
      "description": "NotificationConfig defines the mechanisms to notify instance agent.",
      "properties": {
        "pubsubNotification": {
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig",
          "description": "Cloud Pub/Sub Configuration to receive notifications."
        }
      }
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadata": {
      "type": "object",
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadata"
    },
    "ClientConnectorServiceOperationMetadata": {
      "id": "ClientConnectorServiceOperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetails": {
      "id": "GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetails",
      "description": "RemoteAgentDetails reflects the details of a remote agent.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudBeyondcorpConnectorsV1alphaRemoteAgentDetails": {
      "type": "object",
      "id": "GoogleCloudBeyondcorpConnectorsV1alphaRemoteAgentDetails",
      "description": "RemoteAgentDetails reflects the details of a remote agent.",
      "properties": {}
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty"
    },
    "GoogleCloudBeyondcorpClientgatewaysV1alphaClientGatewayOperationMetadata": {
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "id": "GoogleCloudBeyondcorpClientgatewaysV1alphaClientGatewayOperationMetadata",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClientConnectorService": {
      "type": "object",
      "description": "Message describing ClientConnectorService object.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "DELETING",
            "RUNNING",
            "DOWN",
            "ERROR"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "ClientConnectorService is being created.",
            "ClientConnectorService is being updated.",
            "ClientConnectorService is being deleted.",
            "ClientConnectorService is running.",
            "ClientConnectorService is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF.",
            "ClientConnectorService encountered an error and is in an indeterministic state."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The operational state of the ClientConnectorService."
        },
        "ingress": {
          "description": "Required. The details of the ingress settings.",
          "$ref": "Ingress"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "egress": {
          "$ref": "Egress",
          "description": "Required. The details of the egress settings."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. [Output only] Create time stamp.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. Name of resource. The name is ignored during creation."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30 characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start with a letter."
        }
      },
      "id": "ClientConnectorService"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo": {
      "id": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo",
      "properties": {
        "serviceAccount": {
          "description": "A GCP service account.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount"
        }
      },
      "type": "object",
      "description": "PrincipalInfo represents an Identity oneof."
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "id": "GoogleIamV1SetIamPolicyRequest",
      "type": "object"
    },
    "ListAppGatewaysResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "unreachable": {
          "type": "array",
          "description": "A list of locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "appGateways": {
          "type": "array",
          "items": {
            "$ref": "AppGateway"
          },
          "description": "A list of BeyondCorp AppGateways in the project."
        }
      },
      "type": "object",
      "id": "ListAppGatewaysResponse",
      "description": "Response message for BeyondCorp.ListAppGateways."
    },
    "Config": {
      "properties": {
        "destinationRoutes": {
          "type": "array",
          "description": "Required. The settings used to configure basic ClientGateways.",
          "items": {
            "$ref": "DestinationRoute"
          }
        },
        "transportProtocol": {
          "description": "Required. Immutable. The transport protocol used between the client and the server.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "TCP protocol."
          ],
          "type": "string",
          "enum": [
            "TRANSPORT_PROTOCOL_UNSPECIFIED",
            "TCP"
          ]
        }
      },
      "id": "Config",
      "type": "object",
      "description": "The basic ingress config for ClientGateways."
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object"
    },
    "GoogleCloudLocationLocation": {
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "GoogleCloudLocationLocation",
      "type": "object"
    },
    "GoogleIamV1AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      },
      "id": "GoogleIamV1AuditLogConfig",
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadata",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "description": "Represents the metadata of the long-running operation."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1ImageConfig": {
      "properties": {
        "stableImage": {
          "type": "string",
          "description": "The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1"
        },
        "targetImage": {
          "type": "string",
          "description": "The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1"
        }
      },
      "type": "object",
      "description": "ImageConfig defines the control plane images to run.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1ImageConfig"
    },
    "CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetails": {
      "type": "object",
      "description": "ConnectorDetails reflects the details of a connector.",
      "properties": {},
      "id": "CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetails"
    },
    "GoogleCloudBeyondcorpClientconnectorservicesV1alphaClientConnectorServiceOperationMetadata": {
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        }
      },
      "id": "GoogleCloudBeyondcorpClientconnectorservicesV1alphaClientConnectorServiceOperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation."
    },
    "GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails": {
      "type": "object",
      "properties": {
        "appConnection": {
          "$ref": "GoogleCloudBeyondcorpAppconnectionsV1AppConnection",
          "description": "A BeyondCorp AppConnection in the project."
        },
        "recentMigVms": {
          "type": "array",
          "description": "If type=GCP_REGIONAL_MIG, contains most recent VM instances, like `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone_id}/instances/{instance_id}`.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Details of the AppConnection.",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
    },
    "GoogleCloudBeyondcorpConnectorsV1alphaConnectorOperationMetadata": {
      "type": "object",
      "properties": {
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "id": "GoogleCloudBeyondcorpConnectorsV1alphaConnectorOperationMetadata",
      "description": "Represents the metadata of the long-running operation."
    },
    "CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetails": {
      "description": "LogAgentDetails reflects the details of a log agent.",
      "properties": {},
      "type": "object",
      "id": "CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetails"
    },
    "GoogleIamV1Binding": {
      "id": "GoogleIamV1Binding",
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "GoogleTypeExpr"
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig": {
      "properties": {
        "notificationConfig": {
          "description": "NotificationConfig defines the notification mechanism that the remote instance should subscribe to in order to receive notification.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig"
        },
        "imageConfig": {
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1ImageConfig",
          "description": "ImageConfig defines the GCR images to run for the remote agent's control plane."
        },
        "sequenceNumber": {
          "description": "Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change.",
          "format": "int64",
          "type": "string"
        },
        "instanceConfig": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The SLM instance agent configuration.",
          "type": "object"
        }
      },
      "id": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig",
      "type": "object",
      "description": "AppConnectorInstanceConfig defines the instance config of a AppConnector."
    },
    "GoogleCloudBeyondcorpConnectionsV1alphaConnectionOperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "id": "GoogleCloudBeyondcorpConnectionsV1alphaConnectionOperationMetadata",
      "properties": {
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudLocationListLocationsResponse": {
      "id": "GoogleCloudLocationListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetails": {
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetails",
      "description": "RemoteAgentDetails reflects the details of a remote agent.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudBeyondcorpConnectorsV1alphaContainerHealthDetails": {
      "properties": {
        "currentConfigVersion": {
          "description": "The version of the current config.",
          "type": "string"
        },
        "expectedConfigVersion": {
          "description": "The version of the expected config.",
          "type": "string"
        },
        "errorMsg": {
          "description": "The latest error message.",
          "type": "string"
        },
        "extendedStatus": {
          "type": "object",
          "description": "The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "ContainerHealthDetails reflects the health details of a container.",
      "id": "GoogleCloudBeyondcorpConnectorsV1alphaContainerHealthDetails",
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppgatewaysV1alphaAppGatewayOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppgatewaysV1alphaAppGatewayOperationMetadata",
      "properties": {
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        }
      },
      "description": "Represents the metadata of the long-running operation."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo": {
      "type": "object",
      "description": "ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo",
      "properties": {
        "id": {
          "description": "Required. Unique Id for the resource.",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "Health status is unknown: not initialized or failed to retrieve.",
            "The resource is healthy.",
            "The resource is unhealthy.",
            "The resource is unresponsive.",
            "Some sub-resources are UNHEALTHY."
          ],
          "enum": [
            "HEALTH_STATUS_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "UNRESPONSIVE",
            "DEGRADED"
          ],
          "type": "string",
          "description": "Overall health status. Overall status is derived based on the status of each sub level resources."
        },
        "time": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp to collect the info. It is suggested to be set by the topmost level resource only."
        },
        "sub": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo"
          },
          "description": "List of Info for the sub level resources."
        },
        "resource": {
          "description": "Specific details for the resource. This is for internal use only.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      }
    },
    "PeeredVpc": {
      "id": "PeeredVpc",
      "description": "The peered VPC owned by the consumer project.",
      "type": "object",
      "properties": {
        "networkVpc": {
          "description": "Required. The name of the peered VPC owned by the consumer project.",
          "type": "string"
        }
      }
    },
    "ClientGateway": {
      "properties": {
        "clientConnectorService": {
          "type": "string",
          "description": "Output only. The client connector service name that the client gateway is associated to. Client Connector Services, named as follows: `projects/{project_id}/locations/{location_id}/client_connector_services/{client_connector_service_id}`.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Gateway is being created.",
            "Gateway is being updated.",
            "Gateway is being deleted.",
            "Gateway is running.",
            "Gateway is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF.",
            "ClientGateway encountered an error and is in indeterministic state."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "DELETING",
            "RUNNING",
            "DOWN",
            "ERROR"
          ],
          "readOnly": true,
          "description": "Output only. The operational state of the gateway."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. [Output only] Update time stamp.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A unique identifier for the instance generated by the system."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. [Output only] Create time stamp."
        },
        "name": {
          "description": "Required. name of resource. The name is ignored during creation.",
          "type": "string"
        }
      },
      "description": "Message describing ClientGateway object.",
      "type": "object",
      "id": "ClientGateway"
    },
    "GoogleIamV1AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        }
      },
      "id": "GoogleIamV1AuditConfig",
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse": {
      "id": "GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse",
      "description": "Response message for BeyondCorp.ListAppConnections.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "appConnections": {
          "description": "A list of BeyondCorp AppConnections in the project.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectionsV1AppConnection"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations that could not be reached."
        }
      }
    },
    "CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig": {
      "type": "object",
      "description": "ConnectionConfig represents a Connection Configuration object.",
      "id": "CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig",
      "properties": {
        "userPort": {
          "format": "int32",
          "description": "user_port specifies the reserved port on gateways for user connections.",
          "type": "integer"
        },
        "applicationEndpoint": {
          "type": "string",
          "description": "application_endpoint is the endpoint of the application the form of host:port. For example, \"localhost:80\"."
        },
        "project": {
          "description": "project represents the consumer project the connection belongs to.",
          "type": "string"
        },
        "applicationName": {
          "description": "application_name represents the given name of the application the connection is connecting with.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-specified name in config. Now, name = ${application_name}:${application_endpoint}"
        },
        "tunnelsPerGateway": {
          "description": "tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.",
          "format": "uint32",
          "type": "integer"
        },
        "gateway": {
          "items": {
            "$ref": "CloudSecurityZerotrustApplinkAppConnectorProtoGateway"
          },
          "type": "array",
          "description": "gateway lists all instances running a gateway in GCP. They all connect to a connector on the host."
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse": {
      "description": "Response message for BeyondCorp.ResolveInstanceConfig.",
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse",
      "properties": {
        "instanceConfig": {
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorInstanceConfig",
          "description": "AppConnectorInstanceConfig."
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetails": {
      "type": "object",
      "properties": {
        "extendedStatus": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.",
          "type": "object"
        },
        "errorMsg": {
          "type": "string",
          "description": "The latest error message."
        },
        "expectedConfigVersion": {
          "description": "The version of the expected config.",
          "type": "string"
        },
        "currentConfigVersion": {
          "description": "The version of the current config.",
          "type": "string"
        }
      },
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetails",
      "description": "ContainerHealthDetails reflects the health details of a container."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig": {
      "type": "object",
      "properties": {
        "pubsubSubscription": {
          "description": "The Pub/Sub subscription the AppConnector uses to receive notifications.",
          "type": "string"
        }
      },
      "id": "GoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig",
      "description": "The configuration for Pub/Sub messaging for the AppConnector."
    },
    "GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse": {
      "id": "GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "A list of locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "appConnectionDetails": {
          "type": "array",
          "description": "A list of BeyondCorp AppConnections with details in the project.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponseAppConnectionDetails"
          }
        }
      },
      "description": "Response message for BeyondCorp.ResolveAppConnections.",
      "type": "object"
    },
    "Ingress": {
      "id": "Ingress",
      "description": "Settings of how to connect to the ClientGateway. One of the following options should be set.",
      "type": "object",
      "properties": {
        "config": {
          "description": "The basic ingress config for ClientGateways.",
          "$ref": "Config"
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetails": {
      "description": "ContainerHealthDetails reflects the health details of a container.",
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetails",
      "properties": {
        "expectedConfigVersion": {
          "description": "The version of the expected config.",
          "type": "string"
        },
        "extendedStatus": {
          "type": "object",
          "description": "The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorMsg": {
          "type": "string",
          "description": "The latest error message."
        },
        "currentConfigVersion": {
          "description": "The version of the current config.",
          "type": "string"
        }
      }
    },
    "Tunnelv1ProtoTunnelerError": {
      "id": "Tunnelv1ProtoTunnelerError",
      "description": "TunnelerError is an error proto for errors returned by the connection manager.",
      "type": "object",
      "properties": {
        "err": {
          "type": "string",
          "description": "Original raw error"
        },
        "retryable": {
          "description": "retryable isn't used for now, but we may want to reuse it in the future.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest": {
      "description": "Request report the connector status.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest",
      "type": "object",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
        },
        "resourceInfo": {
          "description": "Required. Resource info of the connector.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    }
  },
  "id": "beyondcorp:v1",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "rootUrl": "https://beyondcorp.googleapis.com/",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20221019",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": ""
}
