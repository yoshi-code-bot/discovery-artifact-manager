{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "documentationLink": "https://developers.google.com/android-publisher",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/androidpublisher": {
          "description": "View and manage your Google Play Developer account"
        }
      }
    }
  },
  "mtlsRootUrl": "https://androidpublisher.mtls.googleapis.com/",
  "resources": {
    "generatedapks": {
      "methods": {
        "list": {
          "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "GET",
          "id": "androidpublisher.generatedapks.list",
          "description": "Returns download metadata for all APKs that were generated from a given app bundle.",
          "response": {
            "$ref": "GeneratedApksListResponse"
          },
          "parameters": {
            "packageName": {
              "description": "Package name of the app.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "versionCode": {
              "description": "Version code of the app bundle.",
              "format": "int32",
              "type": "integer",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}",
          "parameterOrder": [
            "packageName",
            "versionCode"
          ]
        },
        "download": {
          "id": "androidpublisher.generatedapks.download",
          "httpMethod": "GET",
          "parameterOrder": [
            "packageName",
            "versionCode",
            "downloadId"
          ],
          "description": "Downloads a single signed APK generated from an app bundle.",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "packageName": {
              "required": true,
              "type": "string",
              "description": "Package name of the app.",
              "location": "path"
            },
            "downloadId": {
              "description": "Download ID, which uniquely identifies the APK to download. Can be obtained from the response of `generatedapks.list` method.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "versionCode": {
              "format": "int32",
              "location": "path",
              "required": true,
              "type": "integer",
              "description": "Version code of the app bundle."
            }
          },
          "useMediaDownloadService": true,
          "supportsMediaDownload": true,
          "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download",
          "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download"
        }
      }
    },
    "grants": {
      "methods": {
        "patch": {
          "request": {
            "$ref": "Grant"
          },
          "id": "androidpublisher.grants.patch",
          "response": {
            "$ref": "Grant"
          },
          "httpMethod": "PATCH",
          "description": "Updates access for the user to the given package.",
          "path": "androidpublisher/v3/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "location": "query",
              "type": "string",
              "description": "Optional. The list of fields to be updated."
            },
            "name": {
              "type": "string",
              "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$",
              "location": "path",
              "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.",
              "required": true
            }
          },
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}",
          "parameterOrder": [
            "name"
          ]
        },
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "description": "Removes all access for the user to the given package or developer account.",
          "path": "androidpublisher/v3/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the grant to delete. Format: developers/{developer}/users/{email}/grants/{package_name}",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$"
            }
          },
          "id": "androidpublisher.grants.delete",
          "httpMethod": "DELETE",
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}"
        },
        "create": {
          "description": "Grant access for a user to the given package.",
          "parameters": {
            "parent": {
              "description": "Required. The user which needs permission. Format: developers/{developer}/users/{user}",
              "required": true,
              "pattern": "^developers/[^/]+/users/[^/]+$",
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "id": "androidpublisher.grants.create",
          "request": {
            "$ref": "Grant"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "Grant"
          },
          "path": "androidpublisher/v3/{+parent}/grants",
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants"
        }
      }
    },
    "systemapks": {
      "resources": {
        "variants": {
          "methods": {
            "list": {
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app."
                },
                "versionCode": {
                  "description": "The version code of the App Bundle.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "format": "int64"
                }
              },
              "response": {
                "$ref": "SystemApksListResponse"
              },
              "description": "Returns the list of previously created system APK variants.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "httpMethod": "GET",
              "id": "androidpublisher.systemapks.variants.list",
              "parameterOrder": [
                "packageName",
                "versionCode"
              ]
            },
            "download": {
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download",
              "id": "androidpublisher.systemapks.variants.download",
              "useMediaDownloadService": true,
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download",
              "description": "Downloads a previously created system APK which is suitable for inclusion in a system image.",
              "supportsMediaDownload": true,
              "parameterOrder": [
                "packageName",
                "versionCode",
                "variantId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "versionCode": {
                  "location": "path",
                  "required": true,
                  "format": "int64",
                  "description": "The version code of the App Bundle.",
                  "type": "string"
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true
                },
                "variantId": {
                  "location": "path",
                  "format": "uint32",
                  "type": "integer",
                  "description": "The ID of a previously created system APK variant.",
                  "required": true
                }
              }
            },
            "create": {
              "response": {
                "$ref": "Variant"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "id": "androidpublisher.systemapks.variants.create",
              "request": {
                "$ref": "Variant"
              },
              "parameters": {
                "versionCode": {
                  "description": "The version code of the App Bundle.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "format": "int64"
                },
                "packageName": {
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "parameterOrder": [
                "packageName",
                "versionCode"
              ],
              "description": "Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle."
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "packageName",
                "versionCode",
                "variantId"
              ],
              "response": {
                "$ref": "Variant"
              },
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}",
              "id": "androidpublisher.systemapks.variants.get",
              "parameters": {
                "packageName": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app."
                },
                "variantId": {
                  "required": true,
                  "format": "uint32",
                  "location": "path",
                  "type": "integer",
                  "description": "The ID of a previously created system APK variant."
                },
                "versionCode": {
                  "format": "int64",
                  "type": "string",
                  "description": "The version code of the App Bundle.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Returns a previously created system APK variant."
            }
          }
        }
      }
    },
    "applications": {
      "resources": {
        "deviceTierConfigs": {
          "methods": {
            "get": {
              "parameterOrder": [
                "packageName",
                "deviceTierConfigId"
              ],
              "id": "androidpublisher.applications.deviceTierConfigs.get",
              "description": "Returns a particular device tier config.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}",
              "response": {
                "$ref": "DeviceTierConfig"
              },
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}",
              "parameters": {
                "deviceTierConfigId": {
                  "required": true,
                  "format": "int64",
                  "description": "Required. Id of an existing device tier config.",
                  "type": "string",
                  "location": "path"
                },
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "create": {
              "id": "androidpublisher.applications.deviceTierConfigs.create",
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "parameters": {
                "packageName": {
                  "type": "string",
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path"
                },
                "allowUnknownDevices": {
                  "type": "boolean",
                  "description": "Whether the service should accept device IDs that are unknown to Play's device catalog.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "packageName"
              ],
              "response": {
                "$ref": "DeviceTierConfig"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "request": {
                "$ref": "DeviceTierConfig"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Creates a new device tier config for an app."
            },
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ListDeviceTierConfigsResponse"
              },
              "parameterOrder": [
                "packageName"
              ],
              "description": "Returns created device tier configs, ordered by descending creation time.",
              "id": "androidpublisher.applications.deviceTierConfigs.list",
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of device tier configs to return. The service may return fewer than this value. If unspecified, at most 10 device tier configs will be returned. The maximum value for this field is 100; values above 100 will be coerced to 100. Device tier configs will be ordered by descending creation time."
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token, received from a previous `ListDeviceTierConfigs` call. Provide this to retrieve the subsequent page.",
                  "location": "query"
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs"
            }
          }
        }
      }
    },
    "internalappsharingartifacts": {
      "methods": {
        "uploadbundle": {
          "response": {
            "$ref": "InternalAppSharingArtifact"
          },
          "supportsMediaUpload": true,
          "id": "androidpublisher.internalappsharingartifacts.uploadbundle",
          "parameters": {
            "packageName": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Package name of the app."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "packageName"
          ],
          "httpMethod": "POST",
          "description": "Uploads an app bundle to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.",
          "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
          "mediaUpload": {
            "maxSize": "10737418240",
            "accept": [
              "application/octet-stream"
            ],
            "protocols": {
              "resumable": {
                "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
                "multipart": true
              },
              "simple": {
                "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
                "multipart": true
              }
            }
          },
          "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle"
        },
        "uploadapk": {
          "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
          "description": "Uploads an APK to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.",
          "response": {
            "$ref": "InternalAppSharingArtifact"
          },
          "parameters": {
            "packageName": {
              "location": "path",
              "type": "string",
              "description": "Package name of the app.",
              "required": true
            }
          },
          "mediaUpload": {
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk"
              },
              "resumable": {
                "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
                "multipart": true
              }
            },
            "accept": [
              "application/octet-stream",
              "application/vnd.android.package-archive"
            ],
            "maxSize": "1073741824"
          },
          "id": "androidpublisher.internalappsharingartifacts.uploadapk",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
          "parameterOrder": [
            "packageName"
          ],
          "supportsMediaUpload": true,
          "httpMethod": "POST"
        }
      }
    },
    "users": {
      "methods": {
        "create": {
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "POST",
          "path": "androidpublisher/v3/{+parent}/users",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "request": {
            "$ref": "User"
          },
          "description": "Grant access for a user to the given developer account.",
          "response": {
            "$ref": "User"
          },
          "parameters": {
            "parent": {
              "location": "path",
              "description": "Required. The developer account to add the user to. Format: developers/{developer}",
              "required": true,
              "pattern": "^developers/[^/]+$",
              "type": "string"
            }
          },
          "flatPath": "androidpublisher/v3/developers/{developersId}/users",
          "id": "androidpublisher.users.create"
        },
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^developers/[^/]+/users/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The name of the user to delete. Format: developers/{developer}/users/{email}"
            }
          },
          "description": "Removes all access for the user to the given developer account.",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}",
          "path": "androidpublisher/v3/{+name}",
          "id": "androidpublisher.users.delete"
        },
        "list": {
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "required": true,
              "description": "Required. The developer account to fetch users from. Format: developers/{developer}",
              "location": "path",
              "type": "string",
              "pattern": "^developers/[^/]+$"
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "description": "The maximum number of results to return. This must be set to -1 to disable pagination.",
              "type": "integer"
            },
            "pageToken": {
              "location": "query",
              "description": "A token received from a previous call to this method, in order to retrieve further results.",
              "type": "string"
            }
          },
          "path": "androidpublisher/v3/{+parent}/users",
          "httpMethod": "GET",
          "flatPath": "androidpublisher/v3/developers/{developersId}/users",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "ListUsersResponse"
          },
          "description": "Lists all users with access to a developer account.",
          "id": "androidpublisher.users.list"
        },
        "patch": {
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}",
          "path": "androidpublisher/v3/{+name}",
          "response": {
            "$ref": "User"
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Updates access for the user to the developer account.",
          "request": {
            "$ref": "User"
          },
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "description": "Optional. The list of fields to be updated.",
              "location": "query"
            },
            "name": {
              "location": "path",
              "pattern": "^developers/[^/]+/users/[^/]+$",
              "required": true,
              "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".",
              "type": "string"
            }
          },
          "id": "androidpublisher.users.patch",
          "httpMethod": "PATCH"
        }
      }
    },
    "purchases": {
      "resources": {
        "subscriptions": {
          "methods": {
            "revoke": {
              "description": "Refunds and immediately revokes a user's subscription purchase. Access to the subscription will be terminated immediately and it will stop recurring.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "id": "androidpublisher.purchases.subscriptions.revoke",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "parameters": {
                "packageName": {
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "token": {
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string",
                  "location": "path"
                },
                "subscriptionId": {
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "refund": {
              "httpMethod": "POST",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund",
              "parameters": {
                "subscriptionId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "\"The purchased subscription ID (for example, 'monthly001')."
                },
                "packageName": {
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "token": {
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund",
              "id": "androidpublisher.purchases.subscriptions.refund",
              "description": "Refunds a user's subscription purchase, but the subscription remains valid until its expiration time and it will continue to recur.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "acknowledge": {
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "parameters": {
                "packageName": {
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "subscriptionId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The purchased subscription ID (for example, 'monthly001')."
                },
                "token": {
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "request": {
                "$ref": "SubscriptionPurchasesAcknowledgeRequest"
              },
              "id": "androidpublisher.purchases.subscriptions.acknowledge",
              "description": "Acknowledges a subscription purchase.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ]
            },
            "defer": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "SubscriptionPurchasesDeferResponse"
              },
              "request": {
                "$ref": "SubscriptionPurchasesDeferRequest"
              },
              "httpMethod": "POST",
              "id": "androidpublisher.purchases.subscriptions.defer",
              "parameters": {
                "subscriptionId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The purchased subscription ID (for example, 'monthly001')."
                },
                "packageName": {
                  "required": true,
                  "location": "path",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string"
                },
                "token": {
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "description": "Defers a user's subscription purchase until a specified future expiration time.",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer"
            },
            "cancel": {
              "httpMethod": "POST",
              "description": "Cancels a user's subscription purchase. The subscription remains valid until its expiration time.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "id": "androidpublisher.purchases.subscriptions.cancel",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel",
              "parameters": {
                "subscriptionId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The purchased subscription ID (for example, 'monthly001')."
                },
                "token": {
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string",
                  "location": "path"
                },
                "packageName": {
                  "required": true,
                  "location": "path",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}",
              "description": "Checks whether a user's subscription purchase is valid and returns its expiry time.",
              "id": "androidpublisher.purchases.subscriptions.get",
              "parameters": {
                "subscriptionId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The purchased subscription ID (for example, 'monthly001')."
                },
                "token": {
                  "type": "string",
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "location": "path"
                },
                "packageName": {
                  "required": true,
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}",
              "response": {
                "$ref": "SubscriptionPurchase"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ]
            }
          }
        },
        "subscriptionsv2": {
          "methods": {
            "get": {
              "description": "Get metadata about a subscription",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptionsv2/tokens/{token}",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptionsv2/tokens/{token}",
              "httpMethod": "GET",
              "parameters": {
                "packageName": {
                  "description": "The package of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "token": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The token provided to the user's device when the subscription was purchased.",
                  "type": "string"
                }
              },
              "id": "androidpublisher.purchases.subscriptionsv2.get",
              "response": {
                "$ref": "SubscriptionPurchaseV2"
              },
              "parameterOrder": [
                "packageName",
                "token"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            }
          }
        },
        "voidedpurchases": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.purchases.voidedpurchases.list",
              "response": {
                "$ref": "VoidedPurchasesListResponse"
              },
              "parameters": {
                "endTime": {
                  "type": "string",
                  "format": "int64",
                  "location": "query",
                  "description": "The time, in milliseconds since the Epoch, of the newest voided purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response."
                },
                "packageName": {
                  "description": "The package name of the application for which voided purchases need to be returned (for example, 'com.some.thing').",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "startTime": {
                  "type": "string",
                  "location": "query",
                  "description": "The time, in milliseconds since the Epoch, of the oldest voided purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.",
                  "format": "int64"
                },
                "type": {
                  "type": "integer",
                  "description": "The type of voided purchases that you want to see in the response. Possible values are: 0. Only voided in-app product purchases will be returned in the response. This is the default value. 1. Both voided in-app purchases and voided subscription purchases will be returned in the response. Note: Before requesting to receive voided subscription purchases, you must switch to use orderId in the response which uniquely identifies one-time purchases and subscriptions. Otherwise, you will receive multiple subscription orders with the same PurchaseToken, because subscription renewal orders share the same PurchaseToken.",
                  "location": "query",
                  "format": "int32"
                },
                "token": {
                  "description": "Defines the token of the page to return, usually taken from TokenPagination. This can only be used if token paging is enabled.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "format": "uint32",
                  "description": "Defines how many results the list operation should return. The default number depends on the resource collection.",
                  "location": "query",
                  "type": "integer"
                },
                "startIndex": {
                  "format": "uint32",
                  "description": "Defines the index of the first element to return. This can only be used if indexed paging is enabled.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "packageName"
              ],
              "description": "Lists the purchases that were canceled, refunded or charged-back.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases"
            }
          }
        },
        "products": {
          "methods": {
            "acknowledge": {
              "parameterOrder": [
                "packageName",
                "productId",
                "token"
              ],
              "description": "Acknowledges a purchase of an inapp item.",
              "id": "androidpublisher.purchases.products.acknowledge",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge",
              "parameters": {
                "productId": {
                  "location": "path",
                  "type": "string",
                  "description": "The inapp product SKU (for example, 'com.some.thing.inapp1').",
                  "required": true
                },
                "token": {
                  "description": "The token provided to the user's device when the inapp product was purchased.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "request": {
                "$ref": "ProductPurchasesAcknowledgeRequest"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge",
              "httpMethod": "POST"
            },
            "get": {
              "parameters": {
                "productId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The inapp product SKU (for example, 'com.some.thing.inapp1')."
                },
                "packageName": {
                  "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "token": {
                  "location": "path",
                  "type": "string",
                  "description": "The token provided to the user's device when the inapp product was purchased.",
                  "required": true
                }
              },
              "parameterOrder": [
                "packageName",
                "productId",
                "token"
              ],
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}",
              "description": "Checks the purchase and consumption status of an inapp item.",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}",
              "id": "androidpublisher.purchases.products.get",
              "response": {
                "$ref": "ProductPurchase"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            }
          }
        }
      }
    },
    "reviews": {
      "methods": {
        "reply": {
          "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply",
          "response": {
            "$ref": "ReviewsReplyResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply",
          "id": "androidpublisher.reviews.reply",
          "parameterOrder": [
            "packageName",
            "reviewId"
          ],
          "parameters": {
            "packageName": {
              "description": "Package name of the app.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "reviewId": {
              "location": "path",
              "type": "string",
              "description": "Unique identifier for a review.",
              "required": true
            }
          },
          "request": {
            "$ref": "ReviewsReplyRequest"
          },
          "httpMethod": "POST",
          "description": "Replies to a single review, or updates an existing reply."
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "GET",
          "parameters": {
            "translationLanguage": {
              "type": "string",
              "location": "query",
              "description": "Language localization code."
            },
            "token": {
              "description": "Pagination token. If empty, list starts at the first review.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "description": "How many results the list operation should return.",
              "type": "integer",
              "format": "uint32",
              "location": "query"
            },
            "startIndex": {
              "type": "integer",
              "location": "query",
              "format": "uint32",
              "description": "The index of the first element to return."
            },
            "packageName": {
              "description": "Package name of the app.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "androidpublisher/v3/applications/{packageName}/reviews",
          "parameterOrder": [
            "packageName"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews",
          "id": "androidpublisher.reviews.list",
          "response": {
            "$ref": "ReviewsListResponse"
          },
          "description": "Lists all reviews."
        },
        "get": {
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}",
          "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}",
          "description": "Gets a single review.",
          "parameters": {
            "reviewId": {
              "description": "Unique identifier for a review.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "type": "string",
              "required": true
            },
            "translationLanguage": {
              "description": "Language localization code.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Review"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.reviews.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "packageName",
            "reviewId"
          ]
        }
      }
    },
    "orders": {
      "methods": {
        "refund": {
          "parameters": {
            "revoke": {
              "description": "Whether to revoke the purchased item. If set to true, access to the subscription or in-app item will be terminated immediately. If the item is a recurring subscription, all future payments will also be terminated. Consumed in-app items need to be handled by developer's app. (optional).",
              "location": "query",
              "type": "boolean"
            },
            "orderId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The order ID provided to the user when the subscription or in-app order was purchased."
            },
            "packageName": {
              "type": "string",
              "description": "The package name of the application for which this subscription or in-app item was purchased (for example, 'com.some.thing').",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "packageName",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Refunds a user's subscription or in-app purchase order. Orders older than 1 year cannot be refunded.",
          "path": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund",
          "httpMethod": "POST",
          "flatPath": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund",
          "id": "androidpublisher.orders.refund"
        }
      }
    },
    "inappproducts": {
      "methods": {
        "list": {
          "response": {
            "$ref": "InappproductsListResponse"
          },
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "id": "androidpublisher.inappproducts.list",
          "parameters": {
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "Deprecated and ignored. The page size is determined by the server.",
              "format": "uint32"
            },
            "packageName": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Package name of the app."
            },
            "startIndex": {
              "type": "integer",
              "format": "uint32",
              "description": "Deprecated and ignored. Set the `token` parameter to rertieve the next page.",
              "location": "query"
            },
            "token": {
              "location": "query",
              "type": "string",
              "description": "Pagination token. If empty, list starts at the first product."
            }
          },
          "httpMethod": "GET",
          "description": "Lists all in-app products - both managed products and subscriptions. If an app has a large number of in-app products, the response may be paginated. In this case the response field `tokenPagination.nextPageToken` will be set and the caller should provide its value as a `token` request parameter to retrieve the next page.",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "packageName"
          ]
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Deletes an in-app product (i.e. a managed product or a subscriptions).",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "parameters": {
            "packageName": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Package name of the app."
            },
            "sku": {
              "location": "path",
              "description": "Unique identifier for the in-app product.",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "id": "androidpublisher.inappproducts.delete",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "parameterOrder": [
            "packageName",
            "sku"
          ]
        },
        "patch": {
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "response": {
            "$ref": "InAppProduct"
          },
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "PATCH",
          "description": "Patches an in-app product (i.e. a managed product or a subscriptions).",
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "parameters": {
            "sku": {
              "description": "Unique identifier for the in-app product.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "packageName": {
              "required": true,
              "location": "path",
              "description": "Package name of the app.",
              "type": "string"
            },
            "autoConvertMissingPrices": {
              "location": "query",
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.",
              "type": "boolean"
            }
          },
          "request": {
            "$ref": "InAppProduct"
          },
          "id": "androidpublisher.inappproducts.patch"
        },
        "insert": {
          "request": {
            "$ref": "InAppProduct"
          },
          "parameterOrder": [
            "packageName"
          ],
          "description": "Creates an in-app product (i.e. a managed product or a subscriptions).",
          "response": {
            "$ref": "InAppProduct"
          },
          "httpMethod": "POST",
          "id": "androidpublisher.inappproducts.insert",
          "parameters": {
            "packageName": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Package name of the app."
            },
            "autoConvertMissingPrices": {
              "type": "boolean",
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.",
              "location": "query"
            }
          },
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts"
        },
        "get": {
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "description": "Gets an in-app product, which can be a managed product or a subscription.",
          "httpMethod": "GET",
          "id": "androidpublisher.inappproducts.get",
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "InAppProduct"
          },
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "parameters": {
            "sku": {
              "description": "Unique identifier for the in-app product.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "packageName": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Package name of the app."
            }
          }
        },
        "update": {
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "description": "Updates an in-app product (i.e. a managed product or a subscriptions).",
          "request": {
            "$ref": "InAppProduct"
          },
          "id": "androidpublisher.inappproducts.update",
          "parameters": {
            "autoConvertMissingPrices": {
              "type": "boolean",
              "location": "query",
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false."
            },
            "sku": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Unique identifier for the in-app product."
            },
            "allowMissing": {
              "description": "If set to true, and the in-app product with the given package_name and sku doesn't exist, the in-app product will be created.",
              "type": "boolean",
              "location": "query"
            },
            "packageName": {
              "required": true,
              "description": "Package name of the app.",
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "InAppProduct"
          },
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "httpMethod": "PUT",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}"
        }
      }
    },
    "monetization": {
      "methods": {
        "convertRegionPrices": {
          "parameters": {
            "packageName": {
              "description": "Required. The app package name.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "POST",
          "description": "Calculates the region prices, using today's exchange rate and country-specific pricing patterns, based on the price in the request for a set of regions.",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices",
          "request": {
            "$ref": "ConvertRegionPricesRequest"
          },
          "id": "androidpublisher.monetization.convertRegionPrices",
          "parameterOrder": [
            "packageName"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices",
          "response": {
            "$ref": "ConvertRegionPricesResponse"
          }
        }
      },
      "resources": {
        "subscriptions": {
          "resources": {
            "basePlans": {
              "resources": {
                "offers": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "description": "A page token, received from a previous `ListSubscriptionsOffers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptionOffers` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "basePlanId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent base plan (ID) for which the offers should be read. May be specified as '-' to read all offers under a subscription.",
                          "type": "string"
                        },
                        "packageName": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent app (package name) for which the subscriptions should be read.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "productId": {
                          "type": "string",
                          "description": "Required. The parent subscription (ID) for which the offers should be read.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "description": "Lists all offers under a given subscription.",
                      "httpMethod": "GET",
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.list",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "response": {
                        "$ref": "ListSubscriptionOffersResponse"
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "SubscriptionOffer"
                      },
                      "description": "Creates a new subscription offer. Only auto-renewing base plans can have subscription offers. The offer state will be DRAFT until it is activated.",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.create",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "parameters": {
                        "regionsVersion.version": {
                          "location": "query",
                          "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01.",
                          "type": "string"
                        },
                        "offerId": {
                          "description": "Required. The ID to use for the offer. For the requirements on this format, see the documentation of the offer_id field on the SubscriptionOffer resource.",
                          "location": "query",
                          "type": "string"
                        },
                        "basePlanId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent base plan (ID) for which the offer should be created. Must be equal to the base_plan_id field on the SubscriptionOffer resource."
                        },
                        "productId": {
                          "description": "Required. The parent subscription (ID) for which the offer should be created. Must be equal to the product_id field on the SubscriptionOffer resource.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "packageName": {
                          "required": true,
                          "description": "Required. The parent app (package name) for which the offer should be created. Must be equal to the package_name field on the Subscription resource.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId"
                      ]
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "description": "Deletes a subscription offer. Can only be done for draft offers. This action is irreversible.",
                      "parameters": {
                        "productId": {
                          "description": "Required. The parent subscription (ID) of the offer to delete.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "basePlanId": {
                          "required": true,
                          "description": "Required. The parent base plan (ID) of the offer to delete.",
                          "type": "string",
                          "location": "path"
                        },
                        "packageName": {
                          "description": "Required. The parent app (package name) of the offer to delete.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "offerId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The unique offer ID of the offer to delete.",
                          "type": "string"
                        }
                      },
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.delete",
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}"
                    },
                    "get": {
                      "description": "Reads a single offer",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.get",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "parameters": {
                        "offerId": {
                          "description": "Required. The unique offer ID of the offer to get.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "basePlanId": {
                          "description": "Required. The parent base plan (ID) of the offer to get.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "productId": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The parent subscription (ID) of the offer to get.",
                          "type": "string"
                        },
                        "packageName": {
                          "location": "path",
                          "description": "Required. The parent app (package name) of the offer to get.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "response": {
                        "$ref": "SubscriptionOffer"
                      }
                    },
                    "activate": {
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:activate",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:activate",
                      "description": "Activates a subscription offer. Once activated, subscription offers will be available to new subscribers.",
                      "request": {
                        "$ref": "ActivateSubscriptionOfferRequest"
                      },
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.activate",
                      "parameters": {
                        "packageName": {
                          "description": "Required. The parent app (package name) of the offer to activate.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "basePlanId": {
                          "type": "string",
                          "description": "Required. The parent base plan (ID) of the offer to activate.",
                          "required": true,
                          "location": "path"
                        },
                        "productId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent subscription (ID) of the offer to activate."
                        },
                        "offerId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The unique offer ID of the offer to activate.",
                          "type": "string"
                        }
                      }
                    },
                    "patch": {
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "request": {
                        "$ref": "SubscriptionOffer"
                      },
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.patch",
                      "description": "Updates an existing subscription offer.",
                      "parameters": {
                        "packageName": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Immutable. The package name of the app the parent subscription belongs to."
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "Required. The list of fields to be updated.",
                          "location": "query"
                        },
                        "basePlanId": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Immutable. The ID of the base plan to which this offer is an extension."
                        },
                        "productId": {
                          "type": "string",
                          "description": "Required. Immutable. The ID of the parent subscription this offer belongs to.",
                          "required": true,
                          "location": "path"
                        },
                        "offerId": {
                          "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "regionsVersion.version": {
                          "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01.",
                          "type": "string",
                          "location": "query"
                        }
                      }
                    },
                    "deactivate": {
                      "description": "Deactivates a subscription offer. Once deactivated, existing subscribers will maintain their subscription, but the offer will become unavailable to new subscribers.",
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "parameters": {
                        "basePlanId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent base plan (ID) of the offer to deactivate.",
                          "type": "string"
                        },
                        "productId": {
                          "location": "path",
                          "description": "Required. The parent subscription (ID) of the offer to deactivate.",
                          "required": true,
                          "type": "string"
                        },
                        "offerId": {
                          "location": "path",
                          "description": "Required. The unique offer ID of the offer to deactivate.",
                          "required": true,
                          "type": "string"
                        },
                        "packageName": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent app (package name) of the offer to deactivate.",
                          "location": "path"
                        }
                      },
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.deactivate",
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:deactivate",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:deactivate",
                      "request": {
                        "$ref": "DeactivateSubscriptionOfferRequest"
                      }
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}",
                  "parameters": {
                    "packageName": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent app (package name) of the base plan to delete."
                    },
                    "basePlanId": {
                      "description": "Required. The unique offer ID of the base plan to delete.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "productId": {
                      "description": "Required. The parent subscription (ID) of the base plan to delete.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a base plan. Can only be done for draft base plans. This action is irreversible.",
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}",
                  "id": "androidpublisher.monetization.subscriptions.basePlans.delete"
                },
                "activate": {
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "response": {
                    "$ref": "Subscription"
                  },
                  "id": "androidpublisher.monetization.subscriptions.basePlans.activate",
                  "httpMethod": "POST",
                  "description": "Activates a base plan. Once activated, base plans will be available to new subscribers.",
                  "request": {
                    "$ref": "ActivateBasePlanRequest"
                  },
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:activate",
                  "parameters": {
                    "basePlanId": {
                      "location": "path",
                      "description": "Required. The unique base plan ID of the base plan to activate.",
                      "required": true,
                      "type": "string"
                    },
                    "packageName": {
                      "description": "Required. The parent app (package name) of the base plan to activate.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "productId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent subscription (ID) of the base plan to activate."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ],
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:activate"
                },
                "deactivate": {
                  "parameters": {
                    "productId": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent subscription (ID) of the base plan to deactivate.",
                      "location": "path"
                    },
                    "basePlanId": {
                      "location": "path",
                      "description": "Required. The unique base plan ID of the base plan to deactivate.",
                      "type": "string",
                      "required": true
                    },
                    "packageName": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent app (package name) of the base plan to deactivate."
                    }
                  },
                  "response": {
                    "$ref": "Subscription"
                  },
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "DeactivateBasePlanRequest"
                  },
                  "description": "Deactivates a base plan. Once deactivated, the base plan will become unavailable to new subscribers, but existing subscribers will maintain their subscription",
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ],
                  "id": "androidpublisher.monetization.subscriptions.basePlans.deactivate",
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:deactivate",
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:deactivate"
                },
                "migratePrices": {
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:migratePrices",
                  "parameters": {
                    "basePlanId": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The unique base plan ID of the base plan to update prices on."
                    },
                    "productId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The ID of the subscription to update. Must be equal to the product_id field on the Subscription resource.",
                      "required": true
                    },
                    "packageName": {
                      "required": true,
                      "description": "Required. Package name of the parent app. Must be equal to the package_name field on the Subscription resource.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "MigrateBasePlanPricesRequest"
                  },
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:migratePrices",
                  "description": "Migrates subscribers who are receiving an historical subscription price to the currently-offered price for the specified region. Requests will cause price change notifications to be sent to users who are currently receiving an historical price older than the supplied timestamp. Subscribers who do not agree to the new price will have their subscription ended at the next renewal.",
                  "id": "androidpublisher.monetization.subscriptions.basePlans.migratePrices",
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "MigrateBasePlanPricesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ]
                }
              }
            }
          },
          "methods": {
            "delete": {
              "description": "Deletes a subscription. A subscription can only be deleted if it has never had a base plan published.",
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "parameters": {
                "productId": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The unique product ID of the subscription to delete.",
                  "required": true
                },
                "packageName": {
                  "description": "Required. The parent app (package name) of the app of the subscription to delete.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.monetization.subscriptions.delete",
              "parameterOrder": [
                "packageName",
                "productId"
              ]
            },
            "list": {
              "id": "androidpublisher.monetization.subscriptions.list",
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions",
              "parameterOrder": [
                "packageName"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Lists all subscriptions under a given app.",
              "httpMethod": "GET",
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions",
              "parameters": {
                "pageToken": {
                  "description": "A page token, received from a previous `ListSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptions` must match the call that provided the page token.",
                  "location": "query",
                  "type": "string"
                },
                "packageName": {
                  "description": "Required. The parent app (package name) for which the subscriptions should be read.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                  "format": "int32"
                },
                "showArchived": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Whether archived subscriptions should be included in the response. Defaults to false."
                }
              },
              "response": {
                "$ref": "ListSubscriptionsResponse"
              }
            },
            "create": {
              "request": {
                "$ref": "Subscription"
              },
              "description": "Creates a new subscription. Newly added base plans will remain in draft state until activated.",
              "parameterOrder": [
                "packageName"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Subscription"
              },
              "id": "androidpublisher.monetization.subscriptions.create",
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions",
              "parameters": {
                "regionsVersion.version": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01."
                },
                "packageName": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent app (package name) for which the subscription should be created. Must be equal to the package_name field on the Subscription resource."
                },
                "productId": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. The ID to use for the subscription. For the requirements on this format, see the documentation of the product_id field on the Subscription resource."
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions",
              "httpMethod": "POST"
            },
            "patch": {
              "response": {
                "$ref": "Subscription"
              },
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "Subscription"
              },
              "description": "Updates an existing subscription.",
              "parameters": {
                "updateMask": {
                  "description": "Required. The list of fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "productId": {
                  "description": "Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Immutable. Package name of the parent app."
                },
                "regionsVersion.version": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "id": "androidpublisher.monetization.subscriptions.patch",
              "parameterOrder": [
                "packageName",
                "productId"
              ]
            },
            "archive": {
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}:archive",
              "request": {
                "$ref": "ArchiveSubscriptionRequest"
              },
              "httpMethod": "POST",
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}:archive",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Archives a subscription. Can only be done if at least one base plan was active in the past, and no base plan is available for new or existing subscribers currently. This action is irreversible, and the subscription ID will remain reserved.",
              "id": "androidpublisher.monetization.subscriptions.archive",
              "parameters": {
                "productId": {
                  "description": "Required. The unique product ID of the subscription to delete.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent app (package name) of the app of the subscription to delete."
                }
              },
              "parameterOrder": [
                "packageName",
                "productId"
              ],
              "response": {
                "$ref": "Subscription"
              }
            },
            "get": {
              "parameters": {
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The parent app (package name) of the subscription to get.",
                  "type": "string"
                },
                "productId": {
                  "required": true,
                  "description": "Required. The unique product ID of the subscription to get.",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Subscription"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "id": "androidpublisher.monetization.subscriptions.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "parameterOrder": [
                "packageName",
                "productId"
              ],
              "description": "Reads a single subscription."
            }
          }
        }
      }
    },
    "edits": {
      "resources": {
        "bundles": {
          "methods": {
            "upload": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "id": "androidpublisher.edits.bundles.upload",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Bundle"
              },
              "description": "Uploads a new Android App Bundle to this edit. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.",
              "parameters": {
                "editId": {
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "deviceTierConfigId": {
                  "description": "Device tier config (DTC) to be used for generating deliverables (APKs). Contains id of the DTC or \"LATEST\" for last uploaded DTC.",
                  "location": "query",
                  "type": "string"
                },
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string"
                },
                "ackBundleInstallationWarning": {
                  "description": "Must be set to true if the app bundle installation may trigger a warning on user devices (for example, if installation size may be over a threshold, typically 100 MB).",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "mediaUpload": {
                "accept": [
                  "application/octet-stream"
                ],
                "maxSize": "10737418240",
                "protocols": {
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
                    "multipart": true
                  },
                  "resumable": {
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
                    "multipart": true
                  }
                }
              },
              "supportsMediaUpload": true,
              "httpMethod": "POST"
            },
            "list": {
              "response": {
                "$ref": "BundlesListResponse"
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "id": "androidpublisher.edits.bundles.list",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "description": "Lists all current Android App Bundles of the app and edit.",
              "parameters": {
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Package name of the app."
                }
              },
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles"
            }
          }
        },
        "listings": {
          "methods": {
            "deleteall": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "description": "Deletes all store listings.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "id": "androidpublisher.edits.listings.deleteall",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "parameters": {
                "editId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              }
            },
            "list": {
              "parameters": {
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app.",
                  "required": true
                }
              },
              "description": "Lists all localized store listings.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListingsListResponse"
              },
              "id": "androidpublisher.edits.listings.list",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings"
            },
            "patch": {
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "request": {
                "$ref": "Listing"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "description": "Patches a localized store listing.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "parameters": {
                "language": {
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "editId": {
                  "type": "string",
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Listing"
              },
              "id": "androidpublisher.edits.listings.patch",
              "httpMethod": "PATCH"
            },
            "delete": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "parameters": {
                "editId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Identifier of the edit."
                },
                "language": {
                  "type": "string",
                  "required": true,
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "location": "path"
                },
                "packageName": {
                  "location": "path",
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Deletes a localized store listing.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "id": "androidpublisher.edits.listings.delete",
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "httpMethod": "DELETE"
            },
            "update": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Listing"
              },
              "httpMethod": "PUT",
              "request": {
                "$ref": "Listing"
              },
              "parameters": {
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "language": {
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "androidpublisher.edits.listings.update",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "description": "Creates or updates a localized store listing.",
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ]
            },
            "get": {
              "id": "androidpublisher.edits.listings.get",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "response": {
                "$ref": "Listing"
              },
              "description": "Gets a localized store listing.",
              "parameters": {
                "packageName": {
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true,
                  "type": "string"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "language": {
                  "type": "string",
                  "location": "path",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}"
            }
          }
        },
        "expansionfiles": {
          "methods": {
            "update": {
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "request": {
                "$ref": "ExpansionFile"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "parameters": {
                "expansionFileType": {
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "type": "string",
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "description": "The file type of the file configuration which is being read or modified.",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path"
                },
                "apkVersionCode": {
                  "format": "int32",
                  "type": "integer",
                  "location": "path",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "required": true
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "androidpublisher.edits.expansionfiles.update",
              "description": "Updates the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.",
              "httpMethod": "PUT",
              "response": {
                "$ref": "ExpansionFile"
              }
            },
            "upload": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "id": "androidpublisher.edits.expansionfiles.upload",
              "parameters": {
                "editId": {
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "apkVersionCode": {
                  "type": "integer",
                  "format": "int32",
                  "location": "path",
                  "required": true,
                  "description": "The version code of the APK whose expansion file configuration is being read or modified."
                },
                "expansionFileType": {
                  "required": true,
                  "type": "string",
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "description": "The file type of the expansion file configuration which is being updated.",
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "location": "path"
                }
              },
              "response": {
                "$ref": "ExpansionFilesUploadResponse"
              },
              "description": "Uploads a new expansion file and attaches to the specified APK.",
              "supportsMediaUpload": true,
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "mediaUpload": {
                "maxSize": "2147483648",
                "accept": [
                  "application/octet-stream"
                ],
                "protocols": {
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}"
                  },
                  "simple": {
                    "multipart": true,
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}"
                  }
                }
              }
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.expansionfiles.patch",
              "description": "Patches the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.",
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "parameters": {
                "expansionFileType": {
                  "required": true,
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "description": "The file type of the expansion file configuration which is being updated.",
                  "type": "string",
                  "location": "path"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                },
                "apkVersionCode": {
                  "format": "int32",
                  "location": "path",
                  "type": "integer",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "required": true
                }
              },
              "response": {
                "$ref": "ExpansionFile"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "ExpansionFile"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}"
            },
            "get": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "httpMethod": "GET",
              "id": "androidpublisher.edits.expansionfiles.get",
              "description": "Fetches the expansion file configuration for the specified APK.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "apkVersionCode": {
                  "location": "path",
                  "required": true,
                  "format": "int32",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "type": "integer"
                },
                "expansionFileType": {
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "type": "string",
                  "description": "The file type of the file configuration which is being read or modified.",
                  "required": true,
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "location": "path"
                },
                "editId": {
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string"
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true
                }
              },
              "response": {
                "$ref": "ExpansionFile"
              }
            }
          }
        },
        "apks": {
          "methods": {
            "upload": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Apk"
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "id": "androidpublisher.edits.apks.upload",
              "supportsMediaUpload": true,
              "mediaUpload": {
                "maxSize": "10737418240",
                "protocols": {
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks"
                  },
                  "simple": {
                    "multipart": true,
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks"
                  }
                },
                "accept": [
                  "application/octet-stream",
                  "application/vnd.android.package-archive"
                ]
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "httpMethod": "POST",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Uploads an APK and adds to the current edit."
            },
            "addexternallyhosted": {
              "description": "Creates a new APK without uploading the APK itself to Google Play, instead hosting the APK at a specified URL. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ApksAddExternallyHostedResponse"
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "request": {
                "$ref": "ApksAddExternallyHostedRequest"
              },
              "parameters": {
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "androidpublisher.edits.apks.addexternallyhosted",
              "httpMethod": "POST",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted"
            },
            "list": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "response": {
                "$ref": "ApksListResponse"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "parameters": {
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string"
                },
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Lists all current APKs of the app and edit.",
              "id": "androidpublisher.edits.apks.list"
            }
          }
        },
        "images": {
          "methods": {
            "list": {
              "description": "Lists all images. The response may be empty.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ImagesListResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "imageType": {
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "location": "path",
                  "required": true,
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "description": "Type of the Image. Providing an image type that refers to no images will return an empty response.",
                  "type": "string"
                },
                "language": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). There must be a store listing for the specified language."
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "editId": {
                  "type": "string",
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "id": "androidpublisher.edits.images.list",
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}"
            },
            "upload": {
              "supportsMediaUpload": true,
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ImagesUploadResponse"
              },
              "mediaUpload": {
                "accept": [
                  "image/*"
                ],
                "protocols": {
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
                    "multipart": true
                  },
                  "resumable": {
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
                    "multipart": true
                  }
                },
                "maxSize": "15728640"
              },
              "description": "Uploads an image of the specified language and image type, and adds to the edit.",
              "parameters": {
                "imageType": {
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "description": "Type of the Image.",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "language": {
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "packageName": {
                  "required": true,
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "androidpublisher.edits.images.upload",
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}"
            },
            "delete": {
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType",
                "imageId"
              ],
              "parameters": {
                "language": {
                  "required": true,
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "type": "string",
                  "location": "path"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "imageType": {
                  "location": "path",
                  "required": true,
                  "description": "Type of the Image.",
                  "type": "string",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ]
                },
                "imageId": {
                  "location": "path",
                  "type": "string",
                  "description": "Unique identifier an image within the set of images attached to this edit.",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Package name of the app."
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}",
              "httpMethod": "DELETE",
              "id": "androidpublisher.edits.images.delete",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}",
              "description": "Deletes the image (specified by id) from the edit."
            },
            "deleteall": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "response": {
                "$ref": "ImagesDeleteAllResponse"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "id": "androidpublisher.edits.images.deleteall",
              "description": "Deletes all images for the specified language and image type. Returns an empty response if no images are found.",
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "parameters": {
                "language": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op."
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "imageType": {
                  "location": "path",
                  "description": "Type of the Image. Providing an image type that refers to no images is a no-op.",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "required": true,
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "type": "string"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "DELETE"
            }
          }
        },
        "tracks": {
          "methods": {
            "patch": {
              "description": "Patches a track.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "id": "androidpublisher.edits.tracks.patch",
              "response": {
                "$ref": "Track"
              },
              "parameters": {
                "track": {
                  "required": true,
                  "description": "Identifier of the track.",
                  "location": "path",
                  "type": "string"
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string"
                },
                "editId": {
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "request": {
                "$ref": "Track"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "update": {
              "response": {
                "$ref": "Track"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "httpMethod": "PUT",
              "description": "Updates a track.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "request": {
                "$ref": "Track"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "parameters": {
                "editId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit."
                },
                "track": {
                  "location": "path",
                  "description": "Identifier of the track.",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "id": "androidpublisher.edits.tracks.update"
            },
            "get": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "response": {
                "$ref": "Track"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "id": "androidpublisher.edits.tracks.get",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "httpMethod": "GET",
              "description": "Gets a track.",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "track": {
                  "description": "Identifier of the track.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "editId": {
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string"
                }
              }
            },
            "list": {
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "TracksListResponse"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks",
              "parameters": {
                "editId": {
                  "required": true,
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "location": "path"
                },
                "packageName": {
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "androidpublisher.edits.tracks.list",
              "description": "Lists all tracks."
            }
          }
        },
        "testers": {
          "methods": {
            "patch": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "parameters": {
                "track": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The track to update."
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string"
                },
                "editId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Identifier of the edit."
                }
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "description": "Patches testers. Note: Testers resource does not support email lists.",
              "request": {
                "$ref": "Testers"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "id": "androidpublisher.edits.testers.patch",
              "response": {
                "$ref": "Testers"
              },
              "httpMethod": "PATCH"
            },
            "update": {
              "httpMethod": "PUT",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "description": "Updates testers. Note: Testers resource does not support email lists.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "request": {
                "$ref": "Testers"
              },
              "id": "androidpublisher.edits.testers.update",
              "response": {
                "$ref": "Testers"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "parameters": {
                "packageName": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app."
                },
                "track": {
                  "type": "string",
                  "description": "The track to update.",
                  "location": "path",
                  "required": true
                },
                "editId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Identifier of the edit."
                }
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Testers"
              },
              "httpMethod": "GET",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "parameters": {
                "packageName": {
                  "required": true,
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path"
                },
                "editId": {
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path"
                },
                "track": {
                  "type": "string",
                  "description": "The track to read from.",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "androidpublisher.edits.testers.get",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "description": "Gets testers. Note: Testers resource does not support email lists."
            }
          }
        },
        "details": {
          "methods": {
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "request": {
                "$ref": "AppDetails"
              },
              "response": {
                "$ref": "AppDetails"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Patches details of an app.",
              "id": "androidpublisher.edits.details.patch",
              "httpMethod": "PATCH"
            },
            "get": {
              "parameters": {
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true
                }
              },
              "id": "androidpublisher.edits.details.get",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "description": "Gets details of an app.",
              "response": {
                "$ref": "AppDetails"
              }
            },
            "update": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Updates details of an app.",
              "id": "androidpublisher.edits.details.update",
              "httpMethod": "PUT",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "request": {
                "$ref": "AppDetails"
              },
              "response": {
                "$ref": "AppDetails"
              },
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details"
            }
          }
        },
        "deobfuscationfiles": {
          "methods": {
            "upload": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
              "parameters": {
                "packageName": {
                  "required": true,
                  "location": "path",
                  "description": "Unique identifier for the Android app.",
                  "type": "string"
                },
                "deobfuscationFileType": {
                  "required": true,
                  "enum": [
                    "deobfuscationFileTypeUnspecified",
                    "proguard",
                    "nativeCode"
                  ],
                  "enumDescriptions": [
                    "Unspecified deobfuscation file type.",
                    "Proguard deobfuscation file type.",
                    "Native debugging symbols file type."
                  ],
                  "location": "path",
                  "type": "string",
                  "description": "The type of the deobfuscation file."
                },
                "apkVersionCode": {
                  "description": "The version code of the APK whose Deobfuscation File is being uploaded.",
                  "required": true,
                  "location": "path",
                  "format": "int32",
                  "type": "integer"
                },
                "editId": {
                  "required": true,
                  "description": "Unique identifier for this edit.",
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "deobfuscationFileType"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
              "id": "androidpublisher.edits.deobfuscationfiles.upload",
              "mediaUpload": {
                "accept": [
                  "application/octet-stream"
                ],
                "protocols": {
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
                    "multipart": true
                  },
                  "resumable": {
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
                    "multipart": true
                  }
                },
                "maxSize": "629145600"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "DeobfuscationFilesUploadResponse"
              },
              "description": "Uploads a new deobfuscation file and attaches to the specified APK.",
              "supportsMediaUpload": true
            }
          }
        },
        "countryavailability": {
          "methods": {
            "get": {
              "parameters": {
                "track": {
                  "description": "The track to read from.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Gets country availability.",
              "httpMethod": "GET",
              "response": {
                "$ref": "TrackCountryAvailability"
              },
              "id": "androidpublisher.edits.countryavailability.get",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ]
            }
          }
        }
      },
      "methods": {
        "delete": {
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "description": "Deletes an app edit.",
          "httpMethod": "DELETE",
          "parameters": {
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "required": true,
              "type": "string"
            },
            "editId": {
              "required": true,
              "description": "Identifier of the edit.",
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.edits.delete",
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}"
        },
        "commit": {
          "response": {
            "$ref": "AppEdit"
          },
          "httpMethod": "POST",
          "id": "androidpublisher.edits.commit",
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit",
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "description": "Commits an app edit.",
          "parameters": {
            "packageName": {
              "description": "Package name of the app.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "changesNotSentForReview": {
              "location": "query",
              "type": "boolean",
              "description": "Indicates that the changes in this edit will not be reviewed until they are explicitly sent for review from the Google Play Console UI. These changes will be added to any other changes that are not yet sent for review."
            },
            "editId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Identifier of the edit."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit"
        },
        "validate": {
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate",
          "httpMethod": "POST",
          "description": "Validates an app edit.",
          "id": "androidpublisher.edits.validate",
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "editId": {
              "required": true,
              "type": "string",
              "description": "Identifier of the edit.",
              "location": "path"
            },
            "packageName": {
              "description": "Package name of the app.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "AppEdit"
          }
        },
        "insert": {
          "description": "Creates a new edit for an app.",
          "httpMethod": "POST",
          "request": {
            "$ref": "AppEdit"
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits",
          "path": "androidpublisher/v3/applications/{packageName}/edits",
          "response": {
            "$ref": "AppEdit"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "packageName"
          ],
          "parameters": {
            "packageName": {
              "type": "string",
              "location": "path",
              "description": "Package name of the app.",
              "required": true
            }
          },
          "id": "androidpublisher.edits.insert"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "parameters": {
            "packageName": {
              "location": "path",
              "type": "string",
              "description": "Package name of the app.",
              "required": true
            },
            "editId": {
              "description": "Identifier of the edit.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "AppEdit"
          },
          "description": "Gets an app edit.",
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "id": "androidpublisher.edits.get",
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "httpMethod": "GET"
        }
      }
    }
  },
  "servicePath": "",
  "schemas": {
    "Image": {
      "id": "Image",
      "description": "An uploaded image. The resource for ImagesService.",
      "properties": {
        "id": {
          "description": "A unique id representing this image.",
          "type": "string"
        },
        "url": {
          "description": "A URL that will serve a preview of the image.",
          "type": "string"
        },
        "sha256": {
          "description": "A sha256 hash of the image.",
          "type": "string"
        },
        "sha1": {
          "type": "string",
          "description": "A sha1 hash of the image."
        }
      },
      "type": "object"
    },
    "ImagesListResponse": {
      "description": "Response listing all images.",
      "id": "ImagesListResponse",
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "description": "All listed Images.",
          "items": {
            "$ref": "Image"
          }
        }
      }
    },
    "UpgradeTargetingRule": {
      "description": "Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}].",
      "id": "UpgradeTargetingRule",
      "properties": {
        "oncePerUser": {
          "description": "Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer.",
          "type": "boolean"
        },
        "scope": {
          "$ref": "TargetingRuleScope",
          "description": "Required. The scope of subscriptions this rule considers. Only allows \"this subscription\" and \"specific subscription in app\"."
        },
        "billingPeriodDuration": {
          "description": "The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListSubscriptionsResponse": {
      "properties": {
        "subscriptions": {
          "description": "The subscriptions from the specified app.",
          "items": {
            "$ref": "Subscription"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "id": "ListSubscriptionsResponse",
      "type": "object",
      "description": "Response message for ListSubscriptions."
    },
    "Track": {
      "id": "Track",
      "properties": {
        "releases": {
          "description": "In a read request, represents all active releases in the track. In an update request, represents desired changes.",
          "type": "array",
          "items": {
            "$ref": "TrackRelease"
          }
        },
        "track": {
          "type": "string",
          "description": "Identifier of the track."
        }
      },
      "description": "A track configuration. The resource for TracksService.",
      "type": "object"
    },
    "GeneratedSplitApk": {
      "type": "object",
      "description": "Download metadata for a split APK.",
      "properties": {
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        },
        "splitId": {
          "type": "string",
          "description": "Split ID. Empty for the main split of the base module."
        },
        "variantId": {
          "format": "int32",
          "description": "ID of the generated variant.",
          "type": "integer"
        },
        "moduleName": {
          "type": "string",
          "description": "Name of the module that this APK belongs to."
        }
      },
      "id": "GeneratedSplitApk"
    },
    "ReviewsReplyResponse": {
      "id": "ReviewsReplyResponse",
      "properties": {
        "result": {
          "$ref": "ReviewReplyResult",
          "description": "The result of replying/updating a reply to review."
        }
      },
      "description": "Response on status of replying to a review.",
      "type": "object"
    },
    "SubscriptionPurchasesDeferResponse": {
      "properties": {
        "newExpiryTimeMillis": {
          "description": "The new expiry time for the subscription in milliseconds since the Epoch.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Response for the purchases.subscriptions.defer API.",
      "type": "object",
      "id": "SubscriptionPurchasesDeferResponse"
    },
    "ExternallyHostedApk": {
      "description": "Defines an APK available for this application that is hosted externally and not uploaded to Google Play. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations.",
      "type": "object",
      "id": "ExternallyHostedApk",
      "properties": {
        "applicationLabel": {
          "type": "string",
          "description": "The application label."
        },
        "iconBase64": {
          "type": "string",
          "description": "The icon image from the APK, as a base64 encoded byte array."
        },
        "usesFeatures": {
          "description": "The features required by this APK (optional).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileSha1Base64": {
          "description": "The sha1 checksum of this APK, represented as a base64 encoded byte array.",
          "type": "string"
        },
        "nativeCodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The native code environments supported by this APK (optional)."
        },
        "minimumSdk": {
          "description": "The minimum SDK targeted by this APK.",
          "type": "integer",
          "format": "int32"
        },
        "packageName": {
          "description": "The package name.",
          "type": "string"
        },
        "versionCode": {
          "type": "integer",
          "format": "int32",
          "description": "The version code of this APK."
        },
        "certificateBase64s": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A certificate (or array of certificates if a certificate-chain is used) used to sign this APK, represented as a base64 encoded byte array."
        },
        "fileSha256Base64": {
          "description": "The sha256 checksum of this APK, represented as a base64 encoded byte array.",
          "type": "string"
        },
        "externallyHostedUrl": {
          "description": "The URL at which the APK is hosted. This must be an https URL.",
          "type": "string"
        },
        "maximumSdk": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum SDK supported by this APK (optional)."
        },
        "fileSize": {
          "type": "string",
          "description": "The file size in bytes of this APK.",
          "format": "int64"
        },
        "versionName": {
          "type": "string",
          "description": "The version name of this APK."
        },
        "usesPermissions": {
          "type": "array",
          "items": {
            "$ref": "UsesPermission"
          },
          "description": "The permissions requested by this APK."
        }
      }
    },
    "SystemInitiatedCancellation": {
      "type": "object",
      "id": "SystemInitiatedCancellation",
      "description": "Information specific to cancellations initiated by Google system.",
      "properties": {}
    },
    "DeviceSelector": {
      "properties": {
        "includedDeviceIds": {
          "description": "Device models included by this selector.",
          "type": "array",
          "items": {
            "$ref": "DeviceId"
          }
        },
        "deviceRam": {
          "description": "Conditions on the device's RAM.",
          "$ref": "DeviceRam"
        },
        "excludedDeviceIds": {
          "items": {
            "$ref": "DeviceId"
          },
          "type": "array",
          "description": "Device models excluded by this selector, even if they match all other conditions."
        },
        "forbiddenSystemFeatures": {
          "description": "A device that has any of these system features is excluded by this selector, even if it matches all other conditions.",
          "items": {
            "$ref": "SystemFeature"
          },
          "type": "array"
        },
        "requiredSystemFeatures": {
          "type": "array",
          "description": "A device needs to have all these system features to be included by the selector.",
          "items": {
            "$ref": "SystemFeature"
          }
        }
      },
      "id": "DeviceSelector",
      "type": "object",
      "description": "Selector for a device group. A selector consists of a set of conditions on the device that should all match (logical AND) to determine a device group eligibility. For instance, if a selector specifies RAM conditions, device model inclusion and device model exclusion, a device is considered to match if: device matches RAM conditions AND device matches one of the included device models AND device doesn't match excluded device models"
    },
    "RegionalSubscriptionOfferPhaseConfig": {
      "type": "object",
      "properties": {
        "relativeDiscount": {
          "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in this region.",
          "type": "number",
          "format": "double"
        },
        "absoluteDiscount": {
          "description": "The absolute amount of money subtracted from the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a $1 absolute discount for a phase of a duration of 3 months would correspond to a price of $2. The resulting price may not be smaller than the minimum price allowed for this region.",
          "$ref": "Money"
        },
        "regionCode": {
          "description": "Required. Immutable. The region to which this config applies.",
          "type": "string"
        },
        "price": {
          "description": "The absolute price the user pays for this offer phase. The price must not be smaller than the minimum price allowed for this region.",
          "$ref": "Money"
        }
      },
      "id": "RegionalSubscriptionOfferPhaseConfig",
      "description": "Configuration for a single phase of a subscription offer in a single region."
    },
    "Variant": {
      "description": "APK that is suitable for inclusion in a system image. The resource of SystemApksService.",
      "type": "object",
      "id": "Variant",
      "properties": {
        "variantId": {
          "type": "integer",
          "format": "uint32",
          "description": "Output only. The ID of a previously created system APK variant.",
          "readOnly": true
        },
        "deviceSpec": {
          "$ref": "DeviceSpec",
          "description": "The device spec used to generate the APK."
        }
      }
    },
    "InAppProductListing": {
      "type": "object",
      "description": "Store listing of a single in-app product.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description for the store listing."
        },
        "title": {
          "type": "string",
          "description": "Title for the store listing."
        },
        "benefits": {
          "description": "Localized entitlement benefits for a subscription.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "InAppProductListing"
    },
    "ReviewsListResponse": {
      "type": "object",
      "description": "Response listing reviews.",
      "properties": {
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "Information about the current page."
        },
        "reviews": {
          "description": "List of reviews.",
          "items": {
            "$ref": "Review"
          },
          "type": "array"
        },
        "tokenPagination": {
          "description": "Pagination token, to handle a number of products that is over one page.",
          "$ref": "TokenPagination"
        }
      },
      "id": "ReviewsListResponse"
    },
    "SubscriptionPurchasesDeferRequest": {
      "properties": {
        "deferralInfo": {
          "$ref": "SubscriptionDeferralInfo",
          "description": "The information about the new desired expiry time for the subscription."
        }
      },
      "id": "SubscriptionPurchasesDeferRequest",
      "description": "Request for the purchases.subscriptions.defer API.",
      "type": "object"
    },
    "DeobfuscationFilesUploadResponse": {
      "properties": {
        "deobfuscationFile": {
          "description": "The uploaded Deobfuscation File configuration.",
          "$ref": "DeobfuscationFile"
        }
      },
      "description": "Responses for the upload.",
      "type": "object",
      "id": "DeobfuscationFilesUploadResponse"
    },
    "SystemFeature": {
      "id": "SystemFeature",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the feature.",
          "type": "string"
        }
      },
      "description": "Representation of a system feature."
    },
    "AppEdit": {
      "type": "object",
      "id": "AppEdit",
      "description": "An app edit. The resource for EditsService.",
      "properties": {
        "expiryTimeSeconds": {
          "readOnly": true,
          "description": "Output only. The time (as seconds since Epoch) at which the edit will expire and will be no longer valid for use.",
          "type": "string"
        },
        "id": {
          "description": "Output only. Identifier of the edit. Can be used in subsequent API calls.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscriptionPurchasesAcknowledgeRequest": {
      "properties": {
        "developerPayload": {
          "type": "string",
          "description": "Payload to attach to the purchase."
        }
      },
      "id": "SubscriptionPurchasesAcknowledgeRequest",
      "description": "Request for the purchases.subscriptions.acknowledge API.",
      "type": "object"
    },
    "TrackCountryAvailability": {
      "description": "Resource for per-track country availability information.",
      "properties": {
        "countries": {
          "type": "array",
          "description": "A list of one or more countries where artifacts in this track are available. This list includes all countries that are targeted by the track, even if only specific carriers are targeted in that country.",
          "items": {
            "$ref": "TrackTargetedCountry"
          }
        },
        "syncWithProduction": {
          "description": "Whether this track's availability is synced with the default production track. See https://support.google.com/googleplay/android-developer/answer/7550024 for more information on syncing country availability with production. Note that if this is true, the returned \"countries\" and \"rest_of_world\" fields will reflect the values for the default production track.",
          "type": "boolean"
        },
        "restOfWorld": {
          "type": "boolean",
          "description": "Whether artifacts in this track are available to \"rest of the world\" countries."
        }
      },
      "id": "TrackCountryAvailability",
      "type": "object"
    },
    "VoidedPurchasesListResponse": {
      "type": "object",
      "id": "VoidedPurchasesListResponse",
      "description": "Response for the voidedpurchases.list API.",
      "properties": {
        "voidedPurchases": {
          "items": {
            "$ref": "VoidedPurchase"
          },
          "type": "array"
        },
        "tokenPagination": {
          "$ref": "TokenPagination",
          "description": "Pagination information for token pagination."
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "General pagination information."
        }
      }
    },
    "ConvertedRegionPrice": {
      "id": "ConvertedRegionPrice",
      "properties": {
        "price": {
          "description": "The converted price tax inclusive.",
          "$ref": "Money"
        },
        "taxAmount": {
          "$ref": "Money",
          "description": "The tax amount of the converted price."
        },
        "regionCode": {
          "type": "string",
          "description": "The region code of the region."
        }
      },
      "description": "A converted region price.",
      "type": "object"
    },
    "TargetingRuleScope": {
      "id": "TargetingRuleScope",
      "type": "object",
      "description": "Defines the scope of subscriptions which a targeting rule can match to target offers to users based on past or current entitlement.",
      "properties": {
        "specificSubscriptionInApp": {
          "description": "The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app.",
          "type": "string"
        }
      }
    },
    "SystemApksListResponse": {
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "Variant"
          },
          "description": "All system APK variants created."
        }
      },
      "id": "SystemApksListResponse",
      "type": "object",
      "description": "Response to list previously created system APK variants."
    },
    "DeviceTierSet": {
      "type": "object",
      "description": "A set of device tiers. A tier set determines what variation of app content gets served to a specific device, for device-targeted content. You should assign a priority level to each tier, which determines the ordering by which they are evaluated by Play. See the documentation of DeviceTier.level for more details.",
      "id": "DeviceTierSet",
      "properties": {
        "deviceTiers": {
          "type": "array",
          "items": {
            "$ref": "DeviceTier"
          },
          "description": "Device tiers belonging to the set."
        }
      }
    },
    "DeveloperComment": {
      "properties": {
        "lastModified": {
          "description": "The last time at which this comment was updated.",
          "$ref": "Timestamp"
        },
        "text": {
          "description": "The content of the comment, i.e. reply body.",
          "type": "string"
        }
      },
      "description": "Developer entry from conversation between user and developer.",
      "type": "object",
      "id": "DeveloperComment"
    },
    "VoidedPurchase": {
      "properties": {
        "voidedTimeMillis": {
          "description": "The time at which the purchase was canceled/refunded/charged-back, in milliseconds since the epoch (Jan 1, 1970).",
          "format": "int64",
          "type": "string"
        },
        "purchaseToken": {
          "description": "The token which uniquely identifies a one-time purchase or subscription. To uniquely identify subscription renewals use order_id (available starting from version 3 of the API).",
          "type": "string"
        },
        "purchaseTimeMillis": {
          "type": "string",
          "description": "The time at which the purchase was made, in milliseconds since the epoch (Jan 1, 1970).",
          "format": "int64"
        },
        "voidedReason": {
          "description": "The reason why the purchase was voided, possible values are: 0. Other 1. Remorse 2. Not_received 3. Defective 4. Accidental_purchase 5. Fraud 6. Friendly_fraud 7. Chargeback",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "description": "This kind represents a voided purchase object in the androidpublisher service.",
          "type": "string"
        },
        "orderId": {
          "description": "The order id which uniquely identifies a one-time purchase, subscription purchase, or subscription renewal.",
          "type": "string"
        },
        "voidedSource": {
          "format": "int32",
          "type": "integer",
          "description": "The initiator of voided purchase, possible values are: 0. User 1. Developer 2. Google"
        }
      },
      "type": "object",
      "id": "VoidedPurchase",
      "description": "A VoidedPurchase resource indicates a purchase that was either canceled/refunded/charged-back."
    },
    "UserInitiatedCancellation": {
      "properties": {
        "cancelSurveyResult": {
          "$ref": "CancelSurveyResult",
          "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey)."
        },
        "cancelTime": {
          "description": "The time at which the subscription was canceled by the user. The user might still have access to the subscription after this time. Use line_items.expiry_time to determine if a user still has access.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "UserInitiatedCancellation",
      "description": "Information specific to cancellations initiated by users."
    },
    "ProductPurchase": {
      "description": "A ProductPurchase resource indicates the status of a user's inapp product purchase.",
      "properties": {
        "obfuscatedExternalProfileId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made.",
          "type": "string"
        },
        "acknowledgementState": {
          "format": "int32",
          "type": "integer",
          "description": "The acknowledgement state of the inapp product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged"
        },
        "orderId": {
          "type": "string",
          "description": "The order id associated with the purchase of the inapp product."
        },
        "obfuscatedExternalAccountId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.",
          "type": "string"
        },
        "purchaseType": {
          "type": "integer",
          "format": "int32",
          "description": "The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code) 2. Rewarded (i.e. from watching a video ad instead of paying)"
        },
        "consumptionState": {
          "format": "int32",
          "type": "integer",
          "description": "The consumption state of the inapp product. Possible values are: 0. Yet to be consumed 1. Consumed"
        },
        "productId": {
          "type": "string",
          "description": "The inapp product SKU. May not be present."
        },
        "developerPayload": {
          "type": "string",
          "description": "A developer-specified string that contains supplemental information about an order."
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity associated with the purchase of the inapp product. If not present, the quantity is 1.",
          "format": "int32"
        },
        "kind": {
          "description": "This kind represents an inappPurchase object in the androidpublisher service.",
          "type": "string"
        },
        "regionCode": {
          "type": "string",
          "description": "ISO 3166-1 alpha-2 billing region code of the user at the time the product was granted."
        },
        "purchaseToken": {
          "type": "string",
          "description": "The purchase token generated to identify this purchase. May not be present."
        },
        "purchaseTimeMillis": {
          "description": "The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).",
          "format": "int64",
          "type": "string"
        },
        "purchaseState": {
          "format": "int32",
          "description": "The purchase state of the order. Possible values are: 0. Purchased 1. Canceled 2. Pending",
          "type": "integer"
        }
      },
      "id": "ProductPurchase",
      "type": "object"
    },
    "Comment": {
      "description": "An entry of conversation between user and developer.",
      "properties": {
        "developerComment": {
          "description": "A comment from a developer.",
          "$ref": "DeveloperComment"
        },
        "userComment": {
          "$ref": "UserComment",
          "description": "A comment from a user."
        }
      },
      "id": "Comment",
      "type": "object"
    },
    "ExpansionFile": {
      "id": "ExpansionFile",
      "description": "An expansion file. The resource for ExpansionFilesService.",
      "properties": {
        "referencesVersion": {
          "description": "If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set.",
          "format": "int32",
          "type": "integer"
        },
        "fileSize": {
          "type": "string",
          "description": "If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "ProductPurchasesAcknowledgeRequest": {
      "type": "object",
      "id": "ProductPurchasesAcknowledgeRequest",
      "description": "Request for the product.purchases.acknowledge API.",
      "properties": {
        "developerPayload": {
          "type": "string",
          "description": "Payload to attach to the purchase."
        }
      }
    },
    "DeviceId": {
      "properties": {
        "buildBrand": {
          "type": "string",
          "description": "Value of Build.BRAND."
        },
        "buildDevice": {
          "description": "Value of Build.DEVICE.",
          "type": "string"
        }
      },
      "id": "DeviceId",
      "description": "Identifier of a device.",
      "type": "object"
    },
    "DeviceRam": {
      "id": "DeviceRam",
      "type": "object",
      "properties": {
        "maxBytes": {
          "type": "string",
          "description": "Maximum RAM in bytes (bound excluded).",
          "format": "int64"
        },
        "minBytes": {
          "type": "string",
          "description": "Minimum RAM in bytes (bound included).",
          "format": "int64"
        }
      },
      "description": "Conditions about a device's RAM capabilities."
    },
    "SubscriptionDeferralInfo": {
      "properties": {
        "desiredExpiryTimeMillis": {
          "description": "The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription.",
          "format": "int64",
          "type": "string"
        },
        "expectedExpiryTimeMillis": {
          "type": "string",
          "format": "int64",
          "description": "The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur."
        }
      },
      "type": "object",
      "id": "SubscriptionDeferralInfo",
      "description": "A SubscriptionDeferralInfo contains the data needed to defer a subscription purchase to a future expiry time."
    },
    "AppDetails": {
      "description": "The app details. The resource for DetailsService.",
      "type": "object",
      "id": "AppDetails",
      "properties": {
        "defaultLanguage": {
          "type": "string",
          "description": "Default language code, in BCP 47 format (eg \"en-US\")."
        },
        "contactEmail": {
          "type": "string",
          "description": "The user-visible support email for this app."
        },
        "contactWebsite": {
          "type": "string",
          "description": "The user-visible website for this app."
        },
        "contactPhone": {
          "description": "The user-visible support telephone number for this app.",
          "type": "string"
        }
      }
    },
    "Listing": {
      "description": "A localized store listing. The resource for ListingsService.",
      "properties": {
        "shortDescription": {
          "type": "string",
          "description": "Short description of the app."
        },
        "language": {
          "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
          "type": "string"
        },
        "video": {
          "type": "string",
          "description": "URL of a promotional YouTube video for the app."
        },
        "title": {
          "description": "Localized title of the app.",
          "type": "string"
        },
        "fullDescription": {
          "type": "string",
          "description": "Full description of the app."
        }
      },
      "id": "Listing",
      "type": "object"
    },
    "GeneratedAssetPackSlice": {
      "description": "Download metadata for an asset pack slice.",
      "properties": {
        "moduleName": {
          "description": "Name of the module that this asset slice belongs to.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Asset module version.",
          "format": "int64"
        },
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        },
        "sliceId": {
          "description": "Asset slice ID.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GeneratedAssetPackSlice"
    },
    "ExternalAccountIdentifiers": {
      "type": "object",
      "description": "User account identifier in the third-party service.",
      "id": "ExternalAccountIdentifiers",
      "properties": {
        "externalAccountId": {
          "type": "string",
          "description": "User account identifier in the third-party service. Only present if account linking happened as part of the subscription purchase flow."
        },
        "obfuscatedExternalProfileId": {
          "type": "string",
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made."
        },
        "obfuscatedExternalAccountId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Present for the following purchases: * If account linking happened as part of the subscription purchase flow. * It was specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.",
          "type": "string"
        }
      }
    },
    "PrepaidBasePlanType": {
      "description": "Represents a base plan that does not automatically renew at the end of the base plan, and must be manually renewed by the user.",
      "id": "PrepaidBasePlanType",
      "properties": {
        "billingPeriodDuration": {
          "type": "string",
          "description": "Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center."
        },
        "timeExtension": {
          "description": "Whether users should be able to extend this prepaid base plan in Google Play surfaces. Defaults to TIME_EXTENSION_ACTIVE if not specified.",
          "type": "string",
          "enum": [
            "TIME_EXTENSION_UNSPECIFIED",
            "TIME_EXTENSION_ACTIVE",
            "TIME_EXTENSION_INACTIVE"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Time extension is active. Users are allowed to top-up or extend their prepaid plan.",
            "Time extension is inactive. Users cannot top-up or extend their prepaid plan."
          ]
        }
      },
      "type": "object"
    },
    "SubscriptionPurchaseV2": {
      "properties": {
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time at which the subscription was granted. Not set for pending subscriptions (subscription was created but awaiting payment during signup)."
        },
        "latestOrderId": {
          "type": "string",
          "description": "The order id of the latest order associated with the purchase of the subscription. For autoRenewing subscription, this is the order id of signup order if it is not renewed yet, or the last recurring order id (success, pending, or declined order). For prepaid subscription, this is the order id associated with the queried purchase token."
        },
        "testPurchase": {
          "$ref": "TestPurchase",
          "description": "Only present if this subscription purchase is a test purchase."
        },
        "pausedStateContext": {
          "description": "Additional context around paused subscriptions. Only present if the subscription currently has subscription_state SUBSCRIPTION_STATE_PAUSED.",
          "$ref": "PausedStateContext"
        },
        "acknowledgementState": {
          "type": "string",
          "enum": [
            "ACKNOWLEDGEMENT_STATE_UNSPECIFIED",
            "ACKNOWLEDGEMENT_STATE_PENDING",
            "ACKNOWLEDGEMENT_STATE_ACKNOWLEDGED"
          ],
          "enumDescriptions": [
            "Unspecified acknowledgement state.",
            "The subscription is not acknowledged yet.",
            "The subscription is acknowledged."
          ],
          "description": "The acknowledgement state of the subscription."
        },
        "subscribeWithGoogleInfo": {
          "$ref": "SubscribeWithGoogleInfo",
          "description": "User profile associated with purchases made with 'Subscribe with Google'."
        },
        "subscriptionState": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified subscription state.",
            "Subscription was created but awaiting payment during signup. In this state, all items are awaiting payment.",
            "Subscription is active. - (1) If the subscription is an auto renewing plan, at least one item is auto_renew_enabled and not expired. - (2) If the subscription is a prepaid plan, at least one item is not expired.",
            "Subscription is paused. The state is only available when the subscription is an auto renewing plan. In this state, all items are in paused state.",
            "Subscription is in grace period. The state is only available when the subscription is an auto renewing plan. In this state, all items are in grace period.",
            "Subscription is on hold (suspended). The state is only available when the subscription is an auto renewing plan. In this state, all items are on hold.",
            "Subscription is canceled but not expired yet. The state is only available when the subscription is an auto renewing plan. All items have auto_renew_enabled set to false.",
            "Subscription is expired. All items have expiry_time in the past."
          ],
          "enum": [
            "SUBSCRIPTION_STATE_UNSPECIFIED",
            "SUBSCRIPTION_STATE_PENDING",
            "SUBSCRIPTION_STATE_ACTIVE",
            "SUBSCRIPTION_STATE_PAUSED",
            "SUBSCRIPTION_STATE_IN_GRACE_PERIOD",
            "SUBSCRIPTION_STATE_ON_HOLD",
            "SUBSCRIPTION_STATE_CANCELED",
            "SUBSCRIPTION_STATE_EXPIRED"
          ],
          "description": "The current state of the subscription."
        },
        "lineItems": {
          "description": "Item-level info for a subscription purchase. The items in the same purchase should be either all with AutoRenewingPlan or all with PrepaidPlan.",
          "type": "array",
          "items": {
            "$ref": "SubscriptionPurchaseLineItem"
          }
        },
        "regionCode": {
          "type": "string",
          "description": "ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted."
        },
        "externalAccountIdentifiers": {
          "$ref": "ExternalAccountIdentifiers",
          "description": "User account identifier in the third-party service."
        },
        "linkedPurchaseToken": {
          "description": "The purchase token of the old subscription if this subscription is one of the following: * Re-signup of a canceled but non-lapsed subscription * Upgrade/downgrade from a previous subscription. * Convert from prepaid to auto renewing subscription. * Convert from an auto renewing subscription to prepaid. * Topup a prepaid subscription.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This kind represents a SubscriptionPurchaseV2 object in the androidpublisher service."
        },
        "canceledStateContext": {
          "$ref": "CanceledStateContext",
          "description": "Additional context around canceled subscriptions. Only present if the subscription currently has subscription_state SUBSCRIPTION_STATE_CANCELED."
        }
      },
      "id": "SubscriptionPurchaseV2",
      "type": "object",
      "description": "Indicates the status of a user's subscription purchase."
    },
    "RegionsVersion": {
      "description": "The version of the available regions being used for the specified resource.",
      "id": "RegionsVersion",
      "properties": {
        "version": {
          "type": "string",
          "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01."
        }
      },
      "type": "object"
    },
    "AutoRenewingBasePlanType": {
      "description": "Represents a base plan that automatically renews at the end of its subscription period.",
      "properties": {
        "billingPeriodDuration": {
          "type": "string",
          "description": "Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center."
        },
        "legacyCompatibleSubscriptionOfferId": {
          "type": "string",
          "description": "Subscription offer id which is legacy compatible. The backward compatible subscription offer is returned by the Google Play Billing Library deprecated method querySkuDetailsAsync(). Only one subscription offer can be marked as legacy compatible for a given renewing base plan. To have no Subscription offer as legacy compatible set this field as empty string."
        },
        "resubscribeState": {
          "description": "Whether users should be able to resubscribe to this base plan in Google Play surfaces. Defaults to RESUBSCRIBE_STATE_ACTIVE if not specified.",
          "enumDescriptions": [
            "Unspecified state.",
            "Resubscribe is active.",
            "Resubscribe is inactive."
          ],
          "enum": [
            "RESUBSCRIBE_STATE_UNSPECIFIED",
            "RESUBSCRIBE_STATE_ACTIVE",
            "RESUBSCRIBE_STATE_INACTIVE"
          ],
          "type": "string"
        },
        "gracePeriodDuration": {
          "description": "Grace period of the subscription, specified in ISO 8601 format. Acceptable values are P0D (zero days), P3D (3 days), P7D (7 days), P14D (14 days), and P30D (30 days). If not specified, a default value will be used based on the recurring period duration.",
          "type": "string"
        },
        "legacyCompatible": {
          "description": "Whether the renewing base plan is backward compatible. The backward compatible base plan is returned by the Google Play Billing Library deprecated method querySkuDetailsAsync(). Only one renewing base plan can be marked as legacy compatible for a given subscription.",
          "type": "boolean"
        },
        "prorationMode": {
          "enum": [
            "SUBSCRIPTION_PRORATION_MODE_UNSPECIFIED",
            "SUBSCRIPTION_PRORATION_MODE_CHARGE_ON_NEXT_BILLING_DATE",
            "SUBSCRIPTION_PRORATION_MODE_CHARGE_FULL_PRICE_IMMEDIATELY"
          ],
          "description": "The proration mode for the base plan determines what happens when a user switches to this plan from another base plan. If unspecified, defaults to CHARGE_ON_NEXT_BILLING_DATE.",
          "enumDescriptions": [
            "Unspecified mode.",
            "Users will be charged for their new base plan at the end of their current billing period.",
            "Users will be charged for their new base plan immediately and in full. Any remaining period of their existing subscription will be used to extend the duration of the new billing plan."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "AutoRenewingBasePlanType"
    },
    "ManagedProductTaxAndComplianceSettings": {
      "type": "object",
      "id": "ManagedProductTaxAndComplianceSettings",
      "properties": {
        "eeaWithdrawalRightType": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.",
          "enum": [
            "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED",
            "WITHDRAWAL_RIGHT_DIGITAL_CONTENT",
            "WITHDRAWAL_RIGHT_SERVICE"
          ]
        },
        "taxRateInfoByRegionCode": {
          "additionalProperties": {
            "$ref": "RegionalTaxRateInfo"
          },
          "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\".",
          "type": "object"
        }
      },
      "description": "Details about taxation and legal compliance for managed products."
    },
    "OtherRegionsBasePlanConfig": {
      "id": "OtherRegionsBasePlanConfig",
      "properties": {
        "usdPrice": {
          "description": "Required. Price in USD to use for any new locations Play may launch in.",
          "$ref": "Money"
        },
        "eurPrice": {
          "description": "Required. Price in EUR to use for any new locations Play may launch in.",
          "$ref": "Money"
        },
        "newSubscriberAvailability": {
          "type": "boolean",
          "description": "Whether the base plan is available for new subscribers in any new locations Play may launch in. If not specified, this will default to false."
        }
      },
      "type": "object",
      "description": "Pricing information for any new locations Play may launch in."
    },
    "Apk": {
      "description": "Information about an APK. The resource for ApksService.",
      "type": "object",
      "id": "Apk",
      "properties": {
        "versionCode": {
          "type": "integer",
          "format": "int32",
          "description": "The version code of the APK, as specified in the manifest file."
        },
        "binary": {
          "$ref": "ApkBinary",
          "description": "Information about the binary payload of this APK."
        }
      }
    },
    "OfferTag": {
      "properties": {
        "tag": {
          "description": "Must conform with RFC-1034. That is, this string can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 20 characters.",
          "type": "string"
        }
      },
      "description": "Represents a custom tag specified for base plans and subscription offers.",
      "type": "object",
      "id": "OfferTag"
    },
    "DeviceGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the group."
        },
        "deviceSelectors": {
          "type": "array",
          "items": {
            "$ref": "DeviceSelector"
          },
          "description": "Device selectors for this group. A device matching any of the selectors is included in this group."
        }
      },
      "type": "object",
      "description": "LINT.IfChange A group of devices. A group is defined by a set of device selectors. A device belongs to the group if it matches any selector (logical OR).",
      "id": "DeviceGroup"
    },
    "ImagesDeleteAllResponse": {
      "id": "ImagesDeleteAllResponse",
      "properties": {
        "deleted": {
          "description": "The deleted images.",
          "items": {
            "$ref": "Image"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response for deleting all images."
    },
    "ActivateBasePlanRequest": {
      "description": "Request message for ActivateBasePlan.",
      "id": "ActivateBasePlanRequest",
      "type": "object",
      "properties": {}
    },
    "DeveloperInitiatedCancellation": {
      "properties": {},
      "description": "Information specific to cancellations initiated by developers.",
      "type": "object",
      "id": "DeveloperInitiatedCancellation"
    },
    "SubscriptionCancelSurveyResult": {
      "id": "SubscriptionCancelSurveyResult",
      "type": "object",
      "properties": {
        "cancelSurveyReason": {
          "description": "The cancellation reason the user chose in the survey. Possible values are: 0. Other 1. I don't use this service enough 2. Technical issues 3. Cost-related reasons 4. I found a better app",
          "format": "int32",
          "type": "integer"
        },
        "userInputCancelReason": {
          "description": "The customized input cancel reason from the user. Only present when cancelReason is 0.",
          "type": "string"
        }
      },
      "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey)."
    },
    "Timestamp": {
      "properties": {
        "nanos": {
          "description": "Non-negative fractions of a second at nanosecond resolution. Must be from 0 to 999,999,999 inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "type": "string",
          "description": "Represents seconds of UTC time since Unix epoch.",
          "format": "int64"
        }
      },
      "id": "Timestamp",
      "type": "object",
      "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970."
    },
    "ConvertedOtherRegionsPrice": {
      "id": "ConvertedOtherRegionsPrice",
      "properties": {
        "eurPrice": {
          "$ref": "Money",
          "description": "Price in EUR to use for the \"Other regions\" location exclusive of taxes."
        },
        "usdPrice": {
          "description": "Price in USD to use for the \"Other regions\" location exclusive of taxes.",
          "$ref": "Money"
        }
      },
      "type": "object",
      "description": "Converted other regions prices."
    },
    "SubscriptionPriceChange": {
      "type": "object",
      "description": "Contains the price change information for a subscription that can be used to control the user journey for the price change in the app. This can be in the form of seeking confirmation from the user or tailoring the experience for a successful conversion.",
      "properties": {
        "newPrice": {
          "$ref": "Price",
          "description": "The new price the subscription will renew with if the price change is accepted by the user."
        },
        "state": {
          "description": "The current state of the price change. Possible values are: 0. Outstanding: State for a pending price change waiting for the user to agree. In this state, you can optionally seek confirmation from the user using the In-App API. 1. Accepted: State for an accepted price change that the subscription will renew with unless it's canceled. The price change takes effect on a future date when the subscription renews. Note that the change might not occur when the subscription is renewed next.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "SubscriptionPriceChange"
    },
    "ReplacementCancellation": {
      "type": "object",
      "properties": {},
      "description": "Information specific to cancellations caused by subscription replacement.",
      "id": "ReplacementCancellation"
    },
    "AcquisitionTargetingRule": {
      "id": "AcquisitionTargetingRule",
      "type": "object",
      "description": "Represents a targeting rule of the form: User never had {scope} before.",
      "properties": {
        "scope": {
          "description": "Required. The scope of subscriptions this rule considers. Only allows \"this subscription\" and \"any subscription in app\".",
          "$ref": "TargetingRuleScope"
        }
      }
    },
    "ReviewsReplyRequest": {
      "type": "object",
      "id": "ReviewsReplyRequest",
      "description": "Request to reply to review or update existing reply.",
      "properties": {
        "replyText": {
          "description": "The text to set as the reply. Replies of more than approximately 350 characters will be rejected. HTML tags will be stripped.",
          "type": "string"
        }
      }
    },
    "SubscriptionPurchaseLineItem": {
      "description": "Item-level info for a subscription purchase.",
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The purchased product ID (for example, 'monthly001')."
        },
        "expiryTime": {
          "format": "google-datetime",
          "description": "Time at which the subscription expired or will expire unless the access is extended (ex. renews).",
          "type": "string"
        },
        "prepaidPlan": {
          "$ref": "PrepaidPlan",
          "description": "The item is prepaid."
        },
        "autoRenewingPlan": {
          "$ref": "AutoRenewingPlan",
          "description": "The item is auto renewing."
        }
      },
      "id": "SubscriptionPurchaseLineItem"
    },
    "ArchiveSubscriptionRequest": {
      "type": "object",
      "id": "ArchiveSubscriptionRequest",
      "description": "Request message for ArchiveSubscription.",
      "properties": {}
    },
    "ListUsersResponse": {
      "id": "ListUsersResponse",
      "properties": {
        "users": {
          "type": "array",
          "description": "The resulting users.",
          "items": {
            "$ref": "User"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to pass to subsequent calls in order to retrieve subsequent results. This will not be set if there are no more results to return."
        }
      },
      "type": "object",
      "description": "A response containing one or more users with access to an account."
    },
    "ReviewReplyResult": {
      "id": "ReviewReplyResult",
      "type": "object",
      "properties": {
        "replyText": {
          "type": "string",
          "description": "The reply text that was applied."
        },
        "lastEdited": {
          "description": "The time at which the reply took effect.",
          "$ref": "Timestamp"
        }
      },
      "description": "The result of replying/updating a reply to review."
    },
    "SubscriptionOffer": {
      "id": "SubscriptionOffer",
      "description": "A single, temporary offer",
      "type": "object",
      "properties": {
        "offerTags": {
          "items": {
            "$ref": "OfferTag"
          },
          "description": "List of up to 20 custom tags specified for this offer, and returned to the app through the billing library.",
          "type": "array"
        },
        "productId": {
          "description": "Required. Immutable. The ID of the parent subscription this offer belongs to.",
          "type": "string"
        },
        "regionalConfigs": {
          "description": "Required. The region-specific configuration of this offer. Must contain at least one entry.",
          "type": "array",
          "items": {
            "$ref": "RegionalSubscriptionOfferConfig"
          }
        },
        "phases": {
          "type": "array",
          "description": "Required. The phases of this subscription offer. Must contain at least one entry, and may contain at most five. Users will always receive all these phases in the specified order. Phases may not be added, removed, or reordered after initial creation.",
          "items": {
            "$ref": "SubscriptionOfferPhase"
          }
        },
        "packageName": {
          "type": "string",
          "description": "Required. Immutable. The package name of the app the parent subscription belongs to."
        },
        "offerId": {
          "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.",
          "type": "string"
        },
        "otherRegionsConfig": {
          "description": "The configuration for any new locations Play may launch in the future.",
          "$ref": "OtherRegionsSubscriptionOfferConfig"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "ACTIVE",
            "INACTIVE"
          ],
          "enumDescriptions": [
            "Default value, should never be used.",
            "The subscription offer is not and has never been available to users.",
            "The subscription offer is available to new and existing users.",
            "The subscription offer is not available to new users. Existing users retain access."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active."
        },
        "targeting": {
          "$ref": "SubscriptionOfferTargeting",
          "description": "The requirements that users need to fulfil to be eligible for this offer. Represents the requirements that Play will evaluate to decide whether an offer should be returned. Developers may further filter these offers themselves."
        },
        "basePlanId": {
          "description": "Required. Immutable. The ID of the base plan to which this offer is an extension.",
          "type": "string"
        }
      }
    },
    "CountryTargeting": {
      "properties": {
        "includeRestOfWorld": {
          "type": "boolean",
          "description": "Include \"rest of world\" as well as explicitly targeted countries."
        },
        "countries": {
          "description": "Countries to target, specified as two letter [CLDR codes](https://unicode.org/cldr/charts/latest/supplemental/territory_containment_un_m_49.html).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "CountryTargeting",
      "description": "Country targeting specification."
    },
    "PageInfo": {
      "properties": {
        "startIndex": {
          "description": "Index of the first result returned in the current page.",
          "format": "int32",
          "type": "integer"
        },
        "resultPerPage": {
          "description": "Maximum number of results returned in one page. ! The number of results included in the API response.",
          "type": "integer",
          "format": "int32"
        },
        "totalResults": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of results available on the backend ! The total number of results in the result set."
        }
      },
      "id": "PageInfo",
      "description": "Information about the current page. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned.",
      "type": "object"
    },
    "TrackTargetedCountry": {
      "type": "object",
      "id": "TrackTargetedCountry",
      "properties": {
        "countryCode": {
          "description": "The country to target, as a two-letter CLDR code.",
          "type": "string"
        }
      },
      "description": "Representation of a single country where the contents of a track are available."
    },
    "OtherRegionsSubscriptionOfferPhaseConfig": {
      "description": "Configuration for any new locations Play may launch in for a single offer phase.",
      "type": "object",
      "properties": {
        "relativeDiscount": {
          "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in any new locations Play may launch in.",
          "format": "double",
          "type": "number"
        },
        "otherRegionsPrices": {
          "$ref": "OtherRegionsSubscriptionOfferPhasePrices",
          "description": "The absolute price the user pays for this offer phase. The price must not be smaller than the minimum price allowed for any new locations Play may launch in."
        },
        "absoluteDiscounts": {
          "description": "The absolute amount of money subtracted from the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a $1 absolute discount for a phase of a duration of 3 months would correspond to a price of $2. The resulting price may not be smaller than the minimum price allowed for any new locations Play may launch in.",
          "$ref": "OtherRegionsSubscriptionOfferPhasePrices"
        }
      },
      "id": "OtherRegionsSubscriptionOfferPhaseConfig"
    },
    "Price": {
      "description": "Definition of a price, i.e. currency and units.",
      "type": "object",
      "id": "Price",
      "properties": {
        "currency": {
          "description": "3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java",
          "type": "string"
        },
        "priceMicros": {
          "type": "string",
          "description": "Price in 1/million of the currency base unit, represented as a string."
        }
      }
    },
    "Bundle": {
      "type": "object",
      "id": "Bundle",
      "description": "Information about an app bundle. The resource for BundlesService.",
      "properties": {
        "sha256": {
          "type": "string",
          "description": "A sha256 hash of the upload payload, encoded as a hex string and matching the output of the sha256sum command."
        },
        "sha1": {
          "type": "string",
          "description": "A sha1 hash of the upload payload, encoded as a hex string and matching the output of the sha1sum command."
        },
        "versionCode": {
          "type": "integer",
          "format": "int32",
          "description": "The version code of the Android App Bundle, as specified in the Android App Bundle's base module APK manifest file."
        }
      }
    },
    "InappproductsListResponse": {
      "id": "InappproductsListResponse",
      "properties": {
        "pageInfo": {
          "description": "Deprecated and unset.",
          "$ref": "PageInfo"
        },
        "inappproduct": {
          "items": {
            "$ref": "InAppProduct"
          },
          "type": "array",
          "description": "All in-app products."
        },
        "tokenPagination": {
          "$ref": "TokenPagination",
          "description": "Pagination token, to handle a number of products that is over one page."
        },
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#inappproductsListResponse\")."
        }
      },
      "description": "Response listing all in-app products.",
      "type": "object"
    },
    "PausedStateContext": {
      "properties": {
        "autoResumeTime": {
          "format": "google-datetime",
          "description": "Time at which the subscription will be automatically resumed.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information specific to a subscription in paused state.",
      "id": "PausedStateContext"
    },
    "ListingsListResponse": {
      "type": "object",
      "id": "ListingsListResponse",
      "description": "Response listing all localized listings.",
      "properties": {
        "kind": {
          "description": "The kind of this response (\"androidpublisher#listingsListResponse\").",
          "type": "string"
        },
        "listings": {
          "items": {
            "$ref": "Listing"
          },
          "description": "All localized listings.",
          "type": "array"
        }
      }
    },
    "ListSubscriptionOffersResponse": {
      "id": "ListSubscriptionOffersResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "subscriptionOffers": {
          "description": "The subscription offers from the specified subscription.",
          "items": {
            "$ref": "SubscriptionOffer"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for ListSubscriptionOffers."
    },
    "TracksListResponse": {
      "id": "TracksListResponse",
      "properties": {
        "tracks": {
          "description": "All tracks.",
          "items": {
            "$ref": "Track"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#tracksListResponse\")."
        }
      },
      "description": "Response listing all tracks.",
      "type": "object"
    },
    "DeviceTier": {
      "properties": {
        "level": {
          "format": "int32",
          "type": "integer",
          "description": "The priority level of the tier. Tiers are evaluated in descending order of level: the highest level tier has the highest priority. The highest tier matching a given device is selected for that device. You should use a contiguous range of levels for your tiers in a tier set; tier levels in a tier set must be unique. For instance, if your tier set has 4 tiers (including the global fallback), you should define tiers 1, 2 and 3 in this configuration. Note: tier 0 is implicitly defined as a global fallback and selected for devices that don't match any of the tiers explicitly defined here. You mustn't define level 0 explicitly in this configuration."
        },
        "deviceGroupNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Groups of devices included in this tier. These groups must be defined explicitly under device_groups in this configuration."
        }
      },
      "type": "object",
      "description": "A single device tier. Devices matching any of the device groups in device_group_names are considered to match the tier.",
      "id": "DeviceTier"
    },
    "InAppProduct": {
      "type": "object",
      "id": "InAppProduct",
      "properties": {
        "prices": {
          "description": "Prices per buyer region. None of these can be zero, as in-app products are never free. Map key is region code, as defined by ISO 3166-2.",
          "additionalProperties": {
            "$ref": "Price"
          },
          "type": "object"
        },
        "managedProductTaxesAndComplianceSettings": {
          "description": "Details about taxes and legal compliance. Only applicable to managed products.",
          "$ref": "ManagedProductTaxAndComplianceSettings"
        },
        "sku": {
          "type": "string",
          "description": "Stock-keeping-unit (SKU) of the product, unique within an app."
        },
        "gracePeriod": {
          "type": "string",
          "description": "Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days)."
        },
        "purchaseType": {
          "description": "The type of the product, e.g. a recurring subscription.",
          "enum": [
            "purchaseTypeUnspecified",
            "managedUser",
            "subscription"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified purchase type.",
            "The default product type - one time purchase.",
            "In-app product with a recurring period."
          ]
        },
        "listings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "InAppProductListing"
          },
          "description": "List of localized title and description data. Map key is the language of the localized data, as defined by BCP-47, e.g. \"en-US\"."
        },
        "subscriptionPeriod": {
          "description": "Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year).",
          "type": "string"
        },
        "defaultLanguage": {
          "description": "Default language of the localized data, as defined by BCP-47. e.g. \"en-US\".",
          "type": "string"
        },
        "packageName": {
          "description": "Package name of the parent app.",
          "type": "string"
        },
        "defaultPrice": {
          "description": "Default price. Cannot be zero, as in-app products are never free. Always in the developer's Checkout merchant currency.",
          "$ref": "Price"
        },
        "status": {
          "enumDescriptions": [
            "Unspecified status.",
            "The product is published and active in the store.",
            "The product is not published and therefore inactive in the store."
          ],
          "enum": [
            "statusUnspecified",
            "active",
            "inactive"
          ],
          "description": "The status of the product, e.g. whether it's active.",
          "type": "string"
        },
        "subscriptionTaxesAndComplianceSettings": {
          "$ref": "SubscriptionTaxAndComplianceSettings",
          "description": "Details about taxes and legal compliance. Only applicable to subscription products."
        },
        "trialPeriod": {
          "description": "Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days).",
          "type": "string"
        }
      },
      "description": "An in-app product. The resource for InappproductsService."
    },
    "GeneratedUniversalApk": {
      "description": "Download metadata for a universal APK.",
      "properties": {
        "downloadId": {
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method.",
          "type": "string"
        }
      },
      "id": "GeneratedUniversalApk",
      "type": "object"
    },
    "Money": {
      "type": "object",
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      }
    },
    "IntroductoryPriceInfo": {
      "properties": {
        "introductoryPricePeriod": {
          "type": "string",
          "description": "Introductory price period, specified in ISO 8601 format. Common values are (but not limited to) \"P1W\" (one week), \"P1M\" (one month), \"P3M\" (three months), \"P6M\" (six months), and \"P1Y\" (one year)."
        },
        "introductoryPriceAmountMicros": {
          "description": "Introductory price of the subscription, not including tax. The currency is the same as price_currency_code. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000.",
          "type": "string",
          "format": "int64"
        },
        "introductoryPriceCycles": {
          "format": "int32",
          "type": "integer",
          "description": "The number of billing period to offer introductory pricing."
        },
        "introductoryPriceCurrencyCode": {
          "description": "ISO 4217 currency code for the introductory subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\".",
          "type": "string"
        }
      },
      "description": "Contains the introductory price information for a subscription.",
      "id": "IntroductoryPriceInfo",
      "type": "object"
    },
    "TestPurchase": {
      "type": "object",
      "id": "TestPurchase",
      "properties": {},
      "description": "Whether this subscription purchase is a test purchase."
    },
    "ImagesUploadResponse": {
      "id": "ImagesUploadResponse",
      "type": "object",
      "description": "Response for uploading an image.",
      "properties": {
        "image": {
          "$ref": "Image",
          "description": "The uploaded image."
        }
      }
    },
    "UsesPermission": {
      "type": "object",
      "description": "A permission used by this APK.",
      "properties": {
        "name": {
          "description": "The name of the permission requested.",
          "type": "string"
        },
        "maxSdkVersion": {
          "type": "integer",
          "description": "Optionally, the maximum SDK version for which the permission is required.",
          "format": "int32"
        }
      },
      "id": "UsesPermission"
    },
    "GeneratedApksListResponse": {
      "properties": {
        "generatedApks": {
          "type": "array",
          "description": "All generated APKs, grouped by the APK signing key.",
          "items": {
            "$ref": "GeneratedApksPerSigningKey"
          }
        }
      },
      "id": "GeneratedApksListResponse",
      "type": "object",
      "description": "Response to list generated APKs."
    },
    "DeobfuscationFile": {
      "id": "DeobfuscationFile",
      "description": "Represents a deobfuscation file.",
      "type": "object",
      "properties": {
        "symbolType": {
          "enumDescriptions": [
            "Unspecified deobfuscation file type.",
            "Proguard deobfuscation file type.",
            "Native debugging symbols file type."
          ],
          "type": "string",
          "description": "The type of the deobfuscation file.",
          "enum": [
            "deobfuscationFileTypeUnspecified",
            "proguard",
            "nativeCode"
          ]
        }
      }
    },
    "ApksAddExternallyHostedRequest": {
      "type": "object",
      "description": "Request to create a new externally hosted APK.",
      "id": "ApksAddExternallyHostedRequest",
      "properties": {
        "externallyHostedApk": {
          "$ref": "ExternallyHostedApk",
          "description": "The definition of the externally-hosted APK and where it is located."
        }
      }
    },
    "User": {
      "id": "User",
      "properties": {
        "developerAccountPermissions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED",
              "CAN_SEE_ALL_APPS",
              "CAN_VIEW_FINANCIAL_DATA_GLOBAL",
              "CAN_MANAGE_PERMISSIONS_GLOBAL",
              "CAN_EDIT_GAMES_GLOBAL",
              "CAN_PUBLISH_GAMES_GLOBAL",
              "CAN_REPLY_TO_REVIEWS_GLOBAL",
              "CAN_MANAGE_PUBLIC_APKS_GLOBAL",
              "CAN_MANAGE_TRACK_APKS_GLOBAL",
              "CAN_MANAGE_TRACK_USERS_GLOBAL",
              "CAN_MANAGE_PUBLIC_LISTING_GLOBAL",
              "CAN_MANAGE_DRAFT_APPS_GLOBAL",
              "CAN_CREATE_MANAGED_PLAY_APPS_GLOBAL",
              "CAN_CHANGE_MANAGED_PLAY_SETTING_GLOBAL",
              "CAN_MANAGE_ORDERS_GLOBAL"
            ],
            "enumDescriptions": [
              "Unknown or unspecified permission.",
              "View app information and download bulk reports (read-only).",
              "View financial data, orders, and cancellation survey responses.",
              "Admin (all permissions).",
              "Edit Play Games Services projects.",
              "Publish Play Games Services projects.",
              "Reply to reviews.",
              "Release to production, exclude devices, and use app signing by Google Play.",
              "Release to testing tracks.",
              "Manage testing tracks and edit tester lists.",
              "Manage store presence.",
              "Create, edit, and delete draft apps.",
              "Create and publish private apps to your organization.",
              "Choose whether apps are public, or only available to your organization.",
              "Manage orders and subscriptions."
            ]
          },
          "description": "Permissions for the user which apply across the developer account."
        },
        "name": {
          "type": "string",
          "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\"."
        },
        "grants": {
          "readOnly": true,
          "items": {
            "$ref": "Grant"
          },
          "type": "array",
          "description": "Output only. Per-app permissions for the user."
        },
        "accessState": {
          "type": "string",
          "description": "Output only. The state of the user's access to the Play Console.",
          "readOnly": true,
          "enumDescriptions": [
            "Unknown or unspecified access state.",
            "User is invited but has not yet accepted the invitation.",
            "Invitation has expired.",
            "User has accepted an invitation and has access to the Play Console.",
            "Account access has expired."
          ],
          "enum": [
            "ACCESS_STATE_UNSPECIFIED",
            "INVITED",
            "INVITATION_EXPIRED",
            "ACCESS_GRANTED",
            "ACCESS_EXPIRED"
          ]
        },
        "expirationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the user's access expires, if set. When setting this value, it must always be in the future."
        },
        "email": {
          "description": "Immutable. The user's email address.",
          "type": "string"
        },
        "partial": {
          "readOnly": true,
          "description": "Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also `true` if this user is the account owner. If this field is `true`, it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A user resource."
    },
    "GeneratedApksPerSigningKey": {
      "description": "Download metadata for split, standalone and universal APKs, as well as asset pack slices, signed with a given key.",
      "id": "GeneratedApksPerSigningKey",
      "type": "object",
      "properties": {
        "certificateSha256Hash": {
          "type": "string",
          "description": "SHA256 hash of the APK signing public key certificate."
        },
        "generatedSplitApks": {
          "description": "List of generated split APKs, signed with a key corresponding to certificate_sha256_hash.",
          "items": {
            "$ref": "GeneratedSplitApk"
          },
          "type": "array"
        },
        "generatedStandaloneApks": {
          "description": "List of generated standalone APKs, signed with a key corresponding to certificate_sha256_hash.",
          "type": "array",
          "items": {
            "$ref": "GeneratedStandaloneApk"
          }
        },
        "generatedUniversalApk": {
          "description": "Generated universal APK, signed with a key corresponding to certificate_sha256_hash. This field is not set if no universal APK was generated for this signing key.",
          "$ref": "GeneratedUniversalApk"
        },
        "generatedAssetPackSlices": {
          "description": "List of asset pack slices which will be served for this app bundle, signed with a key corresponding to certificate_sha256_hash.",
          "type": "array",
          "items": {
            "$ref": "GeneratedAssetPackSlice"
          }
        }
      }
    },
    "DeviceSpec": {
      "type": "object",
      "description": "The device spec used to generate a system APK.",
      "id": "DeviceSpec",
      "properties": {
        "screenDensity": {
          "format": "uint32",
          "type": "integer",
          "description": "Screen dpi."
        },
        "supportedAbis": {
          "items": {
            "type": "string"
          },
          "description": "Supported ABI architectures in the order of preference. The values should be the string as reported by the platform, e.g. \"armeabi-v7a\", \"x86_64\".",
          "type": "array"
        },
        "supportedLocales": {
          "items": {
            "type": "string"
          },
          "description": "All installed locales represented as BCP-47 strings, e.g. \"en-US\".",
          "type": "array"
        }
      }
    },
    "MigrateBasePlanPricesResponse": {
      "properties": {},
      "id": "MigrateBasePlanPricesResponse",
      "type": "object",
      "description": "Response message for MigrateBasePlanPrices."
    },
    "CanceledStateContext": {
      "type": "object",
      "id": "CanceledStateContext",
      "description": "Information specific to a subscription in canceled state.",
      "properties": {
        "systemInitiatedCancellation": {
          "$ref": "SystemInitiatedCancellation",
          "description": "Subscription was canceled by the system, for example because of a billing problem."
        },
        "replacementCancellation": {
          "description": "Subscription was replaced by a new subscription.",
          "$ref": "ReplacementCancellation"
        },
        "developerInitiatedCancellation": {
          "description": "Subscription was canceled by the developer.",
          "$ref": "DeveloperInitiatedCancellation"
        },
        "userInitiatedCancellation": {
          "description": "Subscription was canceled by user.",
          "$ref": "UserInitiatedCancellation"
        }
      }
    },
    "BundlesListResponse": {
      "id": "BundlesListResponse",
      "description": "Response listing all app bundles.",
      "type": "object",
      "properties": {
        "bundles": {
          "type": "array",
          "description": "All app bundles.",
          "items": {
            "$ref": "Bundle"
          }
        },
        "kind": {
          "description": "The kind of this response (\"androidpublisher#bundlesListResponse\").",
          "type": "string"
        }
      }
    },
    "SubscriptionListing": {
      "id": "SubscriptionListing",
      "type": "object",
      "description": "The consumer-visible metadata of a subscription.",
      "properties": {
        "description": {
          "description": "The description of this subscription in the language of this listing. Maximum length - 80 characters. Plain text.",
          "type": "string"
        },
        "languageCode": {
          "description": "Required. The language of this listing, as defined by BCP-47, e.g. \"en-US\".",
          "type": "string"
        },
        "title": {
          "description": "Required. The title of this subscription in the language of this listing. Plain text.",
          "type": "string"
        },
        "benefits": {
          "type": "array",
          "description": "A list of benefits shown to the user on platforms such as the Play Store and in restoration flows in the language of this listing. Plain text. Ordered list of at most four benefits.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TrackRelease": {
      "properties": {
        "versionCodes": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "Version codes of all APKs in the release. Must include version codes to retain from previous releases."
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified status.",
            "The release's APKs are not being served to users.",
            "The release's APKs are being served to a fraction of users, determined by 'user_fraction'.",
            "The release's APKs will no longer be served to users. Users who already have these APKs are unaffected.",
            "The release will have no further changes. Its APKs are being served to all users, unless they are eligible to APKs of a more recent release."
          ],
          "description": "The status of the release.",
          "enum": [
            "statusUnspecified",
            "draft",
            "inProgress",
            "halted",
            "completed"
          ]
        },
        "userFraction": {
          "type": "number",
          "description": "Fraction of users who are eligible for a staged release. 0 \u003c fraction \u003c 1. Can only be set when status is \"inProgress\" or \"halted\".",
          "format": "double"
        },
        "inAppUpdatePriority": {
          "description": "In-app update priority of the release. All newly added APKs in the release will be considered at this priority. Can take values in the range [0, 5], with 5 the highest priority. Defaults to 0. in_app_update_priority can not be updated once the release is rolled out. See https://developer.android.com/guide/playcore/in-app-updates.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "The release name. Not required to be unique. If not set, the name is generated from the APK's version_name. If the release contains multiple APKs, the name is generated from the date.",
          "type": "string"
        },
        "countryTargeting": {
          "description": "Restricts a release to a specific set of countries.",
          "$ref": "CountryTargeting"
        },
        "releaseNotes": {
          "description": "A description of what is new in this release.",
          "items": {
            "$ref": "LocalizedText"
          },
          "type": "array"
        }
      },
      "id": "TrackRelease",
      "type": "object",
      "description": "A release within a track."
    },
    "Grant": {
      "type": "object",
      "properties": {
        "packageName": {
          "type": "string",
          "description": "Immutable. The package name of the app. This will be empty for draft apps."
        },
        "appLevelPermissions": {
          "description": "The permissions granted to the user for this app.",
          "items": {
            "enumDescriptions": [
              "Unknown or unspecified permission.",
              "View app information (read-only).",
              "View financial data.",
              "Admin (all permissions).",
              "Reply to reviews.",
              "Release to production, exclude devices, and use app signing by Google Play.",
              "Release to testing tracks.",
              "Manage testing tracks and edit tester lists.",
              "Manage store presence.",
              "Edit and delete draft apps.",
              "Manage orders and subscriptions."
            ],
            "enum": [
              "APP_LEVEL_PERMISSION_UNSPECIFIED",
              "CAN_ACCESS_APP",
              "CAN_VIEW_FINANCIAL_DATA",
              "CAN_MANAGE_PERMISSIONS",
              "CAN_REPLY_TO_REVIEWS",
              "CAN_MANAGE_PUBLIC_APKS",
              "CAN_MANAGE_TRACK_APKS",
              "CAN_MANAGE_TRACK_USERS",
              "CAN_MANAGE_PUBLIC_LISTING",
              "CAN_MANAGE_DRAFT_APPS",
              "CAN_MANAGE_ORDERS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name."
        }
      },
      "id": "Grant",
      "description": "An access grant resource."
    },
    "DeviceTierConfig": {
      "properties": {
        "deviceGroups": {
          "items": {
            "$ref": "DeviceGroup"
          },
          "description": "Definition of device groups for the app.",
          "type": "array"
        },
        "deviceTierSet": {
          "description": "Definition of the set of device tiers for the app.",
          "$ref": "DeviceTierSet"
        },
        "deviceTierConfigId": {
          "description": "Output only. The device tier config ID.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "LINT.IfChange Configuration describing device targeting criteria for the content of an app.",
      "id": "DeviceTierConfig"
    },
    "ApksAddExternallyHostedResponse": {
      "properties": {
        "externallyHostedApk": {
          "$ref": "ExternallyHostedApk",
          "description": "The definition of the externally-hosted APK and where it is located."
        }
      },
      "id": "ApksAddExternallyHostedResponse",
      "type": "object",
      "description": "Response for creating a new externally hosted APK."
    },
    "InternalAppSharingArtifact": {
      "properties": {
        "downloadUrl": {
          "type": "string",
          "description": "The download URL generated for the uploaded artifact. Users that are authorized to download can follow the link to the Play Store app to install it."
        },
        "certificateFingerprint": {
          "type": "string",
          "description": "The sha256 fingerprint of the certificate used to sign the generated artifact."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 hash of the artifact represented as a lowercase hexadecimal number, matching the output of the sha256sum command."
        }
      },
      "description": "An artifact resource which gets created when uploading an APK or Android App Bundle through internal app sharing.",
      "id": "InternalAppSharingArtifact",
      "type": "object"
    },
    "Testers": {
      "properties": {
        "googleGroups": {
          "description": "All testing Google Groups, as email addresses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "The testers of an app. The resource for TestersService. Note: while it is possible in the Play Console UI to add testers via email lists, email lists are not supported by this resource.",
      "id": "Testers"
    },
    "ApkBinary": {
      "type": "object",
      "properties": {
        "sha256": {
          "type": "string",
          "description": "A sha256 hash of the APK payload, encoded as a hex string and matching the output of the sha256sum command."
        },
        "sha1": {
          "description": "A sha1 hash of the APK payload, encoded as a hex string and matching the output of the sha1sum command.",
          "type": "string"
        }
      },
      "description": "Represents the binary payload of an APK.",
      "id": "ApkBinary"
    },
    "GeneratedStandaloneApk": {
      "properties": {
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        },
        "variantId": {
          "description": "ID of the generated variant.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Download metadata for a standalone APK.",
      "id": "GeneratedStandaloneApk",
      "type": "object"
    },
    "SubscriptionOfferPhase": {
      "id": "SubscriptionOfferPhase",
      "properties": {
        "recurrenceCount": {
          "description": "Required. The number of times this phase repeats. If this offer phase is not free, each recurrence charges the user the price of this offer phase.",
          "format": "int32",
          "type": "integer"
        },
        "duration": {
          "type": "string",
          "description": "Required. The duration of a single recurrence of this phase. Specified in ISO 8601 format."
        },
        "regionalConfigs": {
          "items": {
            "$ref": "RegionalSubscriptionOfferPhaseConfig"
          },
          "description": "Required. The region-specific configuration of this offer phase. This list must contain exactly one entry for each region for which the subscription offer has a regional config.",
          "type": "array"
        },
        "otherRegionsConfig": {
          "$ref": "OtherRegionsSubscriptionOfferPhaseConfig",
          "description": "Pricing information for any new locations Play may launch in."
        }
      },
      "type": "object",
      "description": "A single phase of a subscription offer."
    },
    "RegionalPriceMigrationConfig": {
      "type": "object",
      "description": "Configuration for a price migration.",
      "properties": {
        "oldestAllowedPriceVersionTime": {
          "type": "string",
          "description": "Required. The cutoff time for historical prices that subscribers can remain paying. Subscribers who are on a price that was created before this cutoff time will be migrated to the currently-offered price. These subscribers will receive a notification that they will be paying a different price. Subscribers who do not agree to the new price will have their subscription ended at the next renewal.",
          "format": "google-datetime"
        },
        "regionCode": {
          "description": "Required. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".",
          "type": "string"
        }
      },
      "id": "RegionalPriceMigrationConfig"
    },
    "DeactivateSubscriptionOfferRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for DeactivateSubscriptionOffer.",
      "id": "DeactivateSubscriptionOfferRequest"
    },
    "ListDeviceTierConfigsResponse": {
      "id": "ListDeviceTierConfigsResponse",
      "type": "object",
      "properties": {
        "deviceTierConfigs": {
          "items": {
            "$ref": "DeviceTierConfig"
          },
          "type": "array",
          "description": "Device tier configs created by the developer."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response listing existing device tier configs."
    },
    "SubscriptionOfferTargeting": {
      "type": "object",
      "id": "SubscriptionOfferTargeting",
      "properties": {
        "acquisitionRule": {
          "description": "Offer targeting rule for new user acquisition.",
          "$ref": "AcquisitionTargetingRule"
        },
        "upgradeRule": {
          "description": "Offer targeting rule for upgrading users' existing plans.",
          "$ref": "UpgradeTargetingRule"
        }
      },
      "description": "Defines the rule a user needs to satisfy to receive this offer."
    },
    "PrepaidPlan": {
      "id": "PrepaidPlan",
      "description": "Information related to a prepaid plan.",
      "type": "object",
      "properties": {
        "allowExtendAfterTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "If present, this is the time after which top up purchases are allowed for the prepaid plan. Will not be present for expired prepaid plans."
        }
      }
    },
    "OtherRegionsSubscriptionOfferPhasePrices": {
      "properties": {
        "usdPrice": {
          "$ref": "Money",
          "description": "Required. Price in USD to use for any new locations Play may launch in."
        },
        "eurPrice": {
          "$ref": "Money",
          "description": "Required. Price in EUR to use for any new locations Play may launch in."
        }
      },
      "type": "object",
      "id": "OtherRegionsSubscriptionOfferPhasePrices",
      "description": "Pricing information for any new locations Play may launch in."
    },
    "AutoRenewingPlan": {
      "id": "AutoRenewingPlan",
      "description": "Information related to an auto renewing plan.",
      "properties": {
        "autoRenewEnabled": {
          "type": "boolean",
          "description": "If the subscription is currently set to auto-renew, e.g. the user has not canceled the subscription"
        }
      },
      "type": "object"
    },
    "SubscriptionPurchase": {
      "description": "A SubscriptionPurchase resource indicates the status of a user's subscription purchase.",
      "id": "SubscriptionPurchase",
      "type": "object",
      "properties": {
        "countryCode": {
          "description": "ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted.",
          "type": "string"
        },
        "profileId": {
          "type": "string",
          "description": "The Google profile id of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "promotionCode": {
          "description": "The promotion code applied on this purchase. This field is only set if a vanity code promotion is applied when the subscription was purchased.",
          "type": "string"
        },
        "cancelReason": {
          "format": "int32",
          "description": "The reason why a subscription was canceled or is not auto-renewing. Possible values are: 0. User canceled the subscription 1. Subscription was canceled by the system, for example because of a billing problem 2. Subscription was replaced with a new subscription 3. Subscription was canceled by the developer",
          "type": "integer"
        },
        "obfuscatedExternalProfileId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made.",
          "type": "string"
        },
        "autoResumeTimeMillis": {
          "format": "int64",
          "type": "string",
          "description": "Time at which the subscription will be automatically resumed, in milliseconds since the Epoch. Only present if the user has requested to pause the subscription."
        },
        "autoRenewing": {
          "type": "boolean",
          "description": "Whether the subscription will automatically be renewed when it reaches its current expiry time."
        },
        "priceChange": {
          "description": "The latest price change information available. This is present only when there is an upcoming price change for the subscription yet to be applied. Once the subscription renews with the new price or the subscription is canceled, no price change information will be returned.",
          "$ref": "SubscriptionPriceChange"
        },
        "acknowledgementState": {
          "type": "integer",
          "format": "int32",
          "description": "The acknowledgement state of the subscription product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged"
        },
        "developerPayload": {
          "type": "string",
          "description": "A developer-specified string that contains supplemental information about an order."
        },
        "startTimeMillis": {
          "format": "int64",
          "type": "string",
          "description": "Time at which the subscription was granted, in milliseconds since the Epoch."
        },
        "emailAddress": {
          "type": "string",
          "description": "The email address of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "userCancellationTimeMillis": {
          "description": "The time at which the subscription was canceled by the user, in milliseconds since the epoch. Only present if cancelReason is 0.",
          "format": "int64",
          "type": "string"
        },
        "priceAmountMicros": {
          "format": "int64",
          "type": "string",
          "description": "Price of the subscription, For tax exclusive countries, the price doesn't include tax. For tax inclusive countries, the price includes tax. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000."
        },
        "promotionType": {
          "type": "integer",
          "format": "int32",
          "description": "The type of promotion applied on this purchase. This field is only set if a promotion is applied when the subscription was purchased. Possible values are: 0. One time code 1. Vanity code"
        },
        "orderId": {
          "description": "The order id of the latest recurring order associated with the purchase of the subscription. If the subscription was canceled because payment was declined, this will be the order id from the payment declined order.",
          "type": "string"
        },
        "profileName": {
          "type": "string",
          "description": "The profile name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "obfuscatedExternalAccountId": {
          "type": "string",
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Present for the following purchases: * If account linking happened as part of the subscription purchase flow. * It was specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made."
        },
        "priceCurrencyCode": {
          "type": "string",
          "description": "ISO 4217 currency code for the subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\"."
        },
        "purchaseType": {
          "description": "The type of purchase of the subscription. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code)",
          "type": "integer",
          "format": "int32"
        },
        "givenName": {
          "type": "string",
          "description": "The given name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "paymentState": {
          "description": "The payment state of the subscription. Possible values are: 0. Payment pending 1. Payment received 2. Free trial 3. Pending deferred upgrade/downgrade Not present for canceled, expired subscriptions.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "description": "This kind represents a subscriptionPurchase object in the androidpublisher service.",
          "type": "string"
        },
        "externalAccountId": {
          "description": "User account identifier in the third-party service. Only present if account linking happened as part of the subscription purchase flow.",
          "type": "string"
        },
        "linkedPurchaseToken": {
          "description": "The purchase token of the originating purchase if this subscription is one of the following: 0. Re-signup of a canceled but non-lapsed subscription 1. Upgrade/downgrade from a previous subscription For example, suppose a user originally signs up and you receive purchase token X, then the user cancels and goes through the resignup flow (before their subscription lapses) and you receive purchase token Y, and finally the user upgrades their subscription and you receive purchase token Z. If you call this API with purchase token Z, this field will be set to Y. If you call this API with purchase token Y, this field will be set to X. If you call this API with purchase token X, this field will not be set.",
          "type": "string"
        },
        "cancelSurveyResult": {
          "$ref": "SubscriptionCancelSurveyResult",
          "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey)."
        },
        "familyName": {
          "type": "string",
          "description": "The family name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "expiryTimeMillis": {
          "type": "string",
          "description": "Time at which the subscription will expire, in milliseconds since the Epoch.",
          "format": "int64"
        },
        "introductoryPriceInfo": {
          "description": "Introductory price information of the subscription. This is only present when the subscription was purchased with an introductory price. This field does not indicate the subscription is currently in introductory price period.",
          "$ref": "IntroductoryPriceInfo"
        }
      }
    },
    "ExpansionFilesUploadResponse": {
      "description": "Response for uploading an expansion file.",
      "properties": {
        "expansionFile": {
          "$ref": "ExpansionFile",
          "description": "The uploaded expansion file configuration."
        }
      },
      "type": "object",
      "id": "ExpansionFilesUploadResponse"
    },
    "SubscribeWithGoogleInfo": {
      "properties": {
        "familyName": {
          "type": "string",
          "description": "The family name of the user when the subscription was purchased."
        },
        "emailAddress": {
          "description": "The email address of the user when the subscription was purchased.",
          "type": "string"
        },
        "givenName": {
          "description": "The given name of the user when the subscription was purchased.",
          "type": "string"
        },
        "profileId": {
          "description": "The Google profile id of the user when the subscription was purchased.",
          "type": "string"
        },
        "profileName": {
          "type": "string",
          "description": "The profile name of the user when the subscription was purchased."
        }
      },
      "type": "object",
      "description": "Information associated with purchases made with 'Subscribe with Google'.",
      "id": "SubscribeWithGoogleInfo"
    },
    "ApksListResponse": {
      "id": "ApksListResponse",
      "properties": {
        "apks": {
          "description": "All APKs.",
          "items": {
            "$ref": "Apk"
          },
          "type": "array"
        },
        "kind": {
          "description": "The kind of this response (\"androidpublisher#apksListResponse\").",
          "type": "string"
        }
      },
      "description": "Response listing all APKs.",
      "type": "object"
    },
    "LocalizedText": {
      "description": "Localized text in given language.",
      "id": "LocalizedText",
      "properties": {
        "language": {
          "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
          "type": "string"
        },
        "text": {
          "description": "The text in the given language.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelSurveyResult": {
      "properties": {
        "reason": {
          "description": "The reason the user selected in the cancel survey.",
          "enumDescriptions": [
            "Unspecified cancel survey reason.",
            "Not enough usage of the subscription.",
            "Technical issues while using the app.",
            "Cost related issues.",
            "The user found a better app.",
            "Other reasons."
          ],
          "type": "string",
          "enum": [
            "CANCEL_SURVEY_REASON_UNSPECIFIED",
            "CANCEL_SURVEY_REASON_NOT_ENOUGH_USAGE",
            "CANCEL_SURVEY_REASON_TECHNICAL_ISSUES",
            "CANCEL_SURVEY_REASON_COST_RELATED",
            "CANCEL_SURVEY_REASON_FOUND_BETTER_APP",
            "CANCEL_SURVEY_REASON_OTHERS"
          ]
        },
        "reasonUserInput": {
          "type": "string",
          "description": "Only set for CANCEL_SURVEY_REASON_OTHERS. This is the user's freeform response to the survey."
        }
      },
      "type": "object",
      "description": "Result of the cancel survey when the subscription was canceled by the user.",
      "id": "CancelSurveyResult"
    },
    "DeactivateBasePlanRequest": {
      "id": "DeactivateBasePlanRequest",
      "properties": {},
      "type": "object",
      "description": "Request message for DeactivateBasePlan."
    },
    "SubscriptionTaxAndComplianceSettings": {
      "id": "SubscriptionTaxAndComplianceSettings",
      "description": "Details about taxation, Google Play policy and legal compliance for subscription products.",
      "type": "object",
      "properties": {
        "taxRateInfoByRegionCode": {
          "additionalProperties": {
            "$ref": "RegionalTaxRateInfo"
          },
          "type": "object",
          "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\"."
        },
        "eeaWithdrawalRightType": {
          "enum": [
            "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED",
            "WITHDRAWAL_RIGHT_DIGITAL_CONTENT",
            "WITHDRAWAL_RIGHT_SERVICE"
          ],
          "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      }
    },
    "BasePlan": {
      "type": "object",
      "id": "BasePlan",
      "properties": {
        "offerTags": {
          "items": {
            "$ref": "OfferTag"
          },
          "type": "array",
          "description": "List of up to 20 custom tags specified for this base plan, and returned to the app through the billing library. Subscription offers for this base plan will also receive these offer tags in the billing library."
        },
        "autoRenewingBasePlanType": {
          "$ref": "AutoRenewingBasePlanType",
          "description": "Set when the base plan automatically renews at a regular interval."
        },
        "basePlanId": {
          "description": "Required. Immutable. The unique identifier of this base plan. Must be unique within the subscription, and conform with RFC-1034. That is, this ID can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 63 characters.",
          "type": "string"
        },
        "regionalConfigs": {
          "type": "array",
          "items": {
            "$ref": "RegionalBasePlanConfig"
          },
          "description": "Region-specific information for this base plan."
        },
        "otherRegionsConfig": {
          "description": "Pricing information for any new locations Play may launch in the future. If omitted, the BasePlan will not be automatically available any new locations Play may launch in the future.",
          "$ref": "OtherRegionsBasePlanConfig"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "Output only. The state of the base plan, i.e. whether it's active. Draft and inactive base plans can be activated or deleted. Active base plans can be made inactive. Inactive base plans can be canceled. This field cannot be changed by updating the resource. Use the dedicated endpoints instead.",
          "enumDescriptions": [
            "Unspecified state.",
            "The base plan is currently in a draft state, and hasn't been activated. It can be safely deleted at this point.",
            "The base plan is active and available for new subscribers.",
            "The base plan is inactive and only available for existing subscribers."
          ],
          "readOnly": true,
          "type": "string"
        },
        "prepaidBasePlanType": {
          "$ref": "PrepaidBasePlanType",
          "description": "Set when the base plan does not automatically renew at the end of the billing period."
        }
      },
      "description": "A single base plan for a subscription."
    },
    "RegionalSubscriptionOfferConfig": {
      "properties": {
        "regionCode": {
          "type": "string",
          "description": "Required. Immutable. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\"."
        },
        "newSubscriberAvailability": {
          "type": "boolean",
          "description": "Whether the subscription offer in the specified region is available for new subscribers. Existing subscribers will not have their subscription cancelled if this value is set to false. If not specified, this will default to false."
        }
      },
      "type": "object",
      "id": "RegionalSubscriptionOfferConfig",
      "description": "Configuration for a subscription offer in a single region."
    },
    "ActivateSubscriptionOfferRequest": {
      "description": "Request message for ActivateSubscriptionOffer.",
      "id": "ActivateSubscriptionOfferRequest",
      "type": "object",
      "properties": {}
    },
    "UserComment": {
      "description": "User entry from conversation between user and developer.",
      "type": "object",
      "properties": {
        "appVersionCode": {
          "description": "Integer version code of the app as installed at the time the review was written. May be absent.",
          "type": "integer",
          "format": "int32"
        },
        "thumbsDownCount": {
          "format": "int32",
          "description": "Number of users who have given this review a thumbs down.",
          "type": "integer"
        },
        "starRating": {
          "description": "The star rating associated with the review, from 1 to 5.",
          "format": "int32",
          "type": "integer"
        },
        "appVersionName": {
          "description": "String version name of the app as installed at the time the review was written. May be absent.",
          "type": "string"
        },
        "text": {
          "description": "The content of the comment, i.e. review body. In some cases users have been able to write a review with separate title and body; in those cases the title and body are concatenated and separated by a tab character.",
          "type": "string"
        },
        "lastModified": {
          "description": "The last time at which this comment was updated.",
          "$ref": "Timestamp"
        },
        "androidOsVersion": {
          "format": "int32",
          "type": "integer",
          "description": "Integer Android SDK version of the user's device at the time the review was written, e.g. 23 is Marshmallow. May be absent."
        },
        "thumbsUpCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of users who have given this review a thumbs up."
        },
        "reviewerLanguage": {
          "type": "string",
          "description": "Language code for the reviewer. This is taken from the device settings so is not guaranteed to match the language the review is written in. May be absent."
        },
        "deviceMetadata": {
          "description": "Information about the characteristics of the user's device.",
          "$ref": "DeviceMetadata"
        },
        "originalText": {
          "type": "string",
          "description": "Untranslated text of the review, where the review was translated. If the review was not translated this is left blank."
        },
        "device": {
          "type": "string",
          "description": "Codename for the reviewer's device, e.g. klte, flounder. May be absent."
        }
      },
      "id": "UserComment"
    },
    "OtherRegionsSubscriptionOfferConfig": {
      "type": "object",
      "id": "OtherRegionsSubscriptionOfferConfig",
      "properties": {
        "otherRegionsNewSubscriberAvailability": {
          "type": "boolean",
          "description": "Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false."
        }
      },
      "description": "Configuration for any new locations Play may launch in specified on a subscription offer."
    },
    "Subscription": {
      "type": "object",
      "description": "A single subscription for an app.",
      "id": "Subscription",
      "properties": {
        "basePlans": {
          "items": {
            "$ref": "BasePlan"
          },
          "description": "The set of base plans for this subscription. Represents the prices and duration of the subscription if no other offers apply.",
          "type": "array"
        },
        "taxAndComplianceSettings": {
          "description": "Details about taxes and legal compliance.",
          "$ref": "SubscriptionTaxAndComplianceSettings"
        },
        "productId": {
          "description": "Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length.",
          "type": "string"
        },
        "listings": {
          "items": {
            "$ref": "SubscriptionListing"
          },
          "description": "Required. List of localized listings for this subscription. Must contain at least an entry for the default language of the parent app.",
          "type": "array"
        },
        "packageName": {
          "description": "Immutable. Package name of the parent app.",
          "type": "string"
        },
        "archived": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this subscription is archived. Archived subscriptions are not available to any subscriber any longer, cannot be updated, and are not returned in list requests unless the show archived flag is passed in."
        }
      }
    },
    "ConvertRegionPricesResponse": {
      "description": "Response message for ConvertRegionPrices.",
      "properties": {
        "convertedOtherRegionsPrice": {
          "$ref": "ConvertedOtherRegionsPrice",
          "description": "Converted other regions prices in USD and EUR, to use for countries where Play doesn't support a country's local currency."
        },
        "convertedRegionPrices": {
          "additionalProperties": {
            "$ref": "ConvertedRegionPrice"
          },
          "type": "object",
          "description": "Map from region code to converted region price."
        }
      },
      "type": "object",
      "id": "ConvertRegionPricesResponse"
    },
    "RegionalTaxRateInfo": {
      "description": "Specified details about taxation in a given geographical region.",
      "properties": {
        "taxTier": {
          "enum": [
            "TAX_TIER_UNSPECIFIED",
            "TAX_TIER_BOOKS_1",
            "TAX_TIER_NEWS_1",
            "TAX_TIER_NEWS_2",
            "TAX_TIER_MUSIC_OR_AUDIO_1",
            "TAX_TIER_LIVE_OR_BROADCAST_1"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Tax tier to specify reduced tax rate. Developers who sell digital news, magazines, newspapers, books, or audiobooks in various regions may be eligible for reduced tax rates. [Learn more](https://support.google.com/googleplay/android-developer/answer/10463498)."
        },
        "eligibleForStreamingServiceTaxRate": {
          "description": "You must tell us if your app contains streaming products to correctly charge US state and local sales tax. Field only supported in United States.",
          "type": "boolean"
        },
        "streamingTaxType": {
          "enum": [
            "STREAMING_TAX_TYPE_UNSPECIFIED",
            "STREAMING_TAX_TYPE_TELCO_VIDEO_RENTAL",
            "STREAMING_TAX_TYPE_TELCO_VIDEO_SALES",
            "STREAMING_TAX_TYPE_TELCO_VIDEO_MULTI_CHANNEL",
            "STREAMING_TAX_TYPE_TELCO_AUDIO_RENTAL",
            "STREAMING_TAX_TYPE_TELCO_AUDIO_SALES",
            "STREAMING_TAX_TYPE_TELCO_AUDIO_MULTI_CHANNEL"
          ],
          "enumDescriptions": [
            "No telecommunications tax collected.",
            "US-specific telecommunications tax tier for video streaming, on demand, rentals / subscriptions / pay-per-view.",
            "US-specific telecommunications tax tier for video streaming of pre-recorded content like movies, tv shows.",
            "US-specific telecommunications tax tier for video streaming of multi-channel programming.",
            "US-specific telecommunications tax tier for audio streaming, rental / subscription.",
            "US-specific telecommunications tax tier for audio streaming, sale / permanent download.",
            "US-specific telecommunications tax tier for multi channel audio streaming like radio."
          ],
          "description": "To collect communications or amusement taxes in the United States, choose the appropriate tax category. By default Google will determine the collected rate based on the buyer ZIP code. [Learn more](https://support.google.com/googleplay/android-developer/answer/10463498#streaming_tax).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RegionalTaxRateInfo"
    },
    "TokenPagination": {
      "id": "TokenPagination",
      "description": "Pagination information returned by a List operation when token pagination is enabled. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned. When using token pagination, clients should use the next/previous token to get another page of the result. The presence or absence of next/previous token indicates whether a next/previous page is available and provides a mean of accessing this page. ListRequest.page_token should be set to either next_page_token or previous_page_token to access another page.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Tokens to pass to the standard list field 'page_token'. Whenever available, tokens are preferred over manipulating start_index."
        },
        "previousPageToken": {
          "type": "string"
        }
      }
    },
    "ConvertRegionPricesRequest": {
      "properties": {
        "price": {
          "$ref": "Money",
          "description": "The intital price to convert other regions from. Tax exclusive."
        }
      },
      "type": "object",
      "description": "Request message for ConvertRegionPrices.",
      "id": "ConvertRegionPricesRequest"
    },
    "Review": {
      "id": "Review",
      "description": "An Android app review.",
      "type": "object",
      "properties": {
        "comments": {
          "items": {
            "$ref": "Comment"
          },
          "type": "array",
          "description": "A repeated field containing comments for the review."
        },
        "reviewId": {
          "description": "Unique identifier for this review.",
          "type": "string"
        },
        "authorName": {
          "description": "The name of the user who wrote the review.",
          "type": "string"
        }
      }
    },
    "MigrateBasePlanPricesRequest": {
      "type": "object",
      "id": "MigrateBasePlanPricesRequest",
      "description": "Request message for MigrateBasePlanPrices.",
      "properties": {
        "regionalPriceMigrations": {
          "type": "array",
          "items": {
            "$ref": "RegionalPriceMigrationConfig"
          },
          "description": "Required. The regional prices to update."
        },
        "regionsVersion": {
          "$ref": "RegionsVersion",
          "description": "Required. The version of the available regions being used for the regional_price_migrations."
        }
      }
    },
    "RegionalBasePlanConfig": {
      "description": "Configuration for a base plan specific to a region.",
      "properties": {
        "regionCode": {
          "description": "Required. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".",
          "type": "string"
        },
        "newSubscriberAvailability": {
          "description": "Whether the base plan in the specified region is available for new subscribers. Existing subscribers will not have their subscription canceled if this value is set to false. If not specified, this will default to false.",
          "type": "boolean"
        },
        "price": {
          "description": "The price of the base plan in the specified region. Must be set if the base plan is available to new subscribers. Must be set in the currency that is linked to the specified region.",
          "$ref": "Money"
        }
      },
      "type": "object",
      "id": "RegionalBasePlanConfig"
    },
    "DeviceMetadata": {
      "description": "Characteristics of the user's device.",
      "id": "DeviceMetadata",
      "properties": {
        "manufacturer": {
          "description": "Device manufacturer (e.g. Motorola)",
          "type": "string"
        },
        "screenHeightPx": {
          "format": "int32",
          "type": "integer",
          "description": "Screen height in pixels"
        },
        "cpuMake": {
          "description": "Device CPU make, e.g. \"Qualcomm\"",
          "type": "string"
        },
        "cpuModel": {
          "description": "Device CPU model, e.g. \"MSM8974\"",
          "type": "string"
        },
        "deviceClass": {
          "description": "Device class (e.g. tablet)",
          "type": "string"
        },
        "nativePlatform": {
          "type": "string",
          "description": "Comma separated list of native platforms (e.g. \"arm\", \"arm7\")"
        },
        "screenDensityDpi": {
          "format": "int32",
          "type": "integer",
          "description": "Screen density in DPI"
        },
        "productName": {
          "description": "Device model name (e.g. Droid)",
          "type": "string"
        },
        "glEsVersion": {
          "description": "OpenGL version",
          "type": "integer",
          "format": "int32"
        },
        "screenWidthPx": {
          "type": "integer",
          "format": "int32",
          "description": "Screen width in pixels"
        },
        "ramMb": {
          "type": "integer",
          "description": "Device RAM in Megabytes, e.g. \"2048\"",
          "format": "int32"
        }
      },
      "type": "object"
    }
  },
  "discoveryVersion": "v1",
  "id": "androidpublisher:v3",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "ownerName": "Google",
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "name": "androidpublisher",
  "rootUrl": "https://androidpublisher.googleapis.com/",
  "description": "Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. ",
  "revision": "20221025",
  "basePath": "",
  "title": "Google Play Android Developer API",
  "baseUrl": "https://androidpublisher.googleapis.com/",
  "version": "v3",
  "batchPath": "batch",
  "canonicalName": "Android Publisher"
}
